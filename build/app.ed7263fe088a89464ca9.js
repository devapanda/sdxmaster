(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{211:function(module,exports,__webpack_require__){eval("const bip39 = __webpack_require__(842);\n// const hdkey = require('ethereumjs-wallet/hdkey')\nconst { hdkey } = __webpack_require__(119);\nconst ProviderEngine = __webpack_require__(428);\nconst FiltersSubprovider = __webpack_require__(438);\nconst HookedSubprovider = __webpack_require__(440);\nconst RpcSubprovider = __webpack_require__(442);\n// const ProviderSubprovider = require('web3-provider-engine/subproviders/provider.js')\n// const Web3 = require('web3')\nconst Transaction = __webpack_require__(78);\nconst ethUtil = __webpack_require__(70);\n\n/* eslint-disable */\n\nfunction HDWalletProvider(mnemonic, provider_url, address_index = 0, num_addresses = 1, wallet_hdpath = \"m/44'/889'/0'/0/\") {\n    this.mnemonic = mnemonic;\n    this.hdwallet = hdkey.fromMasterSeed(bip39.mnemonicToSeed(mnemonic));\n    this.wallet_hdpath = wallet_hdpath;\n    this.wallets = {};\n    this.addresses = [];\n    for (let i = address_index; i < address_index + num_addresses; i++) {\n        const wallet = this.hdwallet.derivePath(this.wallet_hdpath + '/' + i).getWallet();\n        const addr = '0x' + wallet.getAddress().toString('hex');\n        this.addresses.push(addr);\n        this.wallets[addr] = wallet;\n    }\n\n    const tmp_accounts = this.addresses;\n    const tmp_wallets = this.wallets;\n\n    this.engine = new ProviderEngine();\n    this.engine.addProvider(new HookedSubprovider({\n        getAccounts: function (cb) {\n            cb(null, tmp_accounts);\n        },\n        getPrivateKey: function (address, cb) {\n            if (!tmp_wallets[address]) {\n                return cb('Account not found');\n            } else {\n                cb(null, tmp_wallets[address].getPrivateKey().toString('hex'));\n            }\n        },\n        signTransaction: function (txParams, cb) {\n            let pkey;\n            if (tmp_wallets[txParams.from]) {\n                pkey = tmp_wallets[txParams.from].getPrivateKey();\n            } else {\n                cb('Account not found');\n            }\n            const tx = new Transaction(txParams);\n            tx.sign(pkey);\n            const rawTx = '0x' + tx.serialize().toString('hex');\n            cb(null, rawTx);\n        },\n        signMessage(message, cb) {\n            const dataIfExists = message.data;\n            if (!dataIfExists) {\n                cb('No data to sign');\n            }\n            if (!tmp_wallets[message.from]) {\n                cb('Account not found');\n            }\n            let pkey = tmp_wallets[message.from].getPrivateKey();\n            const dataBuff = ethUtil.toBuffer(dataIfExists);\n            const msgHashBuff = ethUtil.hashPersonalMessage(dataBuff);\n            const sig = ethUtil.ecsign(msgHashBuff, pkey);\n            const rpcSig = ethUtil.toRpcSig(sig.v, sig.r, sig.s);\n            cb(null, rpcSig);\n        }\n    }));\n    this.engine.addProvider(new FiltersSubprovider());\n    // Web3.providers.HttpProvider.prototype.sendAsync = Web3.providers.HttpProvider.prototype.send\n    // this.engine.addProvider(new ProviderSubprovider(new Web3.providers.HttpProvider(provider_url)))\n    this.engine.addProvider(new RpcSubprovider({\n        rpcUrl: provider_url\n    }));\n    this.engine.start(); // Required by the provider engine.\n}\n\nHDWalletProvider.prototype.sendAsync = function () {\n    this.engine.sendAsync.apply(this.engine, arguments);\n};\n\nHDWalletProvider.prototype.send = function () {\n    return this.engine.send.apply(this.engine, arguments);\n};\n\n// returns the address of the given address_index, first checking the cache\nHDWalletProvider.prototype.getAddress = function (idx) {\n    if (!idx) {\n        return this.addresses[0];\n    } else {\n        return this.addresses[idx];\n    }\n};\n\n// returns the addresses cache\nHDWalletProvider.prototype.getAddresses = function () {\n    return this.addresses;\n};\n\nmodule.exports = { HDWalletProvider };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///211\n")},356:function(module,exports){eval("/* (ignored) */\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vYnVmZmVyIChpZ25vcmVkKT8zMzJhIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjM1Ni5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIChpZ25vcmVkKSAqLyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///356\n")},365:function(module,exports){eval("/* (ignored) */\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vdXRpbCAoaWdub3JlZCk/Y2MwNSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIzNjUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiAoaWdub3JlZCkgKi8iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///365\n")},366:function(module,exports){eval("/* (ignored) */\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vdXRpbCAoaWdub3JlZCk/OWZkMyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIzNjYuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiAoaWdub3JlZCkgKi8iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///366\n")},396:function(module,exports){eval("/* (ignored) */\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vY3J5cHRvIChpZ25vcmVkKT9iMzMwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjM5Ni5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIChpZ25vcmVkKSAqLyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///396\n")},45:function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* harmony import */ var bignumber_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);\n/* harmony import */ var bignumber_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bignumber_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _build_contracts_TomoValidator_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(550);\nvar _build_contracts_TomoValidator_json__WEBPACK_IMPORTED_MODULE_1___namespace = /*#__PURE__*/__webpack_require__.t(550, 1);\n\n\n\nconst Helper = {\n    getCurrencySymbol() {\n        return 'SDX';\n    },\n    formatCurrencySymbol(number) {\n        let unit = this.getCurrencySymbol();\n\n        if (unit === null) {\n            unit = 'SDX';\n        }\n        return `${number} ${unit}`;\n    },\n    getDefaultState() {\n        return {\n            items: [],\n            status: 'empty'\n        };\n    },\n    truncate(fullStr, strLen) {\n        if (fullStr.length <= strLen) return fullStr;\n\n        const separator = '...';\n\n        let sepLen = separator.length;\n        let charsToShow = strLen - sepLen;\n        let frontChars = Math.ceil(charsToShow / 2);\n        let backChars = Math.floor(charsToShow / 2);\n\n        return fullStr.substr(0, frontChars) + separator + fullStr.substr(fullStr.length - backChars);\n    },\n    serializeQuery(params, prefix) {\n        const query = Object.keys(params).map(key => {\n            const value = params[key];\n\n            if (params.constructor === Array) {\n                key = `${prefix}[]`;\n            } else {\n                if (params.constructor === Object) {\n                    key = prefix ? `${prefix}[${key}]` : key;\n                }\n            }\n\n            return value === 'object' ? this.serializeQuery(value, key) : `${key}=${encodeURIComponent(value)}`;\n        });\n\n        return [].concat.apply([], query).join('&');\n    },\n    getSecondsToHms(number) {\n        number = parseInt(number, 10);\n        if (number < 0) {\n            return 'Available to withdraw';\n        }\n\n        number = number * 2;\n\n        let h = Math.floor(number / 3600);\n        let m = Math.floor(number % 3600 / 60);\n        let s = Math.floor(number % 3600 % 60);\n\n        if (h < 10) {\n            h = '0' + h;\n        }\n        if (m < 10) {\n            m = '0' + m;\n        }\n        if (s < 10) {\n            s = '0' + s;\n        }\n\n        return `${h}:${m}:${s}`;\n    },\n    checkLongNumber(num) {\n        let str = num.toString().split('.');\n\n        return typeof str[1] !== 'undefined' && str[1].length > 3;\n    },\n    formatNumber(number) {\n        let seps = (number || 0).toString().split('.');\n        seps[0] = seps[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\n        return seps.join('.');\n    },\n    formatBigNumber(num, dp) {\n        if (this.checkLongNumber(num)) {\n            return new bignumber_js__WEBPACK_IMPORTED_MODULE_0___default.a(num).toFormat(dp);\n        }\n\n        return this.formatNumber(num);\n    },\n    TomoValidatorArtifacts: _build_contracts_TomoValidator_json__WEBPACK_IMPORTED_MODULE_1__\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Helper);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvdXRpbHMuanM/ODcwMSJdLCJuYW1lcyI6WyJIZWxwZXIiLCJnZXRDdXJyZW5jeVN5bWJvbCIsImZvcm1hdEN1cnJlbmN5U3ltYm9sIiwibnVtYmVyIiwidW5pdCIsImdldERlZmF1bHRTdGF0ZSIsIml0ZW1zIiwic3RhdHVzIiwidHJ1bmNhdGUiLCJmdWxsU3RyIiwic3RyTGVuIiwibGVuZ3RoIiwic2VwYXJhdG9yIiwic2VwTGVuIiwiY2hhcnNUb1Nob3ciLCJmcm9udENoYXJzIiwiTWF0aCIsImNlaWwiLCJiYWNrQ2hhcnMiLCJmbG9vciIsInN1YnN0ciIsInNlcmlhbGl6ZVF1ZXJ5IiwicGFyYW1zIiwicHJlZml4IiwicXVlcnkiLCJPYmplY3QiLCJrZXlzIiwibWFwIiwia2V5IiwidmFsdWUiLCJjb25zdHJ1Y3RvciIsIkFycmF5IiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiY29uY2F0IiwiYXBwbHkiLCJqb2luIiwiZ2V0U2Vjb25kc1RvSG1zIiwicGFyc2VJbnQiLCJoIiwibSIsInMiLCJjaGVja0xvbmdOdW1iZXIiLCJudW0iLCJzdHIiLCJ0b1N0cmluZyIsInNwbGl0IiwiZm9ybWF0TnVtYmVyIiwic2VwcyIsInJlcGxhY2UiLCJmb3JtYXRCaWdOdW1iZXIiLCJkcCIsIkJpZ051bWJlciIsInRvRm9ybWF0IiwiVG9tb1ZhbGlkYXRvckFydGlmYWN0cyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBOztBQUVBLE1BQU1BLFNBQVM7QUFDWEMsd0JBQXFCO0FBQ2pCLGVBQU8sS0FBUDtBQUNILEtBSFU7QUFJWEMseUJBQXNCQyxNQUF0QixFQUE4QjtBQUMxQixZQUFJQyxPQUFPLEtBQUtILGlCQUFMLEVBQVg7O0FBRUEsWUFBSUcsU0FBUyxJQUFiLEVBQW1CO0FBQ2ZBLG1CQUFPLEtBQVA7QUFDSDtBQUNELGVBQVEsR0FBRUQsTUFBTyxJQUFHQyxJQUFLLEVBQXpCO0FBQ0gsS0FYVTtBQVlYQyxzQkFBbUI7QUFDZixlQUFPO0FBQ0hDLG1CQUFPLEVBREo7QUFFSEMsb0JBQVE7QUFGTCxTQUFQO0FBSUgsS0FqQlU7QUFrQlhDLGFBQVVDLE9BQVYsRUFBbUJDLE1BQW5CLEVBQTJCO0FBQ3ZCLFlBQUlELFFBQVFFLE1BQVIsSUFBa0JELE1BQXRCLEVBQThCLE9BQU9ELE9BQVA7O0FBRTlCLGNBQU1HLFlBQVksS0FBbEI7O0FBRUEsWUFBSUMsU0FBU0QsVUFBVUQsTUFBdkI7QUFDQSxZQUFJRyxjQUFjSixTQUFTRyxNQUEzQjtBQUNBLFlBQUlFLGFBQWFDLEtBQUtDLElBQUwsQ0FBVUgsY0FBYyxDQUF4QixDQUFqQjtBQUNBLFlBQUlJLFlBQVlGLEtBQUtHLEtBQUwsQ0FBV0wsY0FBYyxDQUF6QixDQUFoQjs7QUFFQSxlQUFPTCxRQUFRVyxNQUFSLENBQWUsQ0FBZixFQUFrQkwsVUFBbEIsSUFDQUgsU0FEQSxHQUVBSCxRQUFRVyxNQUFSLENBQWVYLFFBQVFFLE1BQVIsR0FBaUJPLFNBQWhDLENBRlA7QUFHSCxLQS9CVTtBQWdDWEcsbUJBQWdCQyxNQUFoQixFQUF3QkMsTUFBeEIsRUFBZ0M7QUFDNUIsY0FBTUMsUUFBUUMsT0FBT0MsSUFBUCxDQUFZSixNQUFaLEVBQW9CSyxHQUFwQixDQUF5QkMsR0FBRCxJQUFTO0FBQzNDLGtCQUFNQyxRQUFRUCxPQUFPTSxHQUFQLENBQWQ7O0FBRUEsZ0JBQUlOLE9BQU9RLFdBQVAsS0FBdUJDLEtBQTNCLEVBQWtDO0FBQzlCSCxzQkFBTyxHQUFFTCxNQUFPLElBQWhCO0FBQ0gsYUFGRCxNQUVPO0FBQ0gsb0JBQUlELE9BQU9RLFdBQVAsS0FBdUJMLE1BQTNCLEVBQW1DO0FBQy9CRywwQkFBT0wsU0FBVSxHQUFFQSxNQUFPLElBQUdLLEdBQUksR0FBMUIsR0FBK0JBLEdBQXRDO0FBQ0g7QUFDSjs7QUFFRCxtQkFBT0MsVUFBVSxRQUFWLEdBQXFCLEtBQUtSLGNBQUwsQ0FBb0JRLEtBQXBCLEVBQTJCRCxHQUEzQixDQUFyQixHQUF3RCxHQUFFQSxHQUFJLElBQUdJLG1CQUFtQkgsS0FBbkIsQ0FBMEIsRUFBbEc7QUFDSCxTQVphLENBQWQ7O0FBY0EsZUFBTyxHQUFHSSxNQUFILENBQVVDLEtBQVYsQ0FBZ0IsRUFBaEIsRUFBb0JWLEtBQXBCLEVBQTJCVyxJQUEzQixDQUFnQyxHQUFoQyxDQUFQO0FBQ0gsS0FoRFU7QUFpRFhDLG9CQUFrQmpDLE1BQWxCLEVBQTBCO0FBQ3RCQSxpQkFBU2tDLFNBQVNsQyxNQUFULEVBQWlCLEVBQWpCLENBQVQ7QUFDQSxZQUFJQSxTQUFTLENBQWIsRUFBZ0I7QUFDWixtQkFBTyx1QkFBUDtBQUNIOztBQUVEQSxpQkFBU0EsU0FBUyxDQUFsQjs7QUFFQSxZQUFJbUMsSUFBSXRCLEtBQUtHLEtBQUwsQ0FBV2hCLFNBQVMsSUFBcEIsQ0FBUjtBQUNBLFlBQUlvQyxJQUFJdkIsS0FBS0csS0FBTCxDQUFXaEIsU0FBUyxJQUFULEdBQWdCLEVBQTNCLENBQVI7QUFDQSxZQUFJcUMsSUFBSXhCLEtBQUtHLEtBQUwsQ0FBV2hCLFNBQVMsSUFBVCxHQUFnQixFQUEzQixDQUFSOztBQUVBLFlBQUltQyxJQUFJLEVBQVIsRUFBWTtBQUFFQSxnQkFBSSxNQUFNQSxDQUFWO0FBQWE7QUFDM0IsWUFBSUMsSUFBSSxFQUFSLEVBQVk7QUFBRUEsZ0JBQUksTUFBTUEsQ0FBVjtBQUFhO0FBQzNCLFlBQUlDLElBQUksRUFBUixFQUFZO0FBQUVBLGdCQUFJLE1BQU1BLENBQVY7QUFBYTs7QUFFM0IsZUFBUSxHQUFFRixDQUFFLElBQUdDLENBQUUsSUFBR0MsQ0FBRSxFQUF0QjtBQUNILEtBbEVVO0FBbUVYQyxvQkFBaUJDLEdBQWpCLEVBQXNCO0FBQ2xCLFlBQUlDLE1BQU1ELElBQUlFLFFBQUosR0FBZUMsS0FBZixDQUFxQixHQUFyQixDQUFWOztBQUVBLGVBQVEsT0FBT0YsSUFBSSxDQUFKLENBQVAsS0FBa0IsV0FBbEIsSUFBaUNBLElBQUksQ0FBSixFQUFPaEMsTUFBUCxHQUFnQixDQUF6RDtBQUNILEtBdkVVO0FBd0VYbUMsaUJBQWMzQyxNQUFkLEVBQXNCO0FBQ2xCLFlBQUk0QyxPQUFPLENBQUM1QyxVQUFVLENBQVgsRUFBY3lDLFFBQWQsR0FBeUJDLEtBQXpCLENBQStCLEdBQS9CLENBQVg7QUFDQUUsYUFBSyxDQUFMLElBQVVBLEtBQUssQ0FBTCxFQUFRQyxPQUFSLENBQWdCLHVCQUFoQixFQUF5QyxHQUF6QyxDQUFWOztBQUVBLGVBQU9ELEtBQUtaLElBQUwsQ0FBVSxHQUFWLENBQVA7QUFDSCxLQTdFVTtBQThFWGMsb0JBQWlCUCxHQUFqQixFQUFzQlEsRUFBdEIsRUFBMEI7QUFDdEIsWUFBSSxLQUFLVCxlQUFMLENBQXFCQyxHQUFyQixDQUFKLEVBQStCO0FBQzNCLG1CQUFPLElBQUlTLG1EQUFKLENBQWNULEdBQWQsRUFBbUJVLFFBQW5CLENBQTRCRixFQUE1QixDQUFQO0FBQ0g7O0FBRUQsZUFBTyxLQUFLSixZQUFMLENBQWtCSixHQUFsQixDQUFQO0FBQ0gsS0FwRlU7QUFxRlhXLDRGQUFzQkE7QUFyRlgsQ0FBZjs7QUF3RmVyRCwrREFBZiIsImZpbGUiOiI0NS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBCaWdOdW1iZXIgZnJvbSAnYmlnbnVtYmVyLmpzJ1xuaW1wb3J0IFRvbW9WYWxpZGF0b3JBcnRpZmFjdHMgZnJvbSAnLi4vYnVpbGQvY29udHJhY3RzL1RvbW9WYWxpZGF0b3IuanNvbidcblxuY29uc3QgSGVscGVyID0ge1xuICAgIGdldEN1cnJlbmN5U3ltYm9sICgpIHtcbiAgICAgICAgcmV0dXJuICdTRFgnXG4gICAgfSxcbiAgICBmb3JtYXRDdXJyZW5jeVN5bWJvbCAobnVtYmVyKSB7XG4gICAgICAgIGxldCB1bml0ID0gdGhpcy5nZXRDdXJyZW5jeVN5bWJvbCgpXG5cbiAgICAgICAgaWYgKHVuaXQgPT09IG51bGwpIHtcbiAgICAgICAgICAgIHVuaXQgPSAnU0RYJ1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBgJHtudW1iZXJ9ICR7dW5pdH1gXG4gICAgfSxcbiAgICBnZXREZWZhdWx0U3RhdGUgKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgaXRlbXM6IFtdLFxuICAgICAgICAgICAgc3RhdHVzOiAnZW1wdHknXG4gICAgICAgIH1cbiAgICB9LFxuICAgIHRydW5jYXRlIChmdWxsU3RyLCBzdHJMZW4pIHtcbiAgICAgICAgaWYgKGZ1bGxTdHIubGVuZ3RoIDw9IHN0ckxlbikgcmV0dXJuIGZ1bGxTdHJcblxuICAgICAgICBjb25zdCBzZXBhcmF0b3IgPSAnLi4uJ1xuXG4gICAgICAgIGxldCBzZXBMZW4gPSBzZXBhcmF0b3IubGVuZ3RoXG4gICAgICAgIGxldCBjaGFyc1RvU2hvdyA9IHN0ckxlbiAtIHNlcExlblxuICAgICAgICBsZXQgZnJvbnRDaGFycyA9IE1hdGguY2VpbChjaGFyc1RvU2hvdyAvIDIpXG4gICAgICAgIGxldCBiYWNrQ2hhcnMgPSBNYXRoLmZsb29yKGNoYXJzVG9TaG93IC8gMilcblxuICAgICAgICByZXR1cm4gZnVsbFN0ci5zdWJzdHIoMCwgZnJvbnRDaGFycykgK1xuICAgICAgICAgICAgICAgc2VwYXJhdG9yICtcbiAgICAgICAgICAgICAgIGZ1bGxTdHIuc3Vic3RyKGZ1bGxTdHIubGVuZ3RoIC0gYmFja0NoYXJzKVxuICAgIH0sXG4gICAgc2VyaWFsaXplUXVlcnkgKHBhcmFtcywgcHJlZml4KSB7XG4gICAgICAgIGNvbnN0IHF1ZXJ5ID0gT2JqZWN0LmtleXMocGFyYW1zKS5tYXAoKGtleSkgPT4ge1xuICAgICAgICAgICAgY29uc3QgdmFsdWUgPSBwYXJhbXNba2V5XVxuXG4gICAgICAgICAgICBpZiAocGFyYW1zLmNvbnN0cnVjdG9yID09PSBBcnJheSkge1xuICAgICAgICAgICAgICAgIGtleSA9IGAke3ByZWZpeH1bXWBcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaWYgKHBhcmFtcy5jb25zdHJ1Y3RvciA9PT0gT2JqZWN0KSB7XG4gICAgICAgICAgICAgICAgICAgIGtleSA9IChwcmVmaXggPyBgJHtwcmVmaXh9WyR7a2V5fV1gIDoga2V5KVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIHZhbHVlID09PSAnb2JqZWN0JyA/IHRoaXMuc2VyaWFsaXplUXVlcnkodmFsdWUsIGtleSkgOiBgJHtrZXl9PSR7ZW5jb2RlVVJJQ29tcG9uZW50KHZhbHVlKX1gXG4gICAgICAgIH0pXG5cbiAgICAgICAgcmV0dXJuIFtdLmNvbmNhdC5hcHBseShbXSwgcXVlcnkpLmpvaW4oJyYnKVxuICAgIH0sXG4gICAgZ2V0U2Vjb25kc1RvSG1zICAobnVtYmVyKSB7XG4gICAgICAgIG51bWJlciA9IHBhcnNlSW50KG51bWJlciwgMTApXG4gICAgICAgIGlmIChudW1iZXIgPCAwKSB7XG4gICAgICAgICAgICByZXR1cm4gJ0F2YWlsYWJsZSB0byB3aXRoZHJhdydcbiAgICAgICAgfVxuXG4gICAgICAgIG51bWJlciA9IG51bWJlciAqIDJcblxuICAgICAgICBsZXQgaCA9IE1hdGguZmxvb3IobnVtYmVyIC8gMzYwMClcbiAgICAgICAgbGV0IG0gPSBNYXRoLmZsb29yKG51bWJlciAlIDM2MDAgLyA2MClcbiAgICAgICAgbGV0IHMgPSBNYXRoLmZsb29yKG51bWJlciAlIDM2MDAgJSA2MClcblxuICAgICAgICBpZiAoaCA8IDEwKSB7IGggPSAnMCcgKyBoIH1cbiAgICAgICAgaWYgKG0gPCAxMCkgeyBtID0gJzAnICsgbSB9XG4gICAgICAgIGlmIChzIDwgMTApIHsgcyA9ICcwJyArIHMgfVxuXG4gICAgICAgIHJldHVybiBgJHtofToke219OiR7c31gXG4gICAgfSxcbiAgICBjaGVja0xvbmdOdW1iZXIgKG51bSkge1xuICAgICAgICBsZXQgc3RyID0gbnVtLnRvU3RyaW5nKCkuc3BsaXQoJy4nKVxuXG4gICAgICAgIHJldHVybiAodHlwZW9mIHN0clsxXSAhPT0gJ3VuZGVmaW5lZCcgJiYgc3RyWzFdLmxlbmd0aCA+IDMpXG4gICAgfSxcbiAgICBmb3JtYXROdW1iZXIgKG51bWJlcikge1xuICAgICAgICBsZXQgc2VwcyA9IChudW1iZXIgfHwgMCkudG9TdHJpbmcoKS5zcGxpdCgnLicpXG4gICAgICAgIHNlcHNbMF0gPSBzZXBzWzBdLnJlcGxhY2UoL1xcQig/PShcXGR7M30pKyg/IVxcZCkpL2csICcsJylcblxuICAgICAgICByZXR1cm4gc2Vwcy5qb2luKCcuJylcbiAgICB9LFxuICAgIGZvcm1hdEJpZ051bWJlciAobnVtLCBkcCkge1xuICAgICAgICBpZiAodGhpcy5jaGVja0xvbmdOdW1iZXIobnVtKSkge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBCaWdOdW1iZXIobnVtKS50b0Zvcm1hdChkcClcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB0aGlzLmZvcm1hdE51bWJlcihudW0pXG4gICAgfSxcbiAgICBUb21vVmFsaWRhdG9yQXJ0aWZhY3RzXG59XG5cbmV4cG9ydCBkZWZhdWx0IEhlbHBlclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///45\n")},543:function(module){eval('module.exports = JSON.parse("{\\"name\\":\\"sdxmaster\\",\\"version\\":\\"1.6.4\\",\\"description\\":\\"SwapDEX Governance DApp\\",\\"main\\":\\"elect.js\\",\\"scripts\\":{\\"lint\\":\\"eslint --cache ./ --ext .vue --ext .js\\",\\"lint-fix\\":\\"eslint --cache ./ --ext .vue --ext .js --fix\\",\\"nodemon\\":\\"./node_modules/.bin/nodemon index.js\\",\\"crawl-dev\\":\\"./node_modules/.bin/nodemon ./crawl.js\\",\\"server-dev\\":\\"npm run nodemon\\",\\"client-dev\\":\\"cross-env NODE_ENV=development webpack-dev-server --hot --host 0.0.0.0 --port 3000\\",\\"start\\":\\"node index.js\\",\\"crawl\\":\\"node ./crawl.js\\",\\"webpack\\":\\"node ./node_modules/webpack/bin/webpack.js -d --w\\",\\"test\\":\\"./node_modules/.bin/truffle test\\",\\"dev\\":\\"npm run crawl-dev & npm run nodemon & cross-env NODE_ENV=development webpack-dev-server --hot --host 0.0.0.0 --port 3000\\",\\"dev-https\\":\\"npm run crawl-dev & npm run nodemon & cross-env NODE_ENV=development webpack-dev-server --https --key ./sslcert/server.key --cert ./sslcert/server.crt --hot --host 0.0.0.0 --port 3000\\",\\"build\\":\\"cross-env NODE_ENV=production webpack -p --progress --hide-modules\\",\\"abis\\":\\"node ./abis.js\\",\\"coverage\\":\\"./node_modules/.bin/solidity-coverage\\",\\"electron:start\\":\\"electron .\\",\\"dist\\":\\"electron-builder\\",\\"electron-packager:mac\\":\\"electron-packager . tomochain-mac-app --overwrite --platform=darwin --arch=x64 --icon=app/assets/img/icon.icns --prune=true --out=release-builds\\",\\"electron-packager:linux\\":\\"electron-packager . tomochain-linux-app --overwrite --asar=true --platform=linux --arch=x64 --icon=app/assets/img/icon.png --prune=true --out=release-builds\\",\\"electron-packager:win\\":\\"electron-packager . tomochain-windows-app --overwrite --asar=true --platform=win32 --arch=x64 --icon=app/assets/img/icon.ico --prune=true --out=release-builds\\"},\\"repository\\":{\\"type\\":\\"git\\",\\"url\\":\\"git+https://github.com/tomochain/tomomaster.git\\"},\\"author\\":\\"\\",\\"license\\":\\"MIT\\",\\"bugs\\":{\\"url\\":\\"https://github.com/tomochain/tomomaster/issues\\"},\\"homepage\\":\\"https://github.com/tomochain/tomomaster#readme\\",\\"dependencies\\":{\\"@chenfengyuan/vue-qrcode\\":\\"^1.0.0\\",\\"@ledgerhq/hw-app-eth\\":\\"4.24.0\\",\\"@ledgerhq/hw-transport-u2f\\":\\"4.24.0\\",\\"@truffle/hdwallet-provider\\":\\"^1.2.0\\",\\"apicache\\":\\"^1.4.0\\",\\"axios\\":\\"^0.21.1\\",\\"bignumber.js\\":\\"^7.2.1\\",\\"bip39\\":\\"^2.5.0\\",\\"body-parser\\":\\"^1.18.2\\",\\"commander\\":\\"^2.17.1\\",\\"config\\":\\"^1.30.0\\",\\"cors\\":\\"^2.8.5\\",\\"ethereumjs-tx\\":\\"^1.3.7\\",\\"ethereumjs-util\\":\\"^6.0.0\\",\\"express\\":\\"^4.16.3\\",\\"express-validator\\":\\"^5.1.2\\",\\"hdkey\\":\\"^1.1.1\\",\\"helmet\\":\\"^3.21.2\\",\\"js-yaml\\":\\"^3.13.1\\",\\"lodash\\":\\"^4.17.20\\",\\"lru-cache\\":\\"^5.1.1\\",\\"moment\\":\\"^2.22.2\\",\\"mongoose\\":\\"^5.4.11\\",\\"morgan\\":\\"^1.9.1\\",\\"store\\":\\"^2.0.12\\",\\"swagger-ui-express\\":\\"^4.0.2\\",\\"trezor-connect\\":\\"^8.1.5\\",\\"truffle-hdwallet-provider\\":\\"^1.0.12\\",\\"truffle-privatekey-provider\\":\\"^1.5.0\\",\\"twitter\\":\\"^1.7.1\\",\\"url-join\\":\\"^4.0.0\\",\\"uuid\\":\\"^3.3.2\\",\\"vue-clipboards\\":\\"^1.2.4\\",\\"vue-toasted\\":\\"^1.1.24\\",\\"vuex\\":\\"^3.0.1\\",\\"web3\\":\\"^1.0.0-beta.49\\",\\"websocket\\":\\"^1.0.26\\",\\"winston\\":\\"^3.1.0\\"},\\"devDependencies\\":{\\"asar\\":\\"^1.0.0\\",\\"babel-core\\":\\"^6.26.0\\",\\"babel-eslint\\":\\"^8.2.3\\",\\"babel-loader\\":\\"^7.1.4\\",\\"babel-plugin-transform-runtime\\":\\"^6.23.0\\",\\"babel-preset-env\\":\\"^1.6.0\\",\\"babel-preset-stage-3\\":\\"^6.24.1\\",\\"bootstrap-vue\\":\\"2.0.0-rc.18\\",\\"clean-webpack-plugin\\":\\"^3.0.0\\",\\"coveralls\\":\\"^3.0.1\\",\\"cross-env\\":\\"^5.0.5\\",\\"css-loader\\":\\"^2.1.1\\",\\"electron\\":\\"^13.1.4\\",\\"electron-builder\\":\\"^20.28.4\\",\\"electron-packager\\":\\"^15.2.0\\",\\"eslint\\":\\"^4.19.1\\",\\"eslint-config-standard\\":\\"^11.0.0\\",\\"eslint-loader\\":\\"^2.0.0\\",\\"eslint-plugin-babel\\":\\"^5.1.0\\",\\"eslint-plugin-import\\":\\"^2.11.0\\",\\"eslint-plugin-node\\":\\"^6.0.1\\",\\"eslint-plugin-promise\\":\\"^3.7.0\\",\\"eslint-plugin-standard\\":\\"^3.1.0\\",\\"eslint-plugin-vue\\":\\"^4.5.0\\",\\"file-loader\\":\\"^4.0.0\\",\\"ganache-cli\\":\\"^6.12.1\\",\\"html-webpack-plugin\\":\\"^3.2.0\\",\\"is-online\\":\\"^8.0.0\\",\\"node-sass\\":\\"^6.0.1\\",\\"node-sass-glob-importer\\":\\"^5.3.2\\",\\"nodemon\\":\\"^2.0.7\\",\\"postcss-loader\\":\\"^3.0.0\\",\\"sass-loader\\":\\"^7.1.0\\",\\"solidity-coverage\\":\\"^0.7.16\\",\\"style-loader\\":\\"^0.20.3\\",\\"stylelint\\":\\"^13.1.0\\",\\"stylelint-config-standard\\":\\"^20.0.0\\",\\"stylelint-order\\":\\"^4.0.0\\",\\"terser-webpack-plugin\\":\\"^5.0.3\\",\\"truffle\\":\\"^5.3.12\\",\\"url-loader\\":\\"^1.0.1\\",\\"vue\\":\\"^2.5.17\\",\\"vue-analytics\\":\\"^5.15.0\\",\\"vue-loader\\":\\"^15.7.0\\",\\"vue-meta\\":\\"^2.0.3\\",\\"vue-router\\":\\"^3.0.1\\",\\"vue-template-compiler\\":\\"^2.5.16\\",\\"vuelidate\\":\\"^0.6.2\\",\\"webpack\\":\\"^5.40.0\\",\\"webpack-cli\\":\\"^3.2.3\\",\\"webpack-dev-server\\":\\"^3.11.0\\",\\"webpack-merge\\":\\"^4.2.1\\"},\\"build\\":{\\"appId\\":\\"sdxmaster\\",\\"directories\\":{\\"output\\":\\"release-builds\\"},\\"mac\\":{\\"target\\":\\"tar.gz\\",\\"icon\\":\\"./app/assets/img/icon.icns\\"},\\"win\\":{\\"target\\":\\"NSIS\\",\\"icon\\":\\"./app/assets/img/icon.ico\\"},\\"linux\\":{\\"target\\":\\"AppImage\\",\\"icon\\":\\"./app/assets/img/icon.icns\\",\\"category\\":\\"Network\\"}}}");\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiI1NDMuanMiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///543\n')},544:function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _common = __webpack_require__(19);\n\nvar coinbaseRegex = /^0x[a-fA-F0-9]{40}$/;\n\nexports.default = (0, _common.regex)('coinbase', coinbaseRegex);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi92YWxpZGF0b3JzL2NvaW5iYXNlQWRkcmVzcy5qcz80N2EyIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiX2NvbW1vbiIsInJlcXVpcmUiLCJjb2luYmFzZVJlZ2V4IiwiZGVmYXVsdCIsInJlZ2V4Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQUEsT0FBT0MsY0FBUCxDQUFzQkMsT0FBdEIsRUFBK0IsWUFBL0IsRUFBNkM7QUFDekNDLFdBQU87QUFEa0MsQ0FBN0M7O0FBSUEsSUFBSUMsVUFBVUMsbUJBQU9BLENBQUMsRUFBUixDQUFkOztBQUVBLElBQUlDLGdCQUFnQixxQkFBcEI7O0FBRUFKLFFBQVFLLE9BQVIsR0FBa0IsQ0FBQyxHQUFHSCxRQUFRSSxLQUFaLEVBQW1CLFVBQW5CLEVBQStCRixhQUEvQixDQUFsQiIsImZpbGUiOiI1NDQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywge1xuICAgIHZhbHVlOiB0cnVlXG59KVxuXG52YXIgX2NvbW1vbiA9IHJlcXVpcmUoJ3Z1ZWxpZGF0ZS9saWIvdmFsaWRhdG9ycy9jb21tb24nKVxuXG52YXIgY29pbmJhc2VSZWdleCA9IC9eMHhbYS1mQS1GMC05XXs0MH0kL1xuXG5leHBvcnRzLmRlZmF1bHQgPSAoMCwgX2NvbW1vbi5yZWdleCkoJ2NvaW5iYXNlJywgY29pbmJhc2VSZWdleClcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///544\n")},550:function(module){eval('module.exports = JSON.parse("{\\"contractName\\":\\"TomoValidator\\",\\"abi\\":[{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"candidates\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"candidateCount\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"voterWithdrawDelay\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"maxValidatorNumber\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"candidateWithdrawDelay\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"minCandidateCap\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"name\\":\\"_candidates\\",\\"type\\":\\"address[]\\"},{\\"name\\":\\"_caps\\",\\"type\\":\\"uint256[]\\"},{\\"name\\":\\"_firstOwner\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_minCandidateCap\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_maxValidatorNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_candidateWithdrawDelay\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_voterWithdrawDelay\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"constructor\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"_voter\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"_candidate\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"_cap\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Vote\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"_voter\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"_candidate\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"_cap\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Unvote\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"_owner\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"_candidate\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"_cap\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Propose\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"_owner\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"_candidate\\",\\"type\\":\\"address\\"}],\\"name\\":\\"Resign\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"_owner\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"_cap\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Withdraw\\",\\"type\\":\\"event\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_candidate\\",\\"type\\":\\"address\\"}],\\"name\\":\\"propose\\",\\"outputs\\":[],\\"payable\\":true,\\"stateMutability\\":\\"payable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_candidate\\",\\"type\\":\\"address\\"}],\\"name\\":\\"vote\\",\\"outputs\\":[],\\"payable\\":true,\\"stateMutability\\":\\"payable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getCandidates\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_candidate\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getCandidateCap\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_candidate\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getCandidateOwner\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_candidate\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_voter\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getVoterCap\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_candidate\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getVoters\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_candidate\\",\\"type\\":\\"address\\"}],\\"name\\":\\"isCandidate\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getWithdrawBlockNumbers\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getWithdrawCap\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_candidate\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_cap\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"unvote\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_candidate\\",\\"type\\":\\"address\\"}],\\"name\\":\\"resign\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_index\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"withdraw\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"}],\\"bytecode\\":\\"\\",\\"deployedBytecode\\":\\"0x608060405260043610610107576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063012679511461010c57806302aa9be21461014257806306a49fce1461018f57806315febd68146101fb5780632d15cc041461023c5780632f9c4bba146102d4578063302b6872146103405780633477ee2e146103b7578063441a3e701461042457806358e7525f1461045b5780636dd7d8ea146104b2578063a9a981a3146104e8578063a9ff959e14610513578063ae6e43f51461053e578063b642facd14610581578063d09f1ab414610604578063d161c7671461062f578063d51b9e931461065a578063d55b7dff146106b5575b600080fd5b610140600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106e0565b005b34801561014e57600080fd5b5061018d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610adc565b005b34801561019b57600080fd5b506101a461103a565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156101e75780820151818401526020810190506101cc565b505050509050019250505060405180910390f35b34801561020757600080fd5b50610226600480360381019080803590602001909291905050506110c8565b6040518082815260200191505060405180910390f35b34801561024857600080fd5b5061027d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611124565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156102c05780820151818401526020810190506102a5565b505050509050019250505060405180910390f35b3480156102e057600080fd5b506102e96111f1565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561032c578082015181840152602081019050610311565b505050509050019250505060405180910390f35b34801561034c57600080fd5b506103a1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611288565b6040518082815260200191505060405180910390f35b3480156103c357600080fd5b506103e260048036038101908080359060200190929190505050611312565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561043057600080fd5b506104596004803603810190808035906020019092919080359060200190929190505050611350565b005b34801561046757600080fd5b5061049c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611601565b6040518082815260200191505060405180910390f35b6104e6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061164d565b005b3480156104f457600080fd5b506104fd611a28565b6040518082815260200191505060405180910390f35b34801561051f57600080fd5b50610528611a2e565b6040518082815260200191505060405180910390f35b34801561054a57600080fd5b5061057f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a34565b005b34801561058d57600080fd5b506105c2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ff4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561061057600080fd5b50610619612060565b6040518082815260200191505060405180910390f35b34801561063b57600080fd5b50610644612066565b6040518082815260200191505060405180910390f35b34801561066657600080fd5b5061069b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061206c565b604051808215151515815260200191505060405180910390f35b3480156106c157600080fd5b506106ca6120c5565b6040518082815260200191505060405180910390f35b600060055434101515156106f357600080fd5b81600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff1615151561075057600080fd5b6107a534600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546120cb90919063ffffffff16565b915060038390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506060604051908101604052803373ffffffffffffffffffffffffffffffffffffffff16815260200160011515815260200183815250600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff0219169083151502179055506040820151816001015590505034600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061098f60016004546120cb90919063ffffffff16565b600481905550600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000203390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550507f7635f1d87b47fba9f2b09e56eb4be75cca030e0cb179c1602ac9261d39a8f5c1338434604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a1505050565b6000828280600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515610b6e57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff16600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610ca757600554610c9982600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546120e990919063ffffffff16565b10151515610ca657600080fd5b5b610cfc84600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546120e990919063ffffffff16565b600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550610dd484600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546120e990919063ffffffff16565b600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610e6c436008546120cb90919063ffffffff16565b9250610ed3846000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000868152602001908152602001600020546120cb90919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000858152602001908152602001600020819055506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018390806001815401808255809150509060018203906000526020600020016000909192909190915055507faa0e554f781c3c3b2be110a0557f260f11af9a8aa2c64bc1e7a31dbb21e32fa2338686604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a15050505050565b606060038054806020026020016040519081016040528092919081815260200182805480156110be57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611074575b5050505050905090565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000838152602001908152602001600020549050919050565b6060600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156111e557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161119b575b50505050509050919050565b60606000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010180548060200260200160405190810160405280929190818152602001828054801561127e57602002820191906000526020600020905b81548152602001906001019080831161126a575b5050505050905090565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60038181548110151561132157fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000828260008211151561136357600080fd5b81431015151561137257600080fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000848152602001908152602001600020541115156113d357600080fd5b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018281548110151561142257fe5b906000526020600020015414151561143957600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008681526020019081526020016000205492506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000868152602001908152602001600020600090556000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018481548110151561153257fe5b90600052602060002001600090553373ffffffffffffffffffffffffffffffffffffffff166108fc849081150290604051600060405180830381858888f19350505050158015611586573d6000803e3d6000fd5b507ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568338685604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a15050505050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b80600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff1615156116a957600080fd5b6116fe34600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546120cb90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141561187057600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000203390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b61190234600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546120cb90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f66a9138482c99e9baf08860110ef332cc0c23b4a199a53593d8db0fc8f96fbfc338334604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a15050565b60045481565b60085481565b6000806000833373ffffffffffffffffffffffffffffffffffffffff16600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611ad657600080fd5b84600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff161515611b3257600080fd5b6000600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160146101000a81548160ff021916908315150217905550611ba360016004546120e990919063ffffffff16565b600481905550600094505b600380549050851015611c76578573ffffffffffffffffffffffffffffffffffffffff16600386815481101515611be157fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611c6957600385815481101515611c3757fe5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055611c76565b8480600101955050611bae565b600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549350611d4d84600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546120e990919063ffffffff16565b600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506000600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611e2d436007546120cb90919063ffffffff16565b9250611e94846000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000868152602001908152602001600020546120cb90919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000858152602001908152602001600020819055506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018390806001815401808255809150509060018203906000526020600020016000909192909190915055507f4edf3e325d0063213a39f9085522994a1c44bea5f39e7d63ef61260a1e58c6d33387604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1505050505050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60065481565b60075481565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff169050919050565b60055481565b60008082840190508381101515156120df57fe5b8091505092915050565b60008282111515156120f757fe5b8183039050929150505600a165627a7a72305820d8816253a09271aa5cbc97e262d908623354879a9532086e3c96eafe44b426370029\\",\\"sourceMap\\":\\"57:7526:0:-;;;921:1;889:33;;2407:976;8:9:-1;5:2;;;30:1;27;20:12;5:2;2407:976:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2961:9;2706:16;2688:15;:34;;;;2753:19;2732:18;:40;;;;2807:23;2782:22;:48;;;;2861:19;2840:18;:40;;;;2907:38;2926:11;:18;2907:14;;:18;;;;;;:38;;;;;:::i;:::-;2890:14;:55;;;;2973:1;2961:13;;2956:421;2980:11;:18;2976:1;:22;2956:421;;;3019:10;3035:11;3047:1;3035:14;;;;;;;;;;;;;;;;;;3019:31;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;3019:31:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3098:132;;;;;;;;;3138:11;3098:132;;;;;;3180:4;3098:132;;;;;;3207:5;3213:1;3207:8;;;;;;;;;;;;;;;;;;3098:132;;;3064:15;:31;3080:11;3092:1;3080:14;;;;;;;;;;;;;;;;;;3064:31;;;;;;;;;;;;;;;:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3244:6;:22;3251:11;3263:1;3251:14;;;;;;;;;;;;;;;;;;3244:22;;;;;;;;;;;;;;;3272:11;3244:40;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;3244:40:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3351:15;;3298;:30;3314:10;3325:1;3314:13;;;;;;;;;;;;;;;;;;;;;;;;;;;3298:30;;;;;;;;;;;;;;;:37;;:50;3336:11;3298:50;;;;;;;;;;;;;;;:68;;;;3000:3;;;;;;;2956:421;;;2407:976;;;;;;;;57:7526;;1013:129:1;1071:7;1086:9;1102:1;1098;:5;1086:17;;1121:1;1116;:6;;1109:14;;;;;;1136:1;1129:8;;1013:129;;;;;:::o;57:7526:0:-;;;;;;;\\",\\"deployedSourceMap\\":\\"57:7526:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3389:587;;;;;;;;;;;;;;;;;;;;;;;;;;;;5534:666;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5534:666:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4467:90;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4467:90:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4467:90:0;;;;;;;;;;;;;;;;;5384:144;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5384:144:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4995:112;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4995:112:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4995:112:0;;;;;;;;;;;;;;;;;5249:129;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5249:129:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5249:129:0;;;;;;;;;;;;;;;;;4837:152;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4837:152:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;855:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;855:27:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7191:390;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7191:390:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4563:129;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4563:129:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3982:479;;;;;;;;;;;;;;;;;;;;;;;;;;;;889:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;889:33:0;;;;;;;;;;;;;;;;;;;;;;;1046;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1046:33:0;;;;;;;;;;;;;;;;;;;;;;;6206:979;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6206:979:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;4698:133;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4698:133:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;964:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;964:33:0;;;;;;;;;;;;;;;;;;;;;;;1003:37;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1003:37:0;;;;;;;;;;;;;;;;;;;;;;;5113:130;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5113:130:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;928:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;928:30:0;;;;;;;;;;;;;;;;;;;;;;;3389:587;3504:11;1207:15;;1194:9;:28;;1186:37;;;;;;;;3482:10;1698:15;:27;1714:10;1698:27;;;;;;;;;;;;;;;:39;;;;;;;;;;;;1697:40;1689:49;;;;;;;;3518:46;3554:9;3518:15;:27;3534:10;3518:27;;;;;;;;;;;;;;;:31;;;:35;;:46;;;;:::i;:::-;3504:60;;3574:10;3590;3574:27;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;3574:27:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3641:110;;;;;;;;;3677:10;3641:110;;;;;;3714:4;3641:110;;;;;;3737:3;3641:110;;;3611:15;:27;3627:10;3611:27;;;;;;;;;;;;;;;:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3810:9;3761:15;:27;3777:10;3761:27;;;;;;;;;;;;;;;:34;;:46;3796:10;3761:46;;;;;;;;;;;;;;;:58;;;;3846:21;3865:1;3846:14;;:18;;:21;;;;:::i;:::-;3829:14;:38;;;;3877:6;:18;3884:10;3877:18;;;;;;;;;;;;;;;3901:10;3877:35;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;3877:35:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3927:42;3935:10;3947;3959:9;3927:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1233:1;3389:587;;:::o;5534:666::-;5873:27;5605:10;5617:4;1888;1838:15;:27;1854:10;1838:27;;;;;;;;;;;;;;;:34;;:46;1873:10;1838:46;;;;;;;;;;;;;;;;:54;;1830:63;;;;;;;;1944:10;1907:47;;:15;:27;1923:10;1907:27;;;;;;;;;;;;;;;:33;;;;;;;;;;;;:47;;;1903:162;;;2038:15;;1978:56;2029:4;1978:15;:27;1994:10;1978:27;;;;;;;;;;;;;;;:34;;:46;2013:10;1978:46;;;;;;;;;;;;;;;;:50;;:56;;;;:::i;:::-;:75;;1970:84;;;;;;;;1903:162;5667:41;5703:4;5667:15;:27;5683:10;5667:27;;;;;;;;;;;;;;;:31;;;:35;;:41;;;;:::i;:::-;5633:15;:27;5649:10;5633:27;;;;;;;;;;;;;;;:31;;:75;;;;5767:56;5818:4;5767:15;:27;5783:10;5767:27;;;;;;;;;;;;;;;:34;;:46;5802:10;5767:46;;;;;;;;;;;;;;;;:50;;:56;;;;:::i;:::-;5718:15;:27;5734:10;5718:27;;;;;;;;;;;;;;;:34;;:46;5753:10;5718:46;;;;;;;;;;;;;;;:105;;;;5903:36;5926:12;5903:18;;:22;;:36;;;;:::i;:::-;5873:66;;6004:62;6061:4;6004:14;:26;6019:10;6004:26;;;;;;;;;;;;;;;:31;;:52;6036:19;6004:52;;;;;;;;;;;;:56;;:62;;;;:::i;:::-;5949:14;:26;5964:10;5949:26;;;;;;;;;;;;;;;:31;;:52;5981:19;5949:52;;;;;;;;;;;:117;;;;6076:14;:26;6091:10;6076:26;;;;;;;;;;;;;;;:39;;6121:19;6076:65;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;6076:65:0;;;;;;;;;;;;;;;;;;;;;;6157:36;6164:10;6176;6188:4;6157:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5534:666;;;;;:::o;4467:90::-;4512:9;4540:10;4533:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4467:90;:::o;5384:144::-;5450:7;5476:14;:26;5491:10;5476:26;;;;;;;;;;;;;;;:31;;:45;5508:12;5476:45;;;;;;;;;;;;5469:52;;5384:144;;;:::o;4995:112::-;5054:9;5082:6;:18;5089:10;5082:18;;;;;;;;;;;;;;;5075:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4995:112;;;:::o;5249:129::-;5304:9;5332:14;:26;5347:10;5332:26;;;;;;;;;;;;;;;:39;;5325:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5249:129;:::o;4837:152::-;4914:7;4940:15;:27;4956:10;4940:27;;;;;;;;;;;;;;;:34;;:42;4975:6;4940:42;;;;;;;;;;;;;;;;4933:49;;4837:152;;;;:::o;855:27::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7191:390::-;7301:11;7269:12;7283:6;2184:1;2169:12;:16;2161:25;;;;;;;;2220:12;2204;:28;;2196:37;;;;;;;;2299:1;2251:14;:26;2266:10;2251:26;;;;;;;;;;;;;;;:31;;:45;2283:12;2251:45;;;;;;;;;;;;:49;2243:58;;;;;;;;2370:12;2319:14;:26;2334:10;2319:26;;;;;;;;;;;;;;;:39;;2359:6;2319:47;;;;;;;;;;;;;;;;;;:63;2311:72;;;;;;;;7315:14;:26;7330:10;7315:26;;;;;;;;;;;;;;;:31;;:45;7347:12;7315:45;;;;;;;;;;;;7301:59;;7377:14;:26;7392:10;7377:26;;;;;;;;;;;;;;;:31;;:45;7409:12;7377:45;;;;;;;;;;;7370:52;;;7439:14;:26;7454:10;7439:26;;;;;;;;;;;;;;;:39;;7479:6;7439:47;;;;;;;;;;;;;;;;;7432:54;;;7496:10;:19;;:24;7516:3;7496:24;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7496:24:0;7535:39;7544:10;7556:12;7570:3;7535:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7191:390;;;;;:::o;4563:129::-;4628:7;4654:15;:27;4670:10;4654:27;;;;;;;;;;;;;;;:31;;;4647:38;;4563:129;;;:::o;3982:479::-;4052:10;1568:15;:27;1584:10;1568:27;;;;;;;;;;;;;;;:39;;;;;;;;;;;;1560:48;;;;;;;;4108:46;4144:9;4108:15;:27;4124:10;4108:27;;;;;;;;;;;;;;;:31;;;:35;;:46;;;;:::i;:::-;4074:15;:27;4090:10;4074:27;;;;;;;;;;;;;;;:31;;:80;;;;4218:1;4168:15;:27;4184:10;4168:27;;;;;;;;;;;;;;;:34;;:46;4203:10;4168:46;;;;;;;;;;;;;;;;:51;4164:117;;;4235:6;:18;4242:10;4235:18;;;;;;;;;;;;;;;4259:10;4235:35;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;4235:35:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4164:117;4339:61;4390:9;4339:15;:27;4355:10;4339:27;;;;;;;;;;;;;;;:34;;:46;4374:10;4339:46;;;;;;;;;;;;;;;;:50;;:61;;;;:::i;:::-;4290:15;:27;4306:10;4290:27;;;;;;;;;;;;;;;:34;;:46;4325:10;4290:46;;;;;;;;;;;;;;;:110;;;;4415:39;4420:10;4432;4444:9;4415:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3982:479;;:::o;889:33::-;;;;:::o;1046:::-;;;;:::o;6206:979::-;6417:9;6602:11;6862:27;6259:10;1341;1304:47;;:15;:27;1320:10;1304:27;;;;;;;;;;;;;;;:33;;;;;;;;;;;;:47;;;1296:56;;;;;;;;6285:10;1437:15;:27;1453:10;1437:27;;;;;;;;;;;;;;;:39;;;;;;;;;;;;1429:48;;;;;;;;6349:5;6307:15;:27;6323:10;6307:27;;;;;;;;;;;;;;;:39;;;:47;;;;;;;;;;;;;;;;;;6381:21;6400:1;6381:14;;:18;;:21;;;;:::i;:::-;6364:14;:38;;;;6429:1;6417:13;;6412:181;6436:10;:17;;;;6432:1;:21;6412:181;;;6495:10;6478:27;;:10;6489:1;6478:13;;;;;;;;;;;;;;;;;;;;;;;;;;;:27;;;6474:109;;;6532:10;6543:1;6532:13;;;;;;;;;;;;;;;;;;6525:20;;;;;;;;;;;6563:5;;6474:109;6455:3;;;;;;;6412:181;;;6616:15;:27;6632:10;6616:27;;;;;;;;;;;;;;;:34;;:46;6651:10;6616:46;;;;;;;;;;;;;;;;6602:60;;6706:40;6742:3;6706:15;:27;6722:10;6706:27;;;;;;;;;;;;;;;:31;;;:35;;:40;;;;:::i;:::-;6672:15;:27;6688:10;6672:27;;;;;;;;;;;;;;;:31;;:74;;;;6805:1;6756:15;:27;6772:10;6756:27;;;;;;;;;;;;;;;:34;;:46;6791:10;6756:46;;;;;;;;;;;;;;;:50;;;;6892:40;6919:12;6892:22;;:26;;:40;;;;:::i;:::-;6862:70;;6997:61;7054:3;6997:14;:26;7012:10;6997:26;;;;;;;;;;;;;;;:31;;:52;7029:19;6997:52;;;;;;;;;;;;:56;;:61;;;;:::i;:::-;6942:14;:26;6957:10;6942:26;;;;;;;;;;;;;;;:31;;:52;6974:19;6942:52;;;;;;;;;;;:116;;;;7068:14;:26;7083:10;7068:26;;;;;;;;;;;;;;;:39;;7113:19;7068:65;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;7068:65:0;;;;;;;;;;;;;;;;;;;;;;7148:30;7155:10;7167;7148:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1362:1;6206:979;;;;;:::o;4698:133::-;4765:7;4791:15;:27;4807:10;4791:27;;;;;;;;;;;;;;;:33;;;;;;;;;;;;4784:40;;4698:133;;;:::o;964:33::-;;;;:::o;1003:37::-;;;;:::o;5113:130::-;5174:4;5197:15;:27;5213:10;5197:27;;;;;;;;;;;;;;;:39;;;;;;;;;;;;5190:46;;5113:130;;;:::o;928:30::-;;;;:::o;1013:129:1:-;1071:7;1086:9;1102:1;1098;:5;1086:17;;1121:1;1116;:6;;1109:14;;;;;;1136:1;1129:8;;1013:129;;;;;:::o;841:110::-;899:7;926:1;921;:6;;914:14;;;;;;945:1;941;:5;934:12;;841:110;;;;:::o\\",\\"source\\":\\"pragma solidity ^0.4.21;\\\\n\\\\nimport \\\\\\"./libs/SafeMath.sol\\\\\\";\\\\n\\\\ncontract TomoValidator {\\\\n    using SafeMath for uint256;\\\\n\\\\n    event Vote(address _voter, address _candidate, uint256 _cap);\\\\n    event Unvote(address _voter, address _candidate, uint256 _cap);\\\\n    event Propose(address _owner, address _candidate, uint256 _cap);\\\\n    event Resign(address _owner, address _candidate);\\\\n    event Withdraw(address _owner, uint256 _blockNumber, uint256 _cap);\\\\n\\\\n    struct ValidatorState {\\\\n        address owner;\\\\n        bool isCandidate;\\\\n        uint256 cap;\\\\n        mapping(address => uint256) voters;\\\\n    }\\\\n\\\\n    struct WithdrawState {\\\\n      mapping(uint256 => uint256) caps;\\\\n      uint256[] blockNumbers;\\\\n    }\\\\n\\\\n    mapping(address => WithdrawState) withdrawsState;\\\\n\\\\n    mapping(address => ValidatorState) validatorsState;\\\\n    mapping(address => address[]) voters;\\\\n    address[] public candidates;\\\\n\\\\n    uint256 public candidateCount = 0;\\\\n    uint256 public minCandidateCap;\\\\n    uint256 public maxValidatorNumber;\\\\n    uint256 public candidateWithdrawDelay;\\\\n    uint256 public voterWithdrawDelay;\\\\n\\\\n    modifier onlyValidCandidateCap {\\\\n        // anyone can deposit X TOMO to become a candidate\\\\n        require(msg.value >= minCandidateCap);\\\\n        _;\\\\n    }\\\\n\\\\n    modifier onlyOwner(address _candidate) {\\\\n        require(validatorsState[_candidate].owner == msg.sender);\\\\n        _;\\\\n    }\\\\n\\\\n    modifier onlyCandidate(address _candidate) {\\\\n        require(validatorsState[_candidate].isCandidate);\\\\n        _;\\\\n    }\\\\n\\\\n    modifier onlyValidCandidate (address _candidate) {\\\\n        require(validatorsState[_candidate].isCandidate);\\\\n        _;\\\\n    }\\\\n\\\\n    modifier onlyNotCandidate (address _candidate) {\\\\n        require(!validatorsState[_candidate].isCandidate);\\\\n        _;\\\\n    }\\\\n\\\\n    modifier onlyValidVote (address _candidate, uint256 _cap) {\\\\n        require(validatorsState[_candidate].voters[msg.sender] >= _cap);\\\\n        if (validatorsState[_candidate].owner == msg.sender) {\\\\n            require(validatorsState[_candidate].voters[msg.sender].sub(_cap) >= minCandidateCap);\\\\n        }\\\\n        _;\\\\n    }\\\\n\\\\n    modifier onlyValidWithdraw (uint256 _blockNumber, uint _index) {\\\\n        require(_blockNumber > 0);\\\\n        require(block.number >= _blockNumber);\\\\n        require(withdrawsState[msg.sender].caps[_blockNumber] > 0);\\\\n        require(withdrawsState[msg.sender].blockNumbers[_index] == _blockNumber);\\\\n        _;\\\\n    }\\\\n\\\\n    function TomoValidator (\\\\n        address[] _candidates,\\\\n        uint256[] _caps,\\\\n        address _firstOwner,\\\\n        uint256 _minCandidateCap,\\\\n        uint256 _maxValidatorNumber,\\\\n        uint256 _candidateWithdrawDelay,\\\\n        uint256 _voterWithdrawDelay\\\\n    ) public {\\\\n        minCandidateCap = _minCandidateCap;\\\\n        maxValidatorNumber = _maxValidatorNumber;\\\\n        candidateWithdrawDelay = _candidateWithdrawDelay;\\\\n        voterWithdrawDelay = _voterWithdrawDelay;\\\\n        candidateCount = candidateCount.add(_candidates.length);\\\\n\\\\n        for (uint256 i = 0; i < _candidates.length; i++) {\\\\n            candidates.push(_candidates[i]);\\\\n            validatorsState[_candidates[i]] = ValidatorState({\\\\n                owner: _firstOwner,\\\\n                isCandidate: true,\\\\n                cap: _caps[i]\\\\n            });\\\\n            voters[_candidates[i]].push(_firstOwner);\\\\n            validatorsState[candidates[i]].voters[_firstOwner] = minCandidateCap;\\\\n        }\\\\n    }\\\\n\\\\n    function propose(address _candidate) external payable onlyValidCandidateCap onlyNotCandidate(_candidate) {\\\\n        uint256 cap = validatorsState[_candidate].cap.add(msg.value);\\\\n        candidates.push(_candidate);\\\\n        validatorsState[_candidate] = ValidatorState({\\\\n            owner: msg.sender,\\\\n            isCandidate: true,\\\\n            cap: cap\\\\n        });\\\\n        validatorsState[_candidate].voters[msg.sender] = msg.value;\\\\n        candidateCount = candidateCount.add(1);\\\\n        voters[_candidate].push(msg.sender);\\\\n        emit Propose(msg.sender, _candidate, msg.value);\\\\n    }\\\\n\\\\n    function vote(address _candidate) external payable onlyValidCandidate(_candidate) {\\\\n        validatorsState[_candidate].cap = validatorsState[_candidate].cap.add(msg.value);\\\\n        if (validatorsState[_candidate].voters[msg.sender] == 0) {\\\\n            voters[_candidate].push(msg.sender);\\\\n        }\\\\n        validatorsState[_candidate].voters[msg.sender] = validatorsState[_candidate].voters[msg.sender].add(msg.value);\\\\n        emit Vote(msg.sender, _candidate, msg.value);\\\\n    }\\\\n\\\\n    function getCandidates() public view returns(address[]) {\\\\n        return candidates;\\\\n    }\\\\n\\\\n    function getCandidateCap(address _candidate) public view returns(uint256) {\\\\n        return validatorsState[_candidate].cap;\\\\n    }\\\\n\\\\n    function getCandidateOwner(address _candidate) public view returns(address) {\\\\n        return validatorsState[_candidate].owner;\\\\n    }\\\\n\\\\n    function getVoterCap(address _candidate, address _voter) public view returns(uint256) {\\\\n        return validatorsState[_candidate].voters[_voter];\\\\n    }\\\\n\\\\n    function getVoters(address _candidate) public view returns(address[]) {\\\\n        return voters[_candidate];\\\\n    }\\\\n\\\\n    function isCandidate(address _candidate) public view returns(bool) {\\\\n        return validatorsState[_candidate].isCandidate;\\\\n    }\\\\n\\\\n    function getWithdrawBlockNumbers() public view returns(uint256[]) {\\\\n        return withdrawsState[msg.sender].blockNumbers;\\\\n    }\\\\n\\\\n    function getWithdrawCap(uint256 _blockNumber) public view returns(uint256) {\\\\n        return withdrawsState[msg.sender].caps[_blockNumber];\\\\n    }\\\\n\\\\n    function unvote(address _candidate, uint256 _cap) public onlyValidVote(_candidate, _cap) {\\\\n        validatorsState[_candidate].cap = validatorsState[_candidate].cap.sub(_cap);\\\\n        validatorsState[_candidate].voters[msg.sender] = validatorsState[_candidate].voters[msg.sender].sub(_cap);\\\\n\\\\n        // refund after delay X blocks\\\\n        uint256 withdrawBlockNumber = voterWithdrawDelay.add(block.number);\\\\n        withdrawsState[msg.sender].caps[withdrawBlockNumber] = withdrawsState[msg.sender].caps[withdrawBlockNumber].add(_cap);\\\\n        withdrawsState[msg.sender].blockNumbers.push(withdrawBlockNumber);\\\\n\\\\n        emit Unvote(msg.sender, _candidate, _cap);\\\\n    }\\\\n\\\\n    function resign(address _candidate) public onlyOwner(_candidate) onlyCandidate(_candidate) {\\\\n        validatorsState[_candidate].isCandidate = false;\\\\n        candidateCount = candidateCount.sub(1);\\\\n        for (uint256 i = 0; i < candidates.length; i++) {\\\\n            if (candidates[i] == _candidate) {\\\\n                delete candidates[i];\\\\n                break;\\\\n            }\\\\n        }\\\\n        uint256 cap = validatorsState[_candidate].voters[msg.sender];\\\\n        validatorsState[_candidate].cap = validatorsState[_candidate].cap.sub(cap);\\\\n        validatorsState[_candidate].voters[msg.sender] = 0;\\\\n        // refunding after resigning X blocks\\\\n        uint256 withdrawBlockNumber = candidateWithdrawDelay.add(block.number);\\\\n        withdrawsState[msg.sender].caps[withdrawBlockNumber] = withdrawsState[msg.sender].caps[withdrawBlockNumber].add(cap);\\\\n        withdrawsState[msg.sender].blockNumbers.push(withdrawBlockNumber);\\\\n        emit Resign(msg.sender, _candidate);\\\\n    }\\\\n\\\\n    function withdraw(uint256 _blockNumber, uint _index) public onlyValidWithdraw(_blockNumber, _index) {\\\\n        uint256 cap = withdrawsState[msg.sender].caps[_blockNumber];\\\\n        delete withdrawsState[msg.sender].caps[_blockNumber];\\\\n        delete withdrawsState[msg.sender].blockNumbers[_index];\\\\n        msg.sender.transfer(cap);\\\\n        emit Withdraw(msg.sender, _blockNumber, cap);\\\\n    }\\\\n}\\\\n\\",\\"sourcePath\\":\\"/home/vagrant/projects/tomomaster/contracts/TomoValidator.sol\\",\\"ast\\":{\\"absolutePath\\":\\"/home/vagrant/projects/tomomaster/contracts/TomoValidator.sol\\",\\"exportedSymbols\\":{\\"TomoValidator\\":[864]},\\"id\\":865,\\"nodeType\\":\\"SourceUnit\\",\\"nodes\\":[{\\"id\\":1,\\"literals\\":[\\"solidity\\",\\"^\\",\\"0.4\\",\\".21\\"],\\"nodeType\\":\\"PragmaDirective\\",\\"src\\":\\"0:24:0\\"},{\\"absolutePath\\":\\"/home/vagrant/projects/tomomaster/contracts/libs/SafeMath.sol\\",\\"file\\":\\"./libs/SafeMath.sol\\",\\"id\\":2,\\"nodeType\\":\\"ImportDirective\\",\\"scope\\":865,\\"sourceUnit\\":959,\\"src\\":\\"26:29:0\\",\\"symbolAliases\\":[],\\"unitAlias\\":\\"\\"},{\\"baseContracts\\":[],\\"contractDependencies\\":[],\\"contractKind\\":\\"contract\\",\\"documentation\\":null,\\"fullyImplemented\\":true,\\"id\\":864,\\"linearizedBaseContracts\\":[864],\\"name\\":\\"TomoValidator\\",\\"nodeType\\":\\"ContractDefinition\\",\\"nodes\\":[{\\"id\\":5,\\"libraryName\\":{\\"contractScope\\":null,\\"id\\":3,\\"name\\":\\"SafeMath\\",\\"nodeType\\":\\"UserDefinedTypeName\\",\\"referencedDeclaration\\":958,\\"src\\":\\"92:8:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_contract$_SafeMath_$958\\",\\"typeString\\":\\"library SafeMath\\"}},\\"nodeType\\":\\"UsingForDirective\\",\\"src\\":\\"86:27:0\\",\\"typeName\\":{\\"id\\":4,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"105:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}}},{\\"anonymous\\":false,\\"documentation\\":null,\\"id\\":13,\\"name\\":\\"Vote\\",\\"nodeType\\":\\"EventDefinition\\",\\"parameters\\":{\\"id\\":12,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":7,\\"indexed\\":false,\\"name\\":\\"_voter\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":13,\\"src\\":\\"130:14:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":6,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"130:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":9,\\"indexed\\":false,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":13,\\"src\\":\\"146:18:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":8,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"146:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":11,\\"indexed\\":false,\\"name\\":\\"_cap\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":13,\\"src\\":\\"166:12:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":10,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"166:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"129:50:0\\"},\\"src\\":\\"119:61:0\\"},{\\"anonymous\\":false,\\"documentation\\":null,\\"id\\":21,\\"name\\":\\"Unvote\\",\\"nodeType\\":\\"EventDefinition\\",\\"parameters\\":{\\"id\\":20,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":15,\\"indexed\\":false,\\"name\\":\\"_voter\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":21,\\"src\\":\\"198:14:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":14,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"198:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":17,\\"indexed\\":false,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":21,\\"src\\":\\"214:18:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":16,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"214:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":19,\\"indexed\\":false,\\"name\\":\\"_cap\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":21,\\"src\\":\\"234:12:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":18,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"234:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"197:50:0\\"},\\"src\\":\\"185:63:0\\"},{\\"anonymous\\":false,\\"documentation\\":null,\\"id\\":29,\\"name\\":\\"Propose\\",\\"nodeType\\":\\"EventDefinition\\",\\"parameters\\":{\\"id\\":28,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":23,\\"indexed\\":false,\\"name\\":\\"_owner\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":29,\\"src\\":\\"267:14:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":22,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"267:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":25,\\"indexed\\":false,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":29,\\"src\\":\\"283:18:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":24,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"283:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":27,\\"indexed\\":false,\\"name\\":\\"_cap\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":29,\\"src\\":\\"303:12:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":26,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"303:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"266:50:0\\"},\\"src\\":\\"253:64:0\\"},{\\"anonymous\\":false,\\"documentation\\":null,\\"id\\":35,\\"name\\":\\"Resign\\",\\"nodeType\\":\\"EventDefinition\\",\\"parameters\\":{\\"id\\":34,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":31,\\"indexed\\":false,\\"name\\":\\"_owner\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":35,\\"src\\":\\"335:14:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":30,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"335:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":33,\\"indexed\\":false,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":35,\\"src\\":\\"351:18:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":32,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"351:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"334:36:0\\"},\\"src\\":\\"322:49:0\\"},{\\"anonymous\\":false,\\"documentation\\":null,\\"id\\":43,\\"name\\":\\"Withdraw\\",\\"nodeType\\":\\"EventDefinition\\",\\"parameters\\":{\\"id\\":42,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":37,\\"indexed\\":false,\\"name\\":\\"_owner\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":43,\\"src\\":\\"391:14:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":36,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"391:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":39,\\"indexed\\":false,\\"name\\":\\"_blockNumber\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":43,\\"src\\":\\"407:20:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":38,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"407:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":41,\\"indexed\\":false,\\"name\\":\\"_cap\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":43,\\"src\\":\\"429:12:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":40,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"429:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"390:52:0\\"},\\"src\\":\\"376:67:0\\"},{\\"canonicalName\\":\\"TomoValidator.ValidatorState\\",\\"id\\":54,\\"members\\":[{\\"constant\\":false,\\"id\\":45,\\"name\\":\\"owner\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":54,\\"src\\":\\"481:13:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":44,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"481:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":47,\\"name\\":\\"isCandidate\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":54,\\"src\\":\\"504:16:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"},\\"typeName\\":{\\"id\\":46,\\"name\\":\\"bool\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"504:4:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":49,\\"name\\":\\"cap\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":54,\\"src\\":\\"530:11:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":48,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"530:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":53,\\"name\\":\\"voters\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":54,\\"src\\":\\"551:34:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_uint256_$\\",\\"typeString\\":\\"mapping(address => uint256)\\"},\\"typeName\\":{\\"id\\":52,\\"keyType\\":{\\"id\\":50,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"559:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"nodeType\\":\\"Mapping\\",\\"src\\":\\"551:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_uint256_$\\",\\"typeString\\":\\"mapping(address => uint256)\\"},\\"valueType\\":{\\"id\\":51,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"570:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"name\\":\\"ValidatorState\\",\\"nodeType\\":\\"StructDefinition\\",\\"scope\\":864,\\"src\\":\\"449:143:0\\",\\"visibility\\":\\"public\\"},{\\"canonicalName\\":\\"TomoValidator.WithdrawState\\",\\"id\\":62,\\"members\\":[{\\"constant\\":false,\\"id\\":58,\\"name\\":\\"caps\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":62,\\"src\\":\\"627:32:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_uint256_$_t_uint256_$\\",\\"typeString\\":\\"mapping(uint256 => uint256)\\"},\\"typeName\\":{\\"id\\":57,\\"keyType\\":{\\"id\\":55,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"635:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"Mapping\\",\\"src\\":\\"627:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_uint256_$_t_uint256_$\\",\\"typeString\\":\\"mapping(uint256 => uint256)\\"},\\"valueType\\":{\\"id\\":56,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"646:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":61,\\"name\\":\\"blockNumbers\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":62,\\"src\\":\\"667:22:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_uint256_$dyn_storage_ptr\\",\\"typeString\\":\\"uint256[]\\"},\\"typeName\\":{\\"baseType\\":{\\"id\\":59,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"667:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":60,\\"length\\":null,\\"nodeType\\":\\"ArrayTypeName\\",\\"src\\":\\"667:9:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_uint256_$dyn_storage_ptr\\",\\"typeString\\":\\"uint256[]\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"name\\":\\"WithdrawState\\",\\"nodeType\\":\\"StructDefinition\\",\\"scope\\":864,\\"src\\":\\"598:98:0\\",\\"visibility\\":\\"public\\"},{\\"constant\\":false,\\"id\\":66,\\"name\\":\\"withdrawsState\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":864,\\"src\\":\\"702:48:0\\",\\"stateVariable\\":true,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_WithdrawState_$62_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.WithdrawState)\\"},\\"typeName\\":{\\"id\\":65,\\"keyType\\":{\\"id\\":63,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"710:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"nodeType\\":\\"Mapping\\",\\"src\\":\\"702:33:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_WithdrawState_$62_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.WithdrawState)\\"},\\"valueType\\":{\\"contractScope\\":null,\\"id\\":64,\\"name\\":\\"WithdrawState\\",\\"nodeType\\":\\"UserDefinedTypeName\\",\\"referencedDeclaration\\":62,\\"src\\":\\"721:13:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_WithdrawState_$62_storage_ptr\\",\\"typeString\\":\\"struct TomoValidator.WithdrawState\\"}}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":70,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":864,\\"src\\":\\"757:50:0\\",\\"stateVariable\\":true,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState)\\"},\\"typeName\\":{\\"id\\":69,\\"keyType\\":{\\"id\\":67,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"765:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"nodeType\\":\\"Mapping\\",\\"src\\":\\"757:34:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState)\\"},\\"valueType\\":{\\"contractScope\\":null,\\"id\\":68,\\"name\\":\\"ValidatorState\\",\\"nodeType\\":\\"UserDefinedTypeName\\",\\"referencedDeclaration\\":54,\\"src\\":\\"776:14:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage_ptr\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState\\"}}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":75,\\"name\\":\\"voters\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":864,\\"src\\":\\"813:36:0\\",\\"stateVariable\\":true,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$\\",\\"typeString\\":\\"mapping(address => address[])\\"},\\"typeName\\":{\\"id\\":74,\\"keyType\\":{\\"id\\":71,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"821:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"nodeType\\":\\"Mapping\\",\\"src\\":\\"813:29:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$\\",\\"typeString\\":\\"mapping(address => address[])\\"},\\"valueType\\":{\\"baseType\\":{\\"id\\":72,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"832:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"id\\":73,\\"length\\":null,\\"nodeType\\":\\"ArrayTypeName\\",\\"src\\":\\"832:9:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_address_$dyn_storage_ptr\\",\\"typeString\\":\\"address[]\\"}}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":78,\\"name\\":\\"candidates\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":864,\\"src\\":\\"855:27:0\\",\\"stateVariable\\":true,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_address_$dyn_storage\\",\\"typeString\\":\\"address[]\\"},\\"typeName\\":{\\"baseType\\":{\\"id\\":76,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"855:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"id\\":77,\\"length\\":null,\\"nodeType\\":\\"ArrayTypeName\\",\\"src\\":\\"855:9:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_address_$dyn_storage_ptr\\",\\"typeString\\":\\"address[]\\"}},\\"value\\":null,\\"visibility\\":\\"public\\"},{\\"constant\\":false,\\"id\\":81,\\"name\\":\\"candidateCount\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":864,\\"src\\":\\"889:33:0\\",\\"stateVariable\\":true,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":79,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"889:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":{\\"argumentTypes\\":null,\\"hexValue\\":\\"30\\",\\"id\\":80,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":true,\\"kind\\":\\"number\\",\\"lValueRequested\\":false,\\"nodeType\\":\\"Literal\\",\\"src\\":\\"921:1:0\\",\\"subdenomination\\":null,\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_rational_0_by_1\\",\\"typeString\\":\\"int_const 0\\"},\\"value\\":\\"0\\"},\\"visibility\\":\\"public\\"},{\\"constant\\":false,\\"id\\":83,\\"name\\":\\"minCandidateCap\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":864,\\"src\\":\\"928:30:0\\",\\"stateVariable\\":true,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":82,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"928:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"public\\"},{\\"constant\\":false,\\"id\\":85,\\"name\\":\\"maxValidatorNumber\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":864,\\"src\\":\\"964:33:0\\",\\"stateVariable\\":true,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":84,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"964:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"public\\"},{\\"constant\\":false,\\"id\\":87,\\"name\\":\\"candidateWithdrawDelay\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":864,\\"src\\":\\"1003:37:0\\",\\"stateVariable\\":true,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":86,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"1003:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"public\\"},{\\"constant\\":false,\\"id\\":89,\\"name\\":\\"voterWithdrawDelay\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":864,\\"src\\":\\"1046:33:0\\",\\"stateVariable\\":true,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":88,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"1046:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"public\\"},{\\"body\\":{\\"id\\":99,\\"nodeType\\":\\"Block\\",\\"src\\":\\"1117:124:0\\",\\"statements\\":[{\\"expression\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"commonType\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"id\\":95,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":92,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"1194:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":93,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"value\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"1194:9:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"BinaryOperation\\",\\"operator\\":\\">=\\",\\"rightExpression\\":{\\"argumentTypes\\":null,\\"id\\":94,\\"name\\":\\"minCandidateCap\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":83,\\"src\\":\\"1207:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"src\\":\\"1194:28:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}],\\"id\\":91,\\"name\\":\\"require\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[976,977],\\"referencedDeclaration\\":976,\\"src\\":\\"1186:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_require_pure$_t_bool_$returns$__$\\",\\"typeString\\":\\"function (bool) pure\\"}},\\"id\\":96,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"1186:37:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_tuple$__$\\",\\"typeString\\":\\"tuple()\\"}},\\"id\\":97,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"1186:37:0\\"},{\\"id\\":98,\\"nodeType\\":\\"PlaceholderStatement\\",\\"src\\":\\"1233:1:0\\"}]},\\"documentation\\":null,\\"id\\":100,\\"name\\":\\"onlyValidCandidateCap\\",\\"nodeType\\":\\"ModifierDefinition\\",\\"parameters\\":{\\"id\\":90,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[],\\"src\\":\\"1117:0:0\\"},\\"src\\":\\"1086:155:0\\",\\"visibility\\":\\"internal\\"},{\\"body\\":{\\"id\\":115,\\"nodeType\\":\\"Block\\",\\"src\\":\\"1286:84:0\\",\\"statements\\":[{\\"expression\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"commonType\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"id\\":111,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":105,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"1304:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":107,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":106,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":102,\\"src\\":\\"1320:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"1304:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":108,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"owner\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":45,\\"src\\":\\"1304:33:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"nodeType\\":\\"BinaryOperation\\",\\"operator\\":\\"==\\",\\"rightExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":109,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"1341:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":110,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"1341:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"src\\":\\"1304:47:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}],\\"id\\":104,\\"name\\":\\"require\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[976,977],\\"referencedDeclaration\\":976,\\"src\\":\\"1296:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_require_pure$_t_bool_$returns$__$\\",\\"typeString\\":\\"function (bool) pure\\"}},\\"id\\":112,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"1296:56:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_tuple$__$\\",\\"typeString\\":\\"tuple()\\"}},\\"id\\":113,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"1296:56:0\\"},{\\"id\\":114,\\"nodeType\\":\\"PlaceholderStatement\\",\\"src\\":\\"1362:1:0\\"}]},\\"documentation\\":null,\\"id\\":116,\\"name\\":\\"onlyOwner\\",\\"nodeType\\":\\"ModifierDefinition\\",\\"parameters\\":{\\"id\\":103,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":102,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":116,\\"src\\":\\"1266:18:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":101,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"1266:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"1265:20:0\\"},\\"src\\":\\"1247:123:0\\",\\"visibility\\":\\"internal\\"},{\\"body\\":{\\"id\\":128,\\"nodeType\\":\\"Block\\",\\"src\\":\\"1419:76:0\\",\\"statements\\":[{\\"expression\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":121,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"1437:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":123,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":122,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":118,\\"src\\":\\"1453:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"1437:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":124,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"isCandidate\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":47,\\"src\\":\\"1437:39:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}],\\"id\\":120,\\"name\\":\\"require\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[976,977],\\"referencedDeclaration\\":976,\\"src\\":\\"1429:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_require_pure$_t_bool_$returns$__$\\",\\"typeString\\":\\"function (bool) pure\\"}},\\"id\\":125,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"1429:48:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_tuple$__$\\",\\"typeString\\":\\"tuple()\\"}},\\"id\\":126,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"1429:48:0\\"},{\\"id\\":127,\\"nodeType\\":\\"PlaceholderStatement\\",\\"src\\":\\"1487:1:0\\"}]},\\"documentation\\":null,\\"id\\":129,\\"name\\":\\"onlyCandidate\\",\\"nodeType\\":\\"ModifierDefinition\\",\\"parameters\\":{\\"id\\":119,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":118,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":129,\\"src\\":\\"1399:18:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":117,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"1399:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"1398:20:0\\"},\\"src\\":\\"1376:119:0\\",\\"visibility\\":\\"internal\\"},{\\"body\\":{\\"id\\":141,\\"nodeType\\":\\"Block\\",\\"src\\":\\"1550:76:0\\",\\"statements\\":[{\\"expression\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":134,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"1568:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":136,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":135,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":131,\\"src\\":\\"1584:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"1568:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":137,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"isCandidate\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":47,\\"src\\":\\"1568:39:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}],\\"id\\":133,\\"name\\":\\"require\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[976,977],\\"referencedDeclaration\\":976,\\"src\\":\\"1560:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_require_pure$_t_bool_$returns$__$\\",\\"typeString\\":\\"function (bool) pure\\"}},\\"id\\":138,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"1560:48:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_tuple$__$\\",\\"typeString\\":\\"tuple()\\"}},\\"id\\":139,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"1560:48:0\\"},{\\"id\\":140,\\"nodeType\\":\\"PlaceholderStatement\\",\\"src\\":\\"1618:1:0\\"}]},\\"documentation\\":null,\\"id\\":142,\\"name\\":\\"onlyValidCandidate\\",\\"nodeType\\":\\"ModifierDefinition\\",\\"parameters\\":{\\"id\\":132,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":131,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":142,\\"src\\":\\"1530:18:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":130,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"1530:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"1529:20:0\\"},\\"src\\":\\"1501:125:0\\",\\"visibility\\":\\"internal\\"},{\\"body\\":{\\"id\\":155,\\"nodeType\\":\\"Block\\",\\"src\\":\\"1679:77:0\\",\\"statements\\":[{\\"expression\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"id\\":151,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"UnaryOperation\\",\\"operator\\":\\"!\\",\\"prefix\\":true,\\"src\\":\\"1697:40:0\\",\\"subExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":147,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"1698:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":149,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":148,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":144,\\"src\\":\\"1714:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"1698:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":150,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"isCandidate\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":47,\\"src\\":\\"1698:39:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}},\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}],\\"id\\":146,\\"name\\":\\"require\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[976,977],\\"referencedDeclaration\\":976,\\"src\\":\\"1689:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_require_pure$_t_bool_$returns$__$\\",\\"typeString\\":\\"function (bool) pure\\"}},\\"id\\":152,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"1689:49:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_tuple$__$\\",\\"typeString\\":\\"tuple()\\"}},\\"id\\":153,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"1689:49:0\\"},{\\"id\\":154,\\"nodeType\\":\\"PlaceholderStatement\\",\\"src\\":\\"1748:1:0\\"}]},\\"documentation\\":null,\\"id\\":156,\\"name\\":\\"onlyNotCandidate\\",\\"nodeType\\":\\"ModifierDefinition\\",\\"parameters\\":{\\"id\\":145,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":144,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":156,\\"src\\":\\"1659:18:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":143,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"1659:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"1658:20:0\\"},\\"src\\":\\"1632:124:0\\",\\"visibility\\":\\"internal\\"},{\\"body\\":{\\"id\\":199,\\"nodeType\\":\\"Block\\",\\"src\\":\\"1820:262:0\\",\\"statements\\":[{\\"expression\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"commonType\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"id\\":171,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftExpression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":163,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"1838:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":165,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":164,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":158,\\"src\\":\\"1854:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"1838:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":166,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"voters\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":53,\\"src\\":\\"1838:34:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_uint256_$\\",\\"typeString\\":\\"mapping(address => uint256)\\"}},\\"id\\":169,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":167,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"1873:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":168,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"1873:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"1838:46:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"BinaryOperation\\",\\"operator\\":\\">=\\",\\"rightExpression\\":{\\"argumentTypes\\":null,\\"id\\":170,\\"name\\":\\"_cap\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":160,\\"src\\":\\"1888:4:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"src\\":\\"1838:54:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}],\\"id\\":162,\\"name\\":\\"require\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[976,977],\\"referencedDeclaration\\":976,\\"src\\":\\"1830:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_require_pure$_t_bool_$returns$__$\\",\\"typeString\\":\\"function (bool) pure\\"}},\\"id\\":172,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"1830:63:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_tuple$__$\\",\\"typeString\\":\\"tuple()\\"}},\\"id\\":173,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"1830:63:0\\"},{\\"condition\\":{\\"argumentTypes\\":null,\\"commonType\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"id\\":180,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":174,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"1907:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":176,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":175,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":158,\\"src\\":\\"1923:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"1907:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":177,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"owner\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":45,\\"src\\":\\"1907:33:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"nodeType\\":\\"BinaryOperation\\",\\"operator\\":\\"==\\",\\"rightExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":178,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"1944:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":179,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"1944:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"src\\":\\"1907:47:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}},\\"falseBody\\":null,\\"id\\":197,\\"nodeType\\":\\"IfStatement\\",\\"src\\":\\"1903:162:0\\",\\"trueBody\\":{\\"id\\":196,\\"nodeType\\":\\"Block\\",\\"src\\":\\"1956:109:0\\",\\"statements\\":[{\\"expression\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"commonType\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"id\\":193,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftExpression\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"id\\":190,\\"name\\":\\"_cap\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":160,\\"src\\":\\"2029:4:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}],\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":182,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"1978:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":184,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":183,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":158,\\"src\\":\\"1994:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"1978:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":185,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"voters\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":53,\\"src\\":\\"1978:34:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_uint256_$\\",\\"typeString\\":\\"mapping(address => uint256)\\"}},\\"id\\":188,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":186,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"2013:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":187,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"2013:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"1978:46:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":189,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sub\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":933,\\"src\\":\\"1978:50:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$\\",\\"typeString\\":\\"function (uint256,uint256) pure returns (uint256)\\"}},\\"id\\":191,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"1978:56:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"BinaryOperation\\",\\"operator\\":\\">=\\",\\"rightExpression\\":{\\"argumentTypes\\":null,\\"id\\":192,\\"name\\":\\"minCandidateCap\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":83,\\"src\\":\\"2038:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"src\\":\\"1978:75:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}],\\"id\\":181,\\"name\\":\\"require\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[976,977],\\"referencedDeclaration\\":976,\\"src\\":\\"1970:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_require_pure$_t_bool_$returns$__$\\",\\"typeString\\":\\"function (bool) pure\\"}},\\"id\\":194,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"1970:84:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_tuple$__$\\",\\"typeString\\":\\"tuple()\\"}},\\"id\\":195,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"1970:84:0\\"}]}},{\\"id\\":198,\\"nodeType\\":\\"PlaceholderStatement\\",\\"src\\":\\"2074:1:0\\"}]},\\"documentation\\":null,\\"id\\":200,\\"name\\":\\"onlyValidVote\\",\\"nodeType\\":\\"ModifierDefinition\\",\\"parameters\\":{\\"id\\":161,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":158,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":200,\\"src\\":\\"1786:18:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":157,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"1786:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":160,\\"name\\":\\"_cap\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":200,\\"src\\":\\"1806:12:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":159,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"1806:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"1785:34:0\\"},\\"src\\":\\"1762:320:0\\",\\"visibility\\":\\"internal\\"},{\\"body\\":{\\"id\\":244,\\"nodeType\\":\\"Block\\",\\"src\\":\\"2151:250:0\\",\\"statements\\":[{\\"expression\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"commonType\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"id\\":209,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftExpression\\":{\\"argumentTypes\\":null,\\"id\\":207,\\"name\\":\\"_blockNumber\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":202,\\"src\\":\\"2169:12:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"BinaryOperation\\",\\"operator\\":\\">\\",\\"rightExpression\\":{\\"argumentTypes\\":null,\\"hexValue\\":\\"30\\",\\"id\\":208,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":true,\\"kind\\":\\"number\\",\\"lValueRequested\\":false,\\"nodeType\\":\\"Literal\\",\\"src\\":\\"2184:1:0\\",\\"subdenomination\\":null,\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_rational_0_by_1\\",\\"typeString\\":\\"int_const 0\\"},\\"value\\":\\"0\\"},\\"src\\":\\"2169:16:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}],\\"id\\":206,\\"name\\":\\"require\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[976,977],\\"referencedDeclaration\\":976,\\"src\\":\\"2161:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_require_pure$_t_bool_$returns$__$\\",\\"typeString\\":\\"function (bool) pure\\"}},\\"id\\":210,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"2161:25:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_tuple$__$\\",\\"typeString\\":\\"tuple()\\"}},\\"id\\":211,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"2161:25:0\\"},{\\"expression\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"commonType\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"id\\":216,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":213,\\"name\\":\\"block\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":963,\\"src\\":\\"2204:5:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_block\\",\\"typeString\\":\\"block\\"}},\\"id\\":214,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"number\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"2204:12:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"BinaryOperation\\",\\"operator\\":\\">=\\",\\"rightExpression\\":{\\"argumentTypes\\":null,\\"id\\":215,\\"name\\":\\"_blockNumber\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":202,\\"src\\":\\"2220:12:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"src\\":\\"2204:28:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}],\\"id\\":212,\\"name\\":\\"require\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[976,977],\\"referencedDeclaration\\":976,\\"src\\":\\"2196:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_require_pure$_t_bool_$returns$__$\\",\\"typeString\\":\\"function (bool) pure\\"}},\\"id\\":217,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"2196:37:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_tuple$__$\\",\\"typeString\\":\\"tuple()\\"}},\\"id\\":218,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"2196:37:0\\"},{\\"expression\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"commonType\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"id\\":228,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftExpression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":220,\\"name\\":\\"withdrawsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":66,\\"src\\":\\"2251:14:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_WithdrawState_$62_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.WithdrawState storage ref)\\"}},\\"id\\":223,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":221,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"2266:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":222,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"2266:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"2251:26:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_WithdrawState_$62_storage\\",\\"typeString\\":\\"struct TomoValidator.WithdrawState storage ref\\"}},\\"id\\":224,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"caps\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":58,\\"src\\":\\"2251:31:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_uint256_$_t_uint256_$\\",\\"typeString\\":\\"mapping(uint256 => uint256)\\"}},\\"id\\":226,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":225,\\"name\\":\\"_blockNumber\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":202,\\"src\\":\\"2283:12:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"2251:45:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"BinaryOperation\\",\\"operator\\":\\">\\",\\"rightExpression\\":{\\"argumentTypes\\":null,\\"hexValue\\":\\"30\\",\\"id\\":227,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":true,\\"kind\\":\\"number\\",\\"lValueRequested\\":false,\\"nodeType\\":\\"Literal\\",\\"src\\":\\"2299:1:0\\",\\"subdenomination\\":null,\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_rational_0_by_1\\",\\"typeString\\":\\"int_const 0\\"},\\"value\\":\\"0\\"},\\"src\\":\\"2251:49:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}],\\"id\\":219,\\"name\\":\\"require\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[976,977],\\"referencedDeclaration\\":976,\\"src\\":\\"2243:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_require_pure$_t_bool_$returns$__$\\",\\"typeString\\":\\"function (bool) pure\\"}},\\"id\\":229,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"2243:58:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_tuple$__$\\",\\"typeString\\":\\"tuple()\\"}},\\"id\\":230,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"2243:58:0\\"},{\\"expression\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"commonType\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"id\\":240,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftExpression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":232,\\"name\\":\\"withdrawsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":66,\\"src\\":\\"2319:14:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_WithdrawState_$62_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.WithdrawState storage ref)\\"}},\\"id\\":235,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":233,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"2334:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":234,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"2334:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"2319:26:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_WithdrawState_$62_storage\\",\\"typeString\\":\\"struct TomoValidator.WithdrawState storage ref\\"}},\\"id\\":236,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"blockNumbers\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":61,\\"src\\":\\"2319:39:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_uint256_$dyn_storage\\",\\"typeString\\":\\"uint256[] storage ref\\"}},\\"id\\":238,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":237,\\"name\\":\\"_index\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":204,\\"src\\":\\"2359:6:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"2319:47:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"BinaryOperation\\",\\"operator\\":\\"==\\",\\"rightExpression\\":{\\"argumentTypes\\":null,\\"id\\":239,\\"name\\":\\"_blockNumber\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":202,\\"src\\":\\"2370:12:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"src\\":\\"2319:63:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}],\\"id\\":231,\\"name\\":\\"require\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[976,977],\\"referencedDeclaration\\":976,\\"src\\":\\"2311:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_require_pure$_t_bool_$returns$__$\\",\\"typeString\\":\\"function (bool) pure\\"}},\\"id\\":241,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"2311:72:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_tuple$__$\\",\\"typeString\\":\\"tuple()\\"}},\\"id\\":242,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"2311:72:0\\"},{\\"id\\":243,\\"nodeType\\":\\"PlaceholderStatement\\",\\"src\\":\\"2393:1:0\\"}]},\\"documentation\\":null,\\"id\\":245,\\"name\\":\\"onlyValidWithdraw\\",\\"nodeType\\":\\"ModifierDefinition\\",\\"parameters\\":{\\"id\\":205,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":202,\\"name\\":\\"_blockNumber\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":245,\\"src\\":\\"2116:20:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":201,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"2116:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":204,\\"name\\":\\"_index\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":245,\\"src\\":\\"2138:11:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":203,\\"name\\":\\"uint\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"2138:4:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"2115:35:0\\"},\\"src\\":\\"2088:313:0\\",\\"visibility\\":\\"internal\\"},{\\"body\\":{\\"id\\":343,\\"nodeType\\":\\"Block\\",\\"src\\":\\"2678:705:0\\",\\"statements\\":[{\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":266,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftHandSide\\":{\\"argumentTypes\\":null,\\"id\\":264,\\"name\\":\\"minCandidateCap\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":83,\\"src\\":\\"2688:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"Assignment\\",\\"operator\\":\\"=\\",\\"rightHandSide\\":{\\"argumentTypes\\":null,\\"id\\":265,\\"name\\":\\"_minCandidateCap\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":255,\\"src\\":\\"2706:16:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"src\\":\\"2688:34:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":267,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"2688:34:0\\"},{\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":270,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftHandSide\\":{\\"argumentTypes\\":null,\\"id\\":268,\\"name\\":\\"maxValidatorNumber\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":85,\\"src\\":\\"2732:18:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"Assignment\\",\\"operator\\":\\"=\\",\\"rightHandSide\\":{\\"argumentTypes\\":null,\\"id\\":269,\\"name\\":\\"_maxValidatorNumber\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":257,\\"src\\":\\"2753:19:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"src\\":\\"2732:40:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":271,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"2732:40:0\\"},{\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":274,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftHandSide\\":{\\"argumentTypes\\":null,\\"id\\":272,\\"name\\":\\"candidateWithdrawDelay\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":87,\\"src\\":\\"2782:22:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"Assignment\\",\\"operator\\":\\"=\\",\\"rightHandSide\\":{\\"argumentTypes\\":null,\\"id\\":273,\\"name\\":\\"_candidateWithdrawDelay\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":259,\\"src\\":\\"2807:23:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"src\\":\\"2782:48:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":275,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"2782:48:0\\"},{\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":278,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftHandSide\\":{\\"argumentTypes\\":null,\\"id\\":276,\\"name\\":\\"voterWithdrawDelay\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":89,\\"src\\":\\"2840:18:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"Assignment\\",\\"operator\\":\\"=\\",\\"rightHandSide\\":{\\"argumentTypes\\":null,\\"id\\":277,\\"name\\":\\"_voterWithdrawDelay\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":261,\\"src\\":\\"2861:19:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"src\\":\\"2840:40:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":279,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"2840:40:0\\"},{\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":286,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftHandSide\\":{\\"argumentTypes\\":null,\\"id\\":280,\\"name\\":\\"candidateCount\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":81,\\"src\\":\\"2890:14:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"Assignment\\",\\"operator\\":\\"=\\",\\"rightHandSide\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":283,\\"name\\":\\"_candidates\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":248,\\"src\\":\\"2926:11:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_address_$dyn_memory_ptr\\",\\"typeString\\":\\"address[] memory\\"}},\\"id\\":284,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"length\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"2926:18:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}],\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":281,\\"name\\":\\"candidateCount\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":81,\\"src\\":\\"2907:14:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":282,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"add\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":957,\\"src\\":\\"2907:18:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$\\",\\"typeString\\":\\"function (uint256,uint256) pure returns (uint256)\\"}},\\"id\\":285,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"2907:38:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"src\\":\\"2890:55:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":287,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"2890:55:0\\"},{\\"body\\":{\\"id\\":341,\\"nodeType\\":\\"Block\\",\\"src\\":\\"3005:372:0\\",\\"statements\\":[{\\"expression\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":302,\\"name\\":\\"_candidates\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":248,\\"src\\":\\"3035:11:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_address_$dyn_memory_ptr\\",\\"typeString\\":\\"address[] memory\\"}},\\"id\\":304,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":303,\\"name\\":\\"i\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":289,\\"src\\":\\"3047:1:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"3035:14:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}],\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":299,\\"name\\":\\"candidates\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":78,\\"src\\":\\"3019:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_address_$dyn_storage\\",\\"typeString\\":\\"address[] storage ref\\"}},\\"id\\":301,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"push\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"3019:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$\\",\\"typeString\\":\\"function (address) returns (uint256)\\"}},\\"id\\":305,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"3019:31:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":306,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"3019:31:0\\"},{\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":319,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftHandSide\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":307,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"3064:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":311,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":308,\\"name\\":\\"_candidates\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":248,\\"src\\":\\"3080:11:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_address_$dyn_memory_ptr\\",\\"typeString\\":\\"address[] memory\\"}},\\"id\\":310,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":309,\\"name\\":\\"i\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":289,\\"src\\":\\"3092:1:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"3080:14:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":true,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"3064:31:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"nodeType\\":\\"Assignment\\",\\"operator\\":\\"=\\",\\"rightHandSide\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"id\\":313,\\"name\\":\\"_firstOwner\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":253,\\"src\\":\\"3138:11:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},{\\"argumentTypes\\":null,\\"hexValue\\":\\"74727565\\",\\"id\\":314,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":true,\\"kind\\":\\"bool\\",\\"lValueRequested\\":false,\\"nodeType\\":\\"Literal\\",\\"src\\":\\"3180:4:0\\",\\"subdenomination\\":null,\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"},\\"value\\":\\"true\\"},{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":315,\\"name\\":\\"_caps\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":251,\\"src\\":\\"3207:5:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_uint256_$dyn_memory_ptr\\",\\"typeString\\":\\"uint256[] memory\\"}},\\"id\\":317,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":316,\\"name\\":\\"i\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":289,\\"src\\":\\"3213:1:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"3207:8:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}}],\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":312,\\"name\\":\\"ValidatorState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":54,\\"src\\":\\"3098:14:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_type$_t_struct$_ValidatorState_$54_storage_ptr_$\\",\\"typeString\\":\\"type(struct TomoValidator.ValidatorState storage pointer)\\"}},\\"id\\":318,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"structConstructorCall\\",\\"lValueRequested\\":false,\\"names\\":[\\"owner\\",\\"isCandidate\\",\\"cap\\"],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"3098:132:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_memory\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState memory\\"}},\\"src\\":\\"3064:166:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":320,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"3064:166:0\\"},{\\"expression\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"id\\":327,\\"name\\":\\"_firstOwner\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":253,\\"src\\":\\"3272:11:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}],\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":321,\\"name\\":\\"voters\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":75,\\"src\\":\\"3244:6:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$\\",\\"typeString\\":\\"mapping(address => address[] storage ref)\\"}},\\"id\\":325,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":322,\\"name\\":\\"_candidates\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":248,\\"src\\":\\"3251:11:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_address_$dyn_memory_ptr\\",\\"typeString\\":\\"address[] memory\\"}},\\"id\\":324,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":323,\\"name\\":\\"i\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":289,\\"src\\":\\"3263:1:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"3251:14:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"3244:22:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_address_$dyn_storage\\",\\"typeString\\":\\"address[] storage ref\\"}},\\"id\\":326,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"push\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"3244:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$\\",\\"typeString\\":\\"function (address) returns (uint256)\\"}},\\"id\\":328,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"3244:40:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":329,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"3244:40:0\\"},{\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":339,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftHandSide\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":330,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"3298:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":334,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":331,\\"name\\":\\"candidates\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":78,\\"src\\":\\"3314:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_address_$dyn_storage\\",\\"typeString\\":\\"address[] storage ref\\"}},\\"id\\":333,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":332,\\"name\\":\\"i\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":289,\\"src\\":\\"3325:1:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"3314:13:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"3298:30:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":335,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"voters\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":53,\\"src\\":\\"3298:37:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_uint256_$\\",\\"typeString\\":\\"mapping(address => uint256)\\"}},\\"id\\":337,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":336,\\"name\\":\\"_firstOwner\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":253,\\"src\\":\\"3336:11:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":true,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"3298:50:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"Assignment\\",\\"operator\\":\\"=\\",\\"rightHandSide\\":{\\"argumentTypes\\":null,\\"id\\":338,\\"name\\":\\"minCandidateCap\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":83,\\"src\\":\\"3351:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"src\\":\\"3298:68:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":340,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"3298:68:0\\"}]},\\"condition\\":{\\"argumentTypes\\":null,\\"commonType\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"id\\":295,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftExpression\\":{\\"argumentTypes\\":null,\\"id\\":292,\\"name\\":\\"i\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":289,\\"src\\":\\"2976:1:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"BinaryOperation\\",\\"operator\\":\\"<\\",\\"rightExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":293,\\"name\\":\\"_candidates\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":248,\\"src\\":\\"2980:11:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_address_$dyn_memory_ptr\\",\\"typeString\\":\\"address[] memory\\"}},\\"id\\":294,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"length\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"2980:18:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"src\\":\\"2976:22:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}},\\"id\\":342,\\"initializationExpression\\":{\\"assignments\\":[289],\\"declarations\\":[{\\"constant\\":false,\\"id\\":289,\\"name\\":\\"i\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":344,\\"src\\":\\"2961:9:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":288,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"2961:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"id\\":291,\\"initialValue\\":{\\"argumentTypes\\":null,\\"hexValue\\":\\"30\\",\\"id\\":290,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":true,\\"kind\\":\\"number\\",\\"lValueRequested\\":false,\\"nodeType\\":\\"Literal\\",\\"src\\":\\"2973:1:0\\",\\"subdenomination\\":null,\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_rational_0_by_1\\",\\"typeString\\":\\"int_const 0\\"},\\"value\\":\\"0\\"},\\"nodeType\\":\\"VariableDeclarationStatement\\",\\"src\\":\\"2961:13:0\\"},\\"loopExpression\\":{\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":297,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"UnaryOperation\\",\\"operator\\":\\"++\\",\\"prefix\\":false,\\"src\\":\\"3000:3:0\\",\\"subExpression\\":{\\"argumentTypes\\":null,\\"id\\":296,\\"name\\":\\"i\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":289,\\"src\\":\\"3000:1:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":298,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"3000:3:0\\"},\\"nodeType\\":\\"ForStatement\\",\\"src\\":\\"2956:421:0\\"}]},\\"documentation\\":null,\\"id\\":344,\\"implemented\\":true,\\"isConstructor\\":true,\\"isDeclaredConst\\":false,\\"modifiers\\":[],\\"name\\":\\"TomoValidator\\",\\"nodeType\\":\\"FunctionDefinition\\",\\"parameters\\":{\\"id\\":262,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":248,\\"name\\":\\"_candidates\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":344,\\"src\\":\\"2440:21:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_address_$dyn_memory_ptr\\",\\"typeString\\":\\"address[]\\"},\\"typeName\\":{\\"baseType\\":{\\"id\\":246,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"2440:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"id\\":247,\\"length\\":null,\\"nodeType\\":\\"ArrayTypeName\\",\\"src\\":\\"2440:9:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_address_$dyn_storage_ptr\\",\\"typeString\\":\\"address[]\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":251,\\"name\\":\\"_caps\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":344,\\"src\\":\\"2471:15:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_uint256_$dyn_memory_ptr\\",\\"typeString\\":\\"uint256[]\\"},\\"typeName\\":{\\"baseType\\":{\\"id\\":249,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"2471:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":250,\\"length\\":null,\\"nodeType\\":\\"ArrayTypeName\\",\\"src\\":\\"2471:9:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_uint256_$dyn_storage_ptr\\",\\"typeString\\":\\"uint256[]\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":253,\\"name\\":\\"_firstOwner\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":344,\\"src\\":\\"2496:19:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":252,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"2496:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":255,\\"name\\":\\"_minCandidateCap\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":344,\\"src\\":\\"2525:24:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":254,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"2525:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":257,\\"name\\":\\"_maxValidatorNumber\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":344,\\"src\\":\\"2559:27:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":256,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"2559:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":259,\\"name\\":\\"_candidateWithdrawDelay\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":344,\\"src\\":\\"2596:31:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":258,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"2596:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":261,\\"name\\":\\"_voterWithdrawDelay\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":344,\\"src\\":\\"2637:27:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":260,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"2637:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"2430:240:0\\"},\\"payable\\":false,\\"returnParameters\\":{\\"id\\":263,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[],\\"src\\":\\"2678:0:0\\"},\\"scope\\":864,\\"src\\":\\"2407:976:0\\",\\"stateMutability\\":\\"nonpayable\\",\\"superFunction\\":null,\\"visibility\\":\\"public\\"},{\\"body\\":{\\"id\\":416,\\"nodeType\\":\\"Block\\",\\"src\\":\\"3494:482:0\\",\\"statements\\":[{\\"assignments\\":[355],\\"declarations\\":[{\\"constant\\":false,\\"id\\":355,\\"name\\":\\"cap\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":417,\\"src\\":\\"3504:11:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":354,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"3504:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"id\\":364,\\"initialValue\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":361,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"3554:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":362,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"value\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"3554:9:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}],\\"expression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":356,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"3518:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":358,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":357,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":346,\\"src\\":\\"3534:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"3518:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":359,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"cap\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":49,\\"src\\":\\"3518:31:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":360,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"add\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":957,\\"src\\":\\"3518:35:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$\\",\\"typeString\\":\\"function (uint256,uint256) pure returns (uint256)\\"}},\\"id\\":363,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"3518:46:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"VariableDeclarationStatement\\",\\"src\\":\\"3504:60:0\\"},{\\"expression\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"id\\":368,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":346,\\"src\\":\\"3590:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}],\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":365,\\"name\\":\\"candidates\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":78,\\"src\\":\\"3574:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_address_$dyn_storage\\",\\"typeString\\":\\"address[] storage ref\\"}},\\"id\\":367,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"push\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"3574:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$\\",\\"typeString\\":\\"function (address) returns (uint256)\\"}},\\"id\\":369,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"3574:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":370,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"3574:27:0\\"},{\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":380,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftHandSide\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":371,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"3611:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":373,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":372,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":346,\\"src\\":\\"3627:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":true,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"3611:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"nodeType\\":\\"Assignment\\",\\"operator\\":\\"=\\",\\"rightHandSide\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":375,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"3677:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":376,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"3677:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},{\\"argumentTypes\\":null,\\"hexValue\\":\\"74727565\\",\\"id\\":377,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":true,\\"kind\\":\\"bool\\",\\"lValueRequested\\":false,\\"nodeType\\":\\"Literal\\",\\"src\\":\\"3714:4:0\\",\\"subdenomination\\":null,\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"},\\"value\\":\\"true\\"},{\\"argumentTypes\\":null,\\"id\\":378,\\"name\\":\\"cap\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":355,\\"src\\":\\"3737:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}}],\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":374,\\"name\\":\\"ValidatorState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":54,\\"src\\":\\"3641:14:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_type$_t_struct$_ValidatorState_$54_storage_ptr_$\\",\\"typeString\\":\\"type(struct TomoValidator.ValidatorState storage pointer)\\"}},\\"id\\":379,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"structConstructorCall\\",\\"lValueRequested\\":false,\\"names\\":[\\"owner\\",\\"isCandidate\\",\\"cap\\"],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"3641:110:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_memory\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState memory\\"}},\\"src\\":\\"3611:140:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":381,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"3611:140:0\\"},{\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":391,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftHandSide\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":382,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"3761:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":384,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":383,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":346,\\"src\\":\\"3777:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"3761:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":385,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"voters\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":53,\\"src\\":\\"3761:34:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_uint256_$\\",\\"typeString\\":\\"mapping(address => uint256)\\"}},\\"id\\":388,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":386,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"3796:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":387,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"3796:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":true,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"3761:46:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"Assignment\\",\\"operator\\":\\"=\\",\\"rightHandSide\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":389,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"3810:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":390,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"value\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"3810:9:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"src\\":\\"3761:58:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":392,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"3761:58:0\\"},{\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":398,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftHandSide\\":{\\"argumentTypes\\":null,\\"id\\":393,\\"name\\":\\"candidateCount\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":81,\\"src\\":\\"3829:14:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"Assignment\\",\\"operator\\":\\"=\\",\\"rightHandSide\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"hexValue\\":\\"31\\",\\"id\\":396,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":true,\\"kind\\":\\"number\\",\\"lValueRequested\\":false,\\"nodeType\\":\\"Literal\\",\\"src\\":\\"3865:1:0\\",\\"subdenomination\\":null,\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_rational_1_by_1\\",\\"typeString\\":\\"int_const 1\\"},\\"value\\":\\"1\\"}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_rational_1_by_1\\",\\"typeString\\":\\"int_const 1\\"}],\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":394,\\"name\\":\\"candidateCount\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":81,\\"src\\":\\"3846:14:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":395,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"add\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":957,\\"src\\":\\"3846:18:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$\\",\\"typeString\\":\\"function (uint256,uint256) pure returns (uint256)\\"}},\\"id\\":397,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"3846:21:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"src\\":\\"3829:38:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":399,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"3829:38:0\\"},{\\"expression\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":404,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"3901:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":405,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"3901:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}],\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":400,\\"name\\":\\"voters\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":75,\\"src\\":\\"3877:6:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$\\",\\"typeString\\":\\"mapping(address => address[] storage ref)\\"}},\\"id\\":402,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":401,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":346,\\"src\\":\\"3884:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"3877:18:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_address_$dyn_storage\\",\\"typeString\\":\\"address[] storage ref\\"}},\\"id\\":403,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"push\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"3877:23:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$\\",\\"typeString\\":\\"function (address) returns (uint256)\\"}},\\"id\\":406,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"3877:35:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":407,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"3877:35:0\\"},{\\"eventCall\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":409,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"3935:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":410,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"3935:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},{\\"argumentTypes\\":null,\\"id\\":411,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":346,\\"src\\":\\"3947:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":412,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"3959:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":413,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"value\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"3959:9:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}],\\"id\\":408,\\"name\\":\\"Propose\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":29,\\"src\\":\\"3927:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$\\",\\"typeString\\":\\"function (address,address,uint256)\\"}},\\"id\\":414,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"3927:42:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_tuple$__$\\",\\"typeString\\":\\"tuple()\\"}},\\"id\\":415,\\"nodeType\\":\\"EmitStatement\\",\\"src\\":\\"3922:47:0\\"}]},\\"documentation\\":null,\\"id\\":417,\\"implemented\\":true,\\"isConstructor\\":false,\\"isDeclaredConst\\":false,\\"modifiers\\":[{\\"arguments\\":null,\\"id\\":349,\\"modifierName\\":{\\"argumentTypes\\":null,\\"id\\":348,\\"name\\":\\"onlyValidCandidateCap\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":100,\\"src\\":\\"3443:21:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_modifier$__$\\",\\"typeString\\":\\"modifier ()\\"}},\\"nodeType\\":\\"ModifierInvocation\\",\\"src\\":\\"3443:21:0\\"},{\\"arguments\\":[{\\"argumentTypes\\":null,\\"id\\":351,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":346,\\"src\\":\\"3482:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}}],\\"id\\":352,\\"modifierName\\":{\\"argumentTypes\\":null,\\"id\\":350,\\"name\\":\\"onlyNotCandidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":156,\\"src\\":\\"3465:16:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_modifier$_t_address_$\\",\\"typeString\\":\\"modifier (address)\\"}},\\"nodeType\\":\\"ModifierInvocation\\",\\"src\\":\\"3465:28:0\\"}],\\"name\\":\\"propose\\",\\"nodeType\\":\\"FunctionDefinition\\",\\"parameters\\":{\\"id\\":347,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":346,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":417,\\"src\\":\\"3406:18:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":345,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"3406:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"3405:20:0\\"},\\"payable\\":true,\\"returnParameters\\":{\\"id\\":353,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[],\\"src\\":\\"3494:0:0\\"},\\"scope\\":864,\\"src\\":\\"3389:587:0\\",\\"stateMutability\\":\\"payable\\",\\"superFunction\\":null,\\"visibility\\":\\"external\\"},{\\"body\\":{\\"id\\":486,\\"nodeType\\":\\"Block\\",\\"src\\":\\"4064:397:0\\",\\"statements\\":[{\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":437,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftHandSide\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":425,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"4074:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":427,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":426,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":419,\\"src\\":\\"4090:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"4074:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":428,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":true,\\"memberName\\":\\"cap\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":49,\\"src\\":\\"4074:31:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"Assignment\\",\\"operator\\":\\"=\\",\\"rightHandSide\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":434,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"4144:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":435,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"value\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"4144:9:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}],\\"expression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":429,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"4108:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":431,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":430,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":419,\\"src\\":\\"4124:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"4108:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":432,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"cap\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":49,\\"src\\":\\"4108:31:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":433,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"add\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":957,\\"src\\":\\"4108:35:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$\\",\\"typeString\\":\\"function (uint256,uint256) pure returns (uint256)\\"}},\\"id\\":436,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"4108:46:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"src\\":\\"4074:80:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":438,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"4074:80:0\\"},{\\"condition\\":{\\"argumentTypes\\":null,\\"commonType\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"id\\":447,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftExpression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":439,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"4168:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":441,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":440,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":419,\\"src\\":\\"4184:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"4168:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":442,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"voters\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":53,\\"src\\":\\"4168:34:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_uint256_$\\",\\"typeString\\":\\"mapping(address => uint256)\\"}},\\"id\\":445,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":443,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"4203:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":444,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"4203:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"4168:46:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"BinaryOperation\\",\\"operator\\":\\"==\\",\\"rightExpression\\":{\\"argumentTypes\\":null,\\"hexValue\\":\\"30\\",\\"id\\":446,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":true,\\"kind\\":\\"number\\",\\"lValueRequested\\":false,\\"nodeType\\":\\"Literal\\",\\"src\\":\\"4218:1:0\\",\\"subdenomination\\":null,\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_rational_0_by_1\\",\\"typeString\\":\\"int_const 0\\"},\\"value\\":\\"0\\"},\\"src\\":\\"4168:51:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}},\\"falseBody\\":null,\\"id\\":457,\\"nodeType\\":\\"IfStatement\\",\\"src\\":\\"4164:117:0\\",\\"trueBody\\":{\\"id\\":456,\\"nodeType\\":\\"Block\\",\\"src\\":\\"4221:60:0\\",\\"statements\\":[{\\"expression\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":452,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"4259:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":453,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"4259:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}],\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":448,\\"name\\":\\"voters\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":75,\\"src\\":\\"4235:6:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$\\",\\"typeString\\":\\"mapping(address => address[] storage ref)\\"}},\\"id\\":450,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":449,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":419,\\"src\\":\\"4242:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"4235:18:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_address_$dyn_storage\\",\\"typeString\\":\\"address[] storage ref\\"}},\\"id\\":451,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"push\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"4235:23:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$\\",\\"typeString\\":\\"function (address) returns (uint256)\\"}},\\"id\\":454,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"4235:35:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":455,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"4235:35:0\\"}]}},{\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":476,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftHandSide\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":458,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"4290:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":460,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":459,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":419,\\"src\\":\\"4306:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"4290:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":461,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"voters\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":53,\\"src\\":\\"4290:34:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_uint256_$\\",\\"typeString\\":\\"mapping(address => uint256)\\"}},\\"id\\":464,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":462,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"4325:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":463,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"4325:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":true,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"4290:46:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"Assignment\\",\\"operator\\":\\"=\\",\\"rightHandSide\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":473,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"4390:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":474,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"value\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"4390:9:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}],\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":465,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"4339:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":467,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":466,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":419,\\"src\\":\\"4355:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"4339:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":468,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"voters\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":53,\\"src\\":\\"4339:34:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_uint256_$\\",\\"typeString\\":\\"mapping(address => uint256)\\"}},\\"id\\":471,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":469,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"4374:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":470,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"4374:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"4339:46:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":472,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"add\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":957,\\"src\\":\\"4339:50:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$\\",\\"typeString\\":\\"function (uint256,uint256) pure returns (uint256)\\"}},\\"id\\":475,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"4339:61:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"src\\":\\"4290:110:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":477,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"4290:110:0\\"},{\\"eventCall\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":479,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"4420:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":480,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"4420:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},{\\"argumentTypes\\":null,\\"id\\":481,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":419,\\"src\\":\\"4432:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":482,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"4444:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":483,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"value\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"4444:9:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}],\\"id\\":478,\\"name\\":\\"Vote\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":13,\\"src\\":\\"4415:4:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$\\",\\"typeString\\":\\"function (address,address,uint256)\\"}},\\"id\\":484,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"4415:39:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_tuple$__$\\",\\"typeString\\":\\"tuple()\\"}},\\"id\\":485,\\"nodeType\\":\\"EmitStatement\\",\\"src\\":\\"4410:44:0\\"}]},\\"documentation\\":null,\\"id\\":487,\\"implemented\\":true,\\"isConstructor\\":false,\\"isDeclaredConst\\":false,\\"modifiers\\":[{\\"arguments\\":[{\\"argumentTypes\\":null,\\"id\\":422,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":419,\\"src\\":\\"4052:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}}],\\"id\\":423,\\"modifierName\\":{\\"argumentTypes\\":null,\\"id\\":421,\\"name\\":\\"onlyValidCandidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":142,\\"src\\":\\"4033:18:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_modifier$_t_address_$\\",\\"typeString\\":\\"modifier (address)\\"}},\\"nodeType\\":\\"ModifierInvocation\\",\\"src\\":\\"4033:30:0\\"}],\\"name\\":\\"vote\\",\\"nodeType\\":\\"FunctionDefinition\\",\\"parameters\\":{\\"id\\":420,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":419,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":487,\\"src\\":\\"3996:18:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":418,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"3996:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"3995:20:0\\"},\\"payable\\":true,\\"returnParameters\\":{\\"id\\":424,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[],\\"src\\":\\"4064:0:0\\"},\\"scope\\":864,\\"src\\":\\"3982:479:0\\",\\"stateMutability\\":\\"payable\\",\\"superFunction\\":null,\\"visibility\\":\\"external\\"},{\\"body\\":{\\"id\\":495,\\"nodeType\\":\\"Block\\",\\"src\\":\\"4523:34:0\\",\\"statements\\":[{\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":493,\\"name\\":\\"candidates\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":78,\\"src\\":\\"4540:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_address_$dyn_storage\\",\\"typeString\\":\\"address[] storage ref\\"}},\\"functionReturnParameters\\":492,\\"id\\":494,\\"nodeType\\":\\"Return\\",\\"src\\":\\"4533:17:0\\"}]},\\"documentation\\":null,\\"id\\":496,\\"implemented\\":true,\\"isConstructor\\":false,\\"isDeclaredConst\\":true,\\"modifiers\\":[],\\"name\\":\\"getCandidates\\",\\"nodeType\\":\\"FunctionDefinition\\",\\"parameters\\":{\\"id\\":488,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[],\\"src\\":\\"4489:2:0\\"},\\"payable\\":false,\\"returnParameters\\":{\\"id\\":492,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":491,\\"name\\":\\"\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":496,\\"src\\":\\"4512:9:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_address_$dyn_memory_ptr\\",\\"typeString\\":\\"address[]\\"},\\"typeName\\":{\\"baseType\\":{\\"id\\":489,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"4512:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"id\\":490,\\"length\\":null,\\"nodeType\\":\\"ArrayTypeName\\",\\"src\\":\\"4512:9:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_address_$dyn_storage_ptr\\",\\"typeString\\":\\"address[]\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"4511:11:0\\"},\\"scope\\":864,\\"src\\":\\"4467:90:0\\",\\"stateMutability\\":\\"view\\",\\"superFunction\\":null,\\"visibility\\":\\"public\\"},{\\"body\\":{\\"id\\":508,\\"nodeType\\":\\"Block\\",\\"src\\":\\"4637:55:0\\",\\"statements\\":[{\\"expression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":503,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"4654:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":505,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":504,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":498,\\"src\\":\\"4670:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"4654:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":506,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"cap\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":49,\\"src\\":\\"4654:31:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"functionReturnParameters\\":502,\\"id\\":507,\\"nodeType\\":\\"Return\\",\\"src\\":\\"4647:38:0\\"}]},\\"documentation\\":null,\\"id\\":509,\\"implemented\\":true,\\"isConstructor\\":false,\\"isDeclaredConst\\":true,\\"modifiers\\":[],\\"name\\":\\"getCandidateCap\\",\\"nodeType\\":\\"FunctionDefinition\\",\\"parameters\\":{\\"id\\":499,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":498,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":509,\\"src\\":\\"4588:18:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":497,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"4588:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"4587:20:0\\"},\\"payable\\":false,\\"returnParameters\\":{\\"id\\":502,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":501,\\"name\\":\\"\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":509,\\"src\\":\\"4628:7:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":500,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"4628:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"4627:9:0\\"},\\"scope\\":864,\\"src\\":\\"4563:129:0\\",\\"stateMutability\\":\\"view\\",\\"superFunction\\":null,\\"visibility\\":\\"public\\"},{\\"body\\":{\\"id\\":521,\\"nodeType\\":\\"Block\\",\\"src\\":\\"4774:57:0\\",\\"statements\\":[{\\"expression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":516,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"4791:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":518,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":517,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":511,\\"src\\":\\"4807:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"4791:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":519,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"owner\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":45,\\"src\\":\\"4791:33:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"functionReturnParameters\\":515,\\"id\\":520,\\"nodeType\\":\\"Return\\",\\"src\\":\\"4784:40:0\\"}]},\\"documentation\\":null,\\"id\\":522,\\"implemented\\":true,\\"isConstructor\\":false,\\"isDeclaredConst\\":true,\\"modifiers\\":[],\\"name\\":\\"getCandidateOwner\\",\\"nodeType\\":\\"FunctionDefinition\\",\\"parameters\\":{\\"id\\":512,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":511,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":522,\\"src\\":\\"4725:18:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":510,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"4725:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"4724:20:0\\"},\\"payable\\":false,\\"returnParameters\\":{\\"id\\":515,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":514,\\"name\\":\\"\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":522,\\"src\\":\\"4765:7:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":513,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"4765:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"4764:9:0\\"},\\"scope\\":864,\\"src\\":\\"4698:133:0\\",\\"stateMutability\\":\\"view\\",\\"superFunction\\":null,\\"visibility\\":\\"public\\"},{\\"body\\":{\\"id\\":538,\\"nodeType\\":\\"Block\\",\\"src\\":\\"4923:66:0\\",\\"statements\\":[{\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":531,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"4940:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":533,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":532,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":524,\\"src\\":\\"4956:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"4940:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":534,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"voters\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":53,\\"src\\":\\"4940:34:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_uint256_$\\",\\"typeString\\":\\"mapping(address => uint256)\\"}},\\"id\\":536,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":535,\\"name\\":\\"_voter\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":526,\\"src\\":\\"4975:6:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"4940:42:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"functionReturnParameters\\":530,\\"id\\":537,\\"nodeType\\":\\"Return\\",\\"src\\":\\"4933:49:0\\"}]},\\"documentation\\":null,\\"id\\":539,\\"implemented\\":true,\\"isConstructor\\":false,\\"isDeclaredConst\\":true,\\"modifiers\\":[],\\"name\\":\\"getVoterCap\\",\\"nodeType\\":\\"FunctionDefinition\\",\\"parameters\\":{\\"id\\":527,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":524,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":539,\\"src\\":\\"4858:18:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":523,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"4858:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":526,\\"name\\":\\"_voter\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":539,\\"src\\":\\"4878:14:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":525,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"4878:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"4857:36:0\\"},\\"payable\\":false,\\"returnParameters\\":{\\"id\\":530,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":529,\\"name\\":\\"\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":539,\\"src\\":\\"4914:7:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":528,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"4914:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"4913:9:0\\"},\\"scope\\":864,\\"src\\":\\"4837:152:0\\",\\"stateMutability\\":\\"view\\",\\"superFunction\\":null,\\"visibility\\":\\"public\\"},{\\"body\\":{\\"id\\":551,\\"nodeType\\":\\"Block\\",\\"src\\":\\"5065:42:0\\",\\"statements\\":[{\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":547,\\"name\\":\\"voters\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":75,\\"src\\":\\"5082:6:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$\\",\\"typeString\\":\\"mapping(address => address[] storage ref)\\"}},\\"id\\":549,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":548,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":541,\\"src\\":\\"5089:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"5082:18:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_address_$dyn_storage\\",\\"typeString\\":\\"address[] storage ref\\"}},\\"functionReturnParameters\\":546,\\"id\\":550,\\"nodeType\\":\\"Return\\",\\"src\\":\\"5075:25:0\\"}]},\\"documentation\\":null,\\"id\\":552,\\"implemented\\":true,\\"isConstructor\\":false,\\"isDeclaredConst\\":true,\\"modifiers\\":[],\\"name\\":\\"getVoters\\",\\"nodeType\\":\\"FunctionDefinition\\",\\"parameters\\":{\\"id\\":542,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":541,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":552,\\"src\\":\\"5014:18:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":540,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"5014:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"5013:20:0\\"},\\"payable\\":false,\\"returnParameters\\":{\\"id\\":546,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":545,\\"name\\":\\"\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":552,\\"src\\":\\"5054:9:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_address_$dyn_memory_ptr\\",\\"typeString\\":\\"address[]\\"},\\"typeName\\":{\\"baseType\\":{\\"id\\":543,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"5054:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"id\\":544,\\"length\\":null,\\"nodeType\\":\\"ArrayTypeName\\",\\"src\\":\\"5054:9:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_address_$dyn_storage_ptr\\",\\"typeString\\":\\"address[]\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"5053:11:0\\"},\\"scope\\":864,\\"src\\":\\"4995:112:0\\",\\"stateMutability\\":\\"view\\",\\"superFunction\\":null,\\"visibility\\":\\"public\\"},{\\"body\\":{\\"id\\":564,\\"nodeType\\":\\"Block\\",\\"src\\":\\"5180:63:0\\",\\"statements\\":[{\\"expression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":559,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"5197:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":561,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":560,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":554,\\"src\\":\\"5213:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"5197:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":562,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"isCandidate\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":47,\\"src\\":\\"5197:39:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}},\\"functionReturnParameters\\":558,\\"id\\":563,\\"nodeType\\":\\"Return\\",\\"src\\":\\"5190:46:0\\"}]},\\"documentation\\":null,\\"id\\":565,\\"implemented\\":true,\\"isConstructor\\":false,\\"isDeclaredConst\\":true,\\"modifiers\\":[],\\"name\\":\\"isCandidate\\",\\"nodeType\\":\\"FunctionDefinition\\",\\"parameters\\":{\\"id\\":555,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":554,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":565,\\"src\\":\\"5134:18:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":553,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"5134:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"5133:20:0\\"},\\"payable\\":false,\\"returnParameters\\":{\\"id\\":558,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":557,\\"name\\":\\"\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":565,\\"src\\":\\"5174:4:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"},\\"typeName\\":{\\"id\\":556,\\"name\\":\\"bool\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"5174:4:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"5173:6:0\\"},\\"scope\\":864,\\"src\\":\\"5113:130:0\\",\\"stateMutability\\":\\"view\\",\\"superFunction\\":null,\\"visibility\\":\\"public\\"},{\\"body\\":{\\"id\\":577,\\"nodeType\\":\\"Block\\",\\"src\\":\\"5315:63:0\\",\\"statements\\":[{\\"expression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":571,\\"name\\":\\"withdrawsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":66,\\"src\\":\\"5332:14:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_WithdrawState_$62_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.WithdrawState storage ref)\\"}},\\"id\\":574,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":572,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"5347:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":573,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"5347:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"5332:26:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_WithdrawState_$62_storage\\",\\"typeString\\":\\"struct TomoValidator.WithdrawState storage ref\\"}},\\"id\\":575,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"blockNumbers\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":61,\\"src\\":\\"5332:39:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_uint256_$dyn_storage\\",\\"typeString\\":\\"uint256[] storage ref\\"}},\\"functionReturnParameters\\":570,\\"id\\":576,\\"nodeType\\":\\"Return\\",\\"src\\":\\"5325:46:0\\"}]},\\"documentation\\":null,\\"id\\":578,\\"implemented\\":true,\\"isConstructor\\":false,\\"isDeclaredConst\\":true,\\"modifiers\\":[],\\"name\\":\\"getWithdrawBlockNumbers\\",\\"nodeType\\":\\"FunctionDefinition\\",\\"parameters\\":{\\"id\\":566,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[],\\"src\\":\\"5281:2:0\\"},\\"payable\\":false,\\"returnParameters\\":{\\"id\\":570,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":569,\\"name\\":\\"\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":578,\\"src\\":\\"5304:9:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_uint256_$dyn_memory_ptr\\",\\"typeString\\":\\"uint256[]\\"},\\"typeName\\":{\\"baseType\\":{\\"id\\":567,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"5304:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":568,\\"length\\":null,\\"nodeType\\":\\"ArrayTypeName\\",\\"src\\":\\"5304:9:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_uint256_$dyn_storage_ptr\\",\\"typeString\\":\\"uint256[]\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"5303:11:0\\"},\\"scope\\":864,\\"src\\":\\"5249:129:0\\",\\"stateMutability\\":\\"view\\",\\"superFunction\\":null,\\"visibility\\":\\"public\\"},{\\"body\\":{\\"id\\":593,\\"nodeType\\":\\"Block\\",\\"src\\":\\"5459:69:0\\",\\"statements\\":[{\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":585,\\"name\\":\\"withdrawsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":66,\\"src\\":\\"5476:14:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_WithdrawState_$62_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.WithdrawState storage ref)\\"}},\\"id\\":588,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":586,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"5491:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":587,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"5491:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"5476:26:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_WithdrawState_$62_storage\\",\\"typeString\\":\\"struct TomoValidator.WithdrawState storage ref\\"}},\\"id\\":589,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"caps\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":58,\\"src\\":\\"5476:31:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_uint256_$_t_uint256_$\\",\\"typeString\\":\\"mapping(uint256 => uint256)\\"}},\\"id\\":591,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":590,\\"name\\":\\"_blockNumber\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":580,\\"src\\":\\"5508:12:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"5476:45:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"functionReturnParameters\\":584,\\"id\\":592,\\"nodeType\\":\\"Return\\",\\"src\\":\\"5469:52:0\\"}]},\\"documentation\\":null,\\"id\\":594,\\"implemented\\":true,\\"isConstructor\\":false,\\"isDeclaredConst\\":true,\\"modifiers\\":[],\\"name\\":\\"getWithdrawCap\\",\\"nodeType\\":\\"FunctionDefinition\\",\\"parameters\\":{\\"id\\":581,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":580,\\"name\\":\\"_blockNumber\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":594,\\"src\\":\\"5408:20:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":579,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"5408:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"5407:22:0\\"},\\"payable\\":false,\\"returnParameters\\":{\\"id\\":584,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":583,\\"name\\":\\"\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":594,\\"src\\":\\"5450:7:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":582,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"5450:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"5449:9:0\\"},\\"scope\\":864,\\"src\\":\\"5384:144:0\\",\\"stateMutability\\":\\"view\\",\\"superFunction\\":null,\\"visibility\\":\\"public\\"},{\\"body\\":{\\"id\\":680,\\"nodeType\\":\\"Block\\",\\"src\\":\\"5623:577:0\\",\\"statements\\":[{\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":616,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftHandSide\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":605,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"5633:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":607,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":606,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":596,\\"src\\":\\"5649:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"5633:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":608,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":true,\\"memberName\\":\\"cap\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":49,\\"src\\":\\"5633:31:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"Assignment\\",\\"operator\\":\\"=\\",\\"rightHandSide\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"id\\":614,\\"name\\":\\"_cap\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":598,\\"src\\":\\"5703:4:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}],\\"expression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":609,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"5667:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":611,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":610,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":596,\\"src\\":\\"5683:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"5667:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":612,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"cap\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":49,\\"src\\":\\"5667:31:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":613,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sub\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":933,\\"src\\":\\"5667:35:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$\\",\\"typeString\\":\\"function (uint256,uint256) pure returns (uint256)\\"}},\\"id\\":615,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"5667:41:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"src\\":\\"5633:75:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":617,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"5633:75:0\\"},{\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":635,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftHandSide\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":618,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"5718:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":620,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":619,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":596,\\"src\\":\\"5734:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"5718:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":621,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"voters\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":53,\\"src\\":\\"5718:34:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_uint256_$\\",\\"typeString\\":\\"mapping(address => uint256)\\"}},\\"id\\":624,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":622,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"5753:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":623,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"5753:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":true,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"5718:46:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"Assignment\\",\\"operator\\":\\"=\\",\\"rightHandSide\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"id\\":633,\\"name\\":\\"_cap\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":598,\\"src\\":\\"5818:4:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}],\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":625,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"5767:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":627,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":626,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":596,\\"src\\":\\"5783:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"5767:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":628,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"voters\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":53,\\"src\\":\\"5767:34:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_uint256_$\\",\\"typeString\\":\\"mapping(address => uint256)\\"}},\\"id\\":631,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":629,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"5802:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":630,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"5802:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"5767:46:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":632,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sub\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":933,\\"src\\":\\"5767:50:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$\\",\\"typeString\\":\\"function (uint256,uint256) pure returns (uint256)\\"}},\\"id\\":634,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"5767:56:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"src\\":\\"5718:105:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":636,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"5718:105:0\\"},{\\"assignments\\":[638],\\"declarations\\":[{\\"constant\\":false,\\"id\\":638,\\"name\\":\\"withdrawBlockNumber\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":681,\\"src\\":\\"5873:27:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":637,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"5873:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"id\\":644,\\"initialValue\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":641,\\"name\\":\\"block\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":963,\\"src\\":\\"5926:5:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_block\\",\\"typeString\\":\\"block\\"}},\\"id\\":642,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"number\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"5926:12:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}],\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":639,\\"name\\":\\"voterWithdrawDelay\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":89,\\"src\\":\\"5903:18:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":640,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"add\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":957,\\"src\\":\\"5903:22:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$\\",\\"typeString\\":\\"function (uint256,uint256) pure returns (uint256)\\"}},\\"id\\":643,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"5903:36:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"VariableDeclarationStatement\\",\\"src\\":\\"5873:66:0\\"},{\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":662,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftHandSide\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":645,\\"name\\":\\"withdrawsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":66,\\"src\\":\\"5949:14:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_WithdrawState_$62_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.WithdrawState storage ref)\\"}},\\"id\\":648,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":646,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"5964:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":647,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"5964:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"5949:26:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_WithdrawState_$62_storage\\",\\"typeString\\":\\"struct TomoValidator.WithdrawState storage ref\\"}},\\"id\\":649,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"caps\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":58,\\"src\\":\\"5949:31:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_uint256_$_t_uint256_$\\",\\"typeString\\":\\"mapping(uint256 => uint256)\\"}},\\"id\\":651,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":650,\\"name\\":\\"withdrawBlockNumber\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":638,\\"src\\":\\"5981:19:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":true,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"5949:52:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"Assignment\\",\\"operator\\":\\"=\\",\\"rightHandSide\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"id\\":660,\\"name\\":\\"_cap\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":598,\\"src\\":\\"6061:4:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}],\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":652,\\"name\\":\\"withdrawsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":66,\\"src\\":\\"6004:14:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_WithdrawState_$62_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.WithdrawState storage ref)\\"}},\\"id\\":655,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":653,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"6019:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":654,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"6019:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"6004:26:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_WithdrawState_$62_storage\\",\\"typeString\\":\\"struct TomoValidator.WithdrawState storage ref\\"}},\\"id\\":656,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"caps\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":58,\\"src\\":\\"6004:31:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_uint256_$_t_uint256_$\\",\\"typeString\\":\\"mapping(uint256 => uint256)\\"}},\\"id\\":658,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":657,\\"name\\":\\"withdrawBlockNumber\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":638,\\"src\\":\\"6036:19:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"6004:52:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":659,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"add\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":957,\\"src\\":\\"6004:56:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$\\",\\"typeString\\":\\"function (uint256,uint256) pure returns (uint256)\\"}},\\"id\\":661,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"6004:62:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"src\\":\\"5949:117:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":663,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"5949:117:0\\"},{\\"expression\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"id\\":670,\\"name\\":\\"withdrawBlockNumber\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":638,\\"src\\":\\"6121:19:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}],\\"expression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":664,\\"name\\":\\"withdrawsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":66,\\"src\\":\\"6076:14:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_WithdrawState_$62_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.WithdrawState storage ref)\\"}},\\"id\\":667,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":665,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"6091:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":666,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"6091:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"6076:26:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_WithdrawState_$62_storage\\",\\"typeString\\":\\"struct TomoValidator.WithdrawState storage ref\\"}},\\"id\\":668,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"blockNumbers\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":61,\\"src\\":\\"6076:39:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_uint256_$dyn_storage\\",\\"typeString\\":\\"uint256[] storage ref\\"}},\\"id\\":669,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"push\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"6076:44:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$\\",\\"typeString\\":\\"function (uint256) returns (uint256)\\"}},\\"id\\":671,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"6076:65:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":672,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"6076:65:0\\"},{\\"eventCall\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":674,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"6164:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":675,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"6164:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},{\\"argumentTypes\\":null,\\"id\\":676,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":596,\\"src\\":\\"6176:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},{\\"argumentTypes\\":null,\\"id\\":677,\\"name\\":\\"_cap\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":598,\\"src\\":\\"6188:4:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}],\\"id\\":673,\\"name\\":\\"Unvote\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":21,\\"src\\":\\"6157:6:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$\\",\\"typeString\\":\\"function (address,address,uint256)\\"}},\\"id\\":678,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"6157:36:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_tuple$__$\\",\\"typeString\\":\\"tuple()\\"}},\\"id\\":679,\\"nodeType\\":\\"EmitStatement\\",\\"src\\":\\"6152:41:0\\"}]},\\"documentation\\":null,\\"id\\":681,\\"implemented\\":true,\\"isConstructor\\":false,\\"isDeclaredConst\\":false,\\"modifiers\\":[{\\"arguments\\":[{\\"argumentTypes\\":null,\\"id\\":601,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":596,\\"src\\":\\"5605:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},{\\"argumentTypes\\":null,\\"id\\":602,\\"name\\":\\"_cap\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":598,\\"src\\":\\"5617:4:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}}],\\"id\\":603,\\"modifierName\\":{\\"argumentTypes\\":null,\\"id\\":600,\\"name\\":\\"onlyValidVote\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":200,\\"src\\":\\"5591:13:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_modifier$_t_address_$_t_uint256_$\\",\\"typeString\\":\\"modifier (address,uint256)\\"}},\\"nodeType\\":\\"ModifierInvocation\\",\\"src\\":\\"5591:31:0\\"}],\\"name\\":\\"unvote\\",\\"nodeType\\":\\"FunctionDefinition\\",\\"parameters\\":{\\"id\\":599,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":596,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":681,\\"src\\":\\"5550:18:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":595,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"5550:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":598,\\"name\\":\\"_cap\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":681,\\"src\\":\\"5570:12:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":597,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"5570:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"5549:34:0\\"},\\"payable\\":false,\\"returnParameters\\":{\\"id\\":604,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[],\\"src\\":\\"5623:0:0\\"},\\"scope\\":864,\\"src\\":\\"5534:666:0\\",\\"stateMutability\\":\\"nonpayable\\",\\"superFunction\\":null,\\"visibility\\":\\"public\\"},{\\"body\\":{\\"id\\":807,\\"nodeType\\":\\"Block\\",\\"src\\":\\"6297:888:0\\",\\"statements\\":[{\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":697,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftHandSide\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":692,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"6307:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":694,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":693,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":683,\\"src\\":\\"6323:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"6307:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":695,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":true,\\"memberName\\":\\"isCandidate\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":47,\\"src\\":\\"6307:39:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}},\\"nodeType\\":\\"Assignment\\",\\"operator\\":\\"=\\",\\"rightHandSide\\":{\\"argumentTypes\\":null,\\"hexValue\\":\\"66616c7365\\",\\"id\\":696,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":true,\\"kind\\":\\"bool\\",\\"lValueRequested\\":false,\\"nodeType\\":\\"Literal\\",\\"src\\":\\"6349:5:0\\",\\"subdenomination\\":null,\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"},\\"value\\":\\"false\\"},\\"src\\":\\"6307:47:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}},\\"id\\":698,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"6307:47:0\\"},{\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":704,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftHandSide\\":{\\"argumentTypes\\":null,\\"id\\":699,\\"name\\":\\"candidateCount\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":81,\\"src\\":\\"6364:14:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"Assignment\\",\\"operator\\":\\"=\\",\\"rightHandSide\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"hexValue\\":\\"31\\",\\"id\\":702,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":true,\\"kind\\":\\"number\\",\\"lValueRequested\\":false,\\"nodeType\\":\\"Literal\\",\\"src\\":\\"6400:1:0\\",\\"subdenomination\\":null,\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_rational_1_by_1\\",\\"typeString\\":\\"int_const 1\\"},\\"value\\":\\"1\\"}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_rational_1_by_1\\",\\"typeString\\":\\"int_const 1\\"}],\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":700,\\"name\\":\\"candidateCount\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":81,\\"src\\":\\"6381:14:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":701,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sub\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":933,\\"src\\":\\"6381:18:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$\\",\\"typeString\\":\\"function (uint256,uint256) pure returns (uint256)\\"}},\\"id\\":703,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"6381:21:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"src\\":\\"6364:38:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":705,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"6364:38:0\\"},{\\"body\\":{\\"id\\":730,\\"nodeType\\":\\"Block\\",\\"src\\":\\"6460:133:0\\",\\"statements\\":[{\\"condition\\":{\\"argumentTypes\\":null,\\"commonType\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"id\\":721,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftExpression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":717,\\"name\\":\\"candidates\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":78,\\"src\\":\\"6478:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_address_$dyn_storage\\",\\"typeString\\":\\"address[] storage ref\\"}},\\"id\\":719,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":718,\\"name\\":\\"i\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":707,\\"src\\":\\"6489:1:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"6478:13:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"nodeType\\":\\"BinaryOperation\\",\\"operator\\":\\"==\\",\\"rightExpression\\":{\\"argumentTypes\\":null,\\"id\\":720,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":683,\\"src\\":\\"6495:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"src\\":\\"6478:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}},\\"falseBody\\":null,\\"id\\":729,\\"nodeType\\":\\"IfStatement\\",\\"src\\":\\"6474:109:0\\",\\"trueBody\\":{\\"id\\":728,\\"nodeType\\":\\"Block\\",\\"src\\":\\"6507:76:0\\",\\"statements\\":[{\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":725,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"UnaryOperation\\",\\"operator\\":\\"delete\\",\\"prefix\\":true,\\"src\\":\\"6525:20:0\\",\\"subExpression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":722,\\"name\\":\\"candidates\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":78,\\"src\\":\\"6532:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_address_$dyn_storage\\",\\"typeString\\":\\"address[] storage ref\\"}},\\"id\\":724,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":723,\\"name\\":\\"i\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":707,\\"src\\":\\"6543:1:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":true,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"6532:13:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_tuple$__$\\",\\"typeString\\":\\"tuple()\\"}},\\"id\\":726,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"6525:20:0\\"},{\\"id\\":727,\\"nodeType\\":\\"Break\\",\\"src\\":\\"6563:5:0\\"}]}}]},\\"condition\\":{\\"argumentTypes\\":null,\\"commonType\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"id\\":713,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftExpression\\":{\\"argumentTypes\\":null,\\"id\\":710,\\"name\\":\\"i\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":707,\\"src\\":\\"6432:1:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"BinaryOperation\\",\\"operator\\":\\"<\\",\\"rightExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":711,\\"name\\":\\"candidates\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":78,\\"src\\":\\"6436:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_address_$dyn_storage\\",\\"typeString\\":\\"address[] storage ref\\"}},\\"id\\":712,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"length\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"6436:17:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"src\\":\\"6432:21:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}},\\"id\\":731,\\"initializationExpression\\":{\\"assignments\\":[707],\\"declarations\\":[{\\"constant\\":false,\\"id\\":707,\\"name\\":\\"i\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":808,\\"src\\":\\"6417:9:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":706,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"6417:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"id\\":709,\\"initialValue\\":{\\"argumentTypes\\":null,\\"hexValue\\":\\"30\\",\\"id\\":708,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":true,\\"kind\\":\\"number\\",\\"lValueRequested\\":false,\\"nodeType\\":\\"Literal\\",\\"src\\":\\"6429:1:0\\",\\"subdenomination\\":null,\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_rational_0_by_1\\",\\"typeString\\":\\"int_const 0\\"},\\"value\\":\\"0\\"},\\"nodeType\\":\\"VariableDeclarationStatement\\",\\"src\\":\\"6417:13:0\\"},\\"loopExpression\\":{\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":715,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"UnaryOperation\\",\\"operator\\":\\"++\\",\\"prefix\\":false,\\"src\\":\\"6455:3:0\\",\\"subExpression\\":{\\"argumentTypes\\":null,\\"id\\":714,\\"name\\":\\"i\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":707,\\"src\\":\\"6455:1:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":716,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"6455:3:0\\"},\\"nodeType\\":\\"ForStatement\\",\\"src\\":\\"6412:181:0\\"},{\\"assignments\\":[733],\\"declarations\\":[{\\"constant\\":false,\\"id\\":733,\\"name\\":\\"cap\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":808,\\"src\\":\\"6602:11:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":732,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"6602:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"id\\":741,\\"initialValue\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":734,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"6616:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":736,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":735,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":683,\\"src\\":\\"6632:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"6616:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":737,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"voters\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":53,\\"src\\":\\"6616:34:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_uint256_$\\",\\"typeString\\":\\"mapping(address => uint256)\\"}},\\"id\\":740,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":738,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"6651:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":739,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"6651:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"6616:46:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"VariableDeclarationStatement\\",\\"src\\":\\"6602:60:0\\"},{\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":753,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftHandSide\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":742,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"6672:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":744,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":743,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":683,\\"src\\":\\"6688:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"6672:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":745,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":true,\\"memberName\\":\\"cap\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":49,\\"src\\":\\"6672:31:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"Assignment\\",\\"operator\\":\\"=\\",\\"rightHandSide\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"id\\":751,\\"name\\":\\"cap\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":733,\\"src\\":\\"6742:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}],\\"expression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":746,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"6706:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":748,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":747,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":683,\\"src\\":\\"6722:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"6706:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":749,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"cap\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":49,\\"src\\":\\"6706:31:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":750,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sub\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":933,\\"src\\":\\"6706:35:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$\\",\\"typeString\\":\\"function (uint256,uint256) pure returns (uint256)\\"}},\\"id\\":752,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"6706:40:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"src\\":\\"6672:74:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":754,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"6672:74:0\\"},{\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":763,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftHandSide\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":755,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"6756:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":757,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":756,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":683,\\"src\\":\\"6772:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"6756:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":758,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"voters\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":53,\\"src\\":\\"6756:34:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_uint256_$\\",\\"typeString\\":\\"mapping(address => uint256)\\"}},\\"id\\":761,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":759,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"6791:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":760,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"6791:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":true,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"6756:46:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"Assignment\\",\\"operator\\":\\"=\\",\\"rightHandSide\\":{\\"argumentTypes\\":null,\\"hexValue\\":\\"30\\",\\"id\\":762,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":true,\\"kind\\":\\"number\\",\\"lValueRequested\\":false,\\"nodeType\\":\\"Literal\\",\\"src\\":\\"6805:1:0\\",\\"subdenomination\\":null,\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_rational_0_by_1\\",\\"typeString\\":\\"int_const 0\\"},\\"value\\":\\"0\\"},\\"src\\":\\"6756:50:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":764,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"6756:50:0\\"},{\\"assignments\\":[766],\\"declarations\\":[{\\"constant\\":false,\\"id\\":766,\\"name\\":\\"withdrawBlockNumber\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":808,\\"src\\":\\"6862:27:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":765,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"6862:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"id\\":772,\\"initialValue\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":769,\\"name\\":\\"block\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":963,\\"src\\":\\"6919:5:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_block\\",\\"typeString\\":\\"block\\"}},\\"id\\":770,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"number\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"6919:12:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}],\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":767,\\"name\\":\\"candidateWithdrawDelay\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":87,\\"src\\":\\"6892:22:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":768,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"add\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":957,\\"src\\":\\"6892:26:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$\\",\\"typeString\\":\\"function (uint256,uint256) pure returns (uint256)\\"}},\\"id\\":771,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"6892:40:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"VariableDeclarationStatement\\",\\"src\\":\\"6862:70:0\\"},{\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":790,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftHandSide\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":773,\\"name\\":\\"withdrawsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":66,\\"src\\":\\"6942:14:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_WithdrawState_$62_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.WithdrawState storage ref)\\"}},\\"id\\":776,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":774,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"6957:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":775,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"6957:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"6942:26:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_WithdrawState_$62_storage\\",\\"typeString\\":\\"struct TomoValidator.WithdrawState storage ref\\"}},\\"id\\":777,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"caps\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":58,\\"src\\":\\"6942:31:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_uint256_$_t_uint256_$\\",\\"typeString\\":\\"mapping(uint256 => uint256)\\"}},\\"id\\":779,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":778,\\"name\\":\\"withdrawBlockNumber\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":766,\\"src\\":\\"6974:19:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":true,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"6942:52:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"Assignment\\",\\"operator\\":\\"=\\",\\"rightHandSide\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"id\\":788,\\"name\\":\\"cap\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":733,\\"src\\":\\"7054:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}],\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":780,\\"name\\":\\"withdrawsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":66,\\"src\\":\\"6997:14:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_WithdrawState_$62_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.WithdrawState storage ref)\\"}},\\"id\\":783,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":781,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"7012:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":782,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"7012:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"6997:26:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_WithdrawState_$62_storage\\",\\"typeString\\":\\"struct TomoValidator.WithdrawState storage ref\\"}},\\"id\\":784,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"caps\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":58,\\"src\\":\\"6997:31:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_uint256_$_t_uint256_$\\",\\"typeString\\":\\"mapping(uint256 => uint256)\\"}},\\"id\\":786,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":785,\\"name\\":\\"withdrawBlockNumber\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":766,\\"src\\":\\"7029:19:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"6997:52:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":787,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"add\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":957,\\"src\\":\\"6997:56:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$\\",\\"typeString\\":\\"function (uint256,uint256) pure returns (uint256)\\"}},\\"id\\":789,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"6997:61:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"src\\":\\"6942:116:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":791,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"6942:116:0\\"},{\\"expression\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"id\\":798,\\"name\\":\\"withdrawBlockNumber\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":766,\\"src\\":\\"7113:19:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}],\\"expression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":792,\\"name\\":\\"withdrawsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":66,\\"src\\":\\"7068:14:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_WithdrawState_$62_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.WithdrawState storage ref)\\"}},\\"id\\":795,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":793,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"7083:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":794,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"7083:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"7068:26:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_WithdrawState_$62_storage\\",\\"typeString\\":\\"struct TomoValidator.WithdrawState storage ref\\"}},\\"id\\":796,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"blockNumbers\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":61,\\"src\\":\\"7068:39:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_uint256_$dyn_storage\\",\\"typeString\\":\\"uint256[] storage ref\\"}},\\"id\\":797,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"push\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"7068:44:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$\\",\\"typeString\\":\\"function (uint256) returns (uint256)\\"}},\\"id\\":799,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"7068:65:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":800,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"7068:65:0\\"},{\\"eventCall\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":802,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"7155:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":803,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"7155:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},{\\"argumentTypes\\":null,\\"id\\":804,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":683,\\"src\\":\\"7167:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}],\\"id\\":801,\\"name\\":\\"Resign\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":35,\\"src\\":\\"7148:6:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$\\",\\"typeString\\":\\"function (address,address)\\"}},\\"id\\":805,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"7148:30:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_tuple$__$\\",\\"typeString\\":\\"tuple()\\"}},\\"id\\":806,\\"nodeType\\":\\"EmitStatement\\",\\"src\\":\\"7143:35:0\\"}]},\\"documentation\\":null,\\"id\\":808,\\"implemented\\":true,\\"isConstructor\\":false,\\"isDeclaredConst\\":false,\\"modifiers\\":[{\\"arguments\\":[{\\"argumentTypes\\":null,\\"id\\":686,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":683,\\"src\\":\\"6259:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}}],\\"id\\":687,\\"modifierName\\":{\\"argumentTypes\\":null,\\"id\\":685,\\"name\\":\\"onlyOwner\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":116,\\"src\\":\\"6249:9:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_modifier$_t_address_$\\",\\"typeString\\":\\"modifier (address)\\"}},\\"nodeType\\":\\"ModifierInvocation\\",\\"src\\":\\"6249:21:0\\"},{\\"arguments\\":[{\\"argumentTypes\\":null,\\"id\\":689,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":683,\\"src\\":\\"6285:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}}],\\"id\\":690,\\"modifierName\\":{\\"argumentTypes\\":null,\\"id\\":688,\\"name\\":\\"onlyCandidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":129,\\"src\\":\\"6271:13:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_modifier$_t_address_$\\",\\"typeString\\":\\"modifier (address)\\"}},\\"nodeType\\":\\"ModifierInvocation\\",\\"src\\":\\"6271:25:0\\"}],\\"name\\":\\"resign\\",\\"nodeType\\":\\"FunctionDefinition\\",\\"parameters\\":{\\"id\\":684,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":683,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":808,\\"src\\":\\"6222:18:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":682,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"6222:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"6221:20:0\\"},\\"payable\\":false,\\"returnParameters\\":{\\"id\\":691,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[],\\"src\\":\\"6297:0:0\\"},\\"scope\\":864,\\"src\\":\\"6206:979:0\\",\\"stateMutability\\":\\"nonpayable\\",\\"superFunction\\":null,\\"visibility\\":\\"public\\"},{\\"body\\":{\\"id\\":862,\\"nodeType\\":\\"Block\\",\\"src\\":\\"7291:290:0\\",\\"statements\\":[{\\"assignments\\":[820],\\"declarations\\":[{\\"constant\\":false,\\"id\\":820,\\"name\\":\\"cap\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":863,\\"src\\":\\"7301:11:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":819,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"7301:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"id\\":828,\\"initialValue\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":821,\\"name\\":\\"withdrawsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":66,\\"src\\":\\"7315:14:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_WithdrawState_$62_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.WithdrawState storage ref)\\"}},\\"id\\":824,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":822,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"7330:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":823,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"7330:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"7315:26:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_WithdrawState_$62_storage\\",\\"typeString\\":\\"struct TomoValidator.WithdrawState storage ref\\"}},\\"id\\":825,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"caps\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":58,\\"src\\":\\"7315:31:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_uint256_$_t_uint256_$\\",\\"typeString\\":\\"mapping(uint256 => uint256)\\"}},\\"id\\":827,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":826,\\"name\\":\\"_blockNumber\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":810,\\"src\\":\\"7347:12:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"7315:45:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"VariableDeclarationStatement\\",\\"src\\":\\"7301:59:0\\"},{\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":836,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"UnaryOperation\\",\\"operator\\":\\"delete\\",\\"prefix\\":true,\\"src\\":\\"7370:52:0\\",\\"subExpression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":829,\\"name\\":\\"withdrawsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":66,\\"src\\":\\"7377:14:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_WithdrawState_$62_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.WithdrawState storage ref)\\"}},\\"id\\":832,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":830,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"7392:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":831,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"7392:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"7377:26:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_WithdrawState_$62_storage\\",\\"typeString\\":\\"struct TomoValidator.WithdrawState storage ref\\"}},\\"id\\":833,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"caps\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":58,\\"src\\":\\"7377:31:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_uint256_$_t_uint256_$\\",\\"typeString\\":\\"mapping(uint256 => uint256)\\"}},\\"id\\":835,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":834,\\"name\\":\\"_blockNumber\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":810,\\"src\\":\\"7409:12:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":true,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"7377:45:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_tuple$__$\\",\\"typeString\\":\\"tuple()\\"}},\\"id\\":837,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"7370:52:0\\"},{\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":845,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"UnaryOperation\\",\\"operator\\":\\"delete\\",\\"prefix\\":true,\\"src\\":\\"7432:54:0\\",\\"subExpression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":838,\\"name\\":\\"withdrawsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":66,\\"src\\":\\"7439:14:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_WithdrawState_$62_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.WithdrawState storage ref)\\"}},\\"id\\":841,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":839,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"7454:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":840,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"7454:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"7439:26:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_WithdrawState_$62_storage\\",\\"typeString\\":\\"struct TomoValidator.WithdrawState storage ref\\"}},\\"id\\":842,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"blockNumbers\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":61,\\"src\\":\\"7439:39:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_uint256_$dyn_storage\\",\\"typeString\\":\\"uint256[] storage ref\\"}},\\"id\\":844,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":843,\\"name\\":\\"_index\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":812,\\"src\\":\\"7479:6:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":true,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"7439:47:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_tuple$__$\\",\\"typeString\\":\\"tuple()\\"}},\\"id\\":846,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"7432:54:0\\"},{\\"expression\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"id\\":852,\\"name\\":\\"cap\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":820,\\"src\\":\\"7516:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}],\\"expression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":847,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"7496:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":850,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"7496:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"id\\":851,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"transfer\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"7496:19:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_transfer_nonpayable$_t_uint256_$returns$__$\\",\\"typeString\\":\\"function (uint256)\\"}},\\"id\\":853,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"7496:24:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_tuple$__$\\",\\"typeString\\":\\"tuple()\\"}},\\"id\\":854,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"7496:24:0\\"},{\\"eventCall\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":856,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"7544:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":857,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"7544:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},{\\"argumentTypes\\":null,\\"id\\":858,\\"name\\":\\"_blockNumber\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":810,\\"src\\":\\"7556:12:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},{\\"argumentTypes\\":null,\\"id\\":859,\\"name\\":\\"cap\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":820,\\"src\\":\\"7570:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}],\\"id\\":855,\\"name\\":\\"Withdraw\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":43,\\"src\\":\\"7535:8:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$\\",\\"typeString\\":\\"function (address,uint256,uint256)\\"}},\\"id\\":860,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"7535:39:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_tuple$__$\\",\\"typeString\\":\\"tuple()\\"}},\\"id\\":861,\\"nodeType\\":\\"EmitStatement\\",\\"src\\":\\"7530:44:0\\"}]},\\"documentation\\":null,\\"id\\":863,\\"implemented\\":true,\\"isConstructor\\":false,\\"isDeclaredConst\\":false,\\"modifiers\\":[{\\"arguments\\":[{\\"argumentTypes\\":null,\\"id\\":815,\\"name\\":\\"_blockNumber\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":810,\\"src\\":\\"7269:12:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},{\\"argumentTypes\\":null,\\"id\\":816,\\"name\\":\\"_index\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":812,\\"src\\":\\"7283:6:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}}],\\"id\\":817,\\"modifierName\\":{\\"argumentTypes\\":null,\\"id\\":814,\\"name\\":\\"onlyValidWithdraw\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":245,\\"src\\":\\"7251:17:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_modifier$_t_uint256_$_t_uint256_$\\",\\"typeString\\":\\"modifier (uint256,uint256)\\"}},\\"nodeType\\":\\"ModifierInvocation\\",\\"src\\":\\"7251:39:0\\"}],\\"name\\":\\"withdraw\\",\\"nodeType\\":\\"FunctionDefinition\\",\\"parameters\\":{\\"id\\":813,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":810,\\"name\\":\\"_blockNumber\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":863,\\"src\\":\\"7209:20:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":809,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"7209:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":812,\\"name\\":\\"_index\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":863,\\"src\\":\\"7231:11:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":811,\\"name\\":\\"uint\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"7231:4:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"7208:35:0\\"},\\"payable\\":false,\\"returnParameters\\":{\\"id\\":818,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[],\\"src\\":\\"7291:0:0\\"},\\"scope\\":864,\\"src\\":\\"7191:390:0\\",\\"stateMutability\\":\\"nonpayable\\",\\"superFunction\\":null,\\"visibility\\":\\"public\\"}],\\"scope\\":865,\\"src\\":\\"57:7526:0\\"}],\\"src\\":\\"0:7584:0\\"},\\"legacyAST\\":{\\"absolutePath\\":\\"/home/vagrant/projects/tomomaster/contracts/TomoValidator.sol\\",\\"exportedSymbols\\":{\\"TomoValidator\\":[864]},\\"id\\":865,\\"nodeType\\":\\"SourceUnit\\",\\"nodes\\":[{\\"id\\":1,\\"literals\\":[\\"solidity\\",\\"^\\",\\"0.4\\",\\".21\\"],\\"nodeType\\":\\"PragmaDirective\\",\\"src\\":\\"0:24:0\\"},{\\"absolutePath\\":\\"/home/vagrant/projects/tomomaster/contracts/libs/SafeMath.sol\\",\\"file\\":\\"./libs/SafeMath.sol\\",\\"id\\":2,\\"nodeType\\":\\"ImportDirective\\",\\"scope\\":865,\\"sourceUnit\\":959,\\"src\\":\\"26:29:0\\",\\"symbolAliases\\":[],\\"unitAlias\\":\\"\\"},{\\"baseContracts\\":[],\\"contractDependencies\\":[],\\"contractKind\\":\\"contract\\",\\"documentation\\":null,\\"fullyImplemented\\":true,\\"id\\":864,\\"linearizedBaseContracts\\":[864],\\"name\\":\\"TomoValidator\\",\\"nodeType\\":\\"ContractDefinition\\",\\"nodes\\":[{\\"id\\":5,\\"libraryName\\":{\\"contractScope\\":null,\\"id\\":3,\\"name\\":\\"SafeMath\\",\\"nodeType\\":\\"UserDefinedTypeName\\",\\"referencedDeclaration\\":958,\\"src\\":\\"92:8:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_contract$_SafeMath_$958\\",\\"typeString\\":\\"library SafeMath\\"}},\\"nodeType\\":\\"UsingForDirective\\",\\"src\\":\\"86:27:0\\",\\"typeName\\":{\\"id\\":4,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"105:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}}},{\\"anonymous\\":false,\\"documentation\\":null,\\"id\\":13,\\"name\\":\\"Vote\\",\\"nodeType\\":\\"EventDefinition\\",\\"parameters\\":{\\"id\\":12,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":7,\\"indexed\\":false,\\"name\\":\\"_voter\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":13,\\"src\\":\\"130:14:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":6,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"130:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":9,\\"indexed\\":false,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":13,\\"src\\":\\"146:18:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":8,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"146:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":11,\\"indexed\\":false,\\"name\\":\\"_cap\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":13,\\"src\\":\\"166:12:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":10,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"166:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"129:50:0\\"},\\"src\\":\\"119:61:0\\"},{\\"anonymous\\":false,\\"documentation\\":null,\\"id\\":21,\\"name\\":\\"Unvote\\",\\"nodeType\\":\\"EventDefinition\\",\\"parameters\\":{\\"id\\":20,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":15,\\"indexed\\":false,\\"name\\":\\"_voter\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":21,\\"src\\":\\"198:14:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":14,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"198:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":17,\\"indexed\\":false,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":21,\\"src\\":\\"214:18:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":16,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"214:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":19,\\"indexed\\":false,\\"name\\":\\"_cap\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":21,\\"src\\":\\"234:12:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":18,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"234:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"197:50:0\\"},\\"src\\":\\"185:63:0\\"},{\\"anonymous\\":false,\\"documentation\\":null,\\"id\\":29,\\"name\\":\\"Propose\\",\\"nodeType\\":\\"EventDefinition\\",\\"parameters\\":{\\"id\\":28,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":23,\\"indexed\\":false,\\"name\\":\\"_owner\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":29,\\"src\\":\\"267:14:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":22,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"267:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":25,\\"indexed\\":false,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":29,\\"src\\":\\"283:18:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":24,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"283:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":27,\\"indexed\\":false,\\"name\\":\\"_cap\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":29,\\"src\\":\\"303:12:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":26,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"303:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"266:50:0\\"},\\"src\\":\\"253:64:0\\"},{\\"anonymous\\":false,\\"documentation\\":null,\\"id\\":35,\\"name\\":\\"Resign\\",\\"nodeType\\":\\"EventDefinition\\",\\"parameters\\":{\\"id\\":34,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":31,\\"indexed\\":false,\\"name\\":\\"_owner\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":35,\\"src\\":\\"335:14:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":30,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"335:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":33,\\"indexed\\":false,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":35,\\"src\\":\\"351:18:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":32,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"351:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"334:36:0\\"},\\"src\\":\\"322:49:0\\"},{\\"anonymous\\":false,\\"documentation\\":null,\\"id\\":43,\\"name\\":\\"Withdraw\\",\\"nodeType\\":\\"EventDefinition\\",\\"parameters\\":{\\"id\\":42,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":37,\\"indexed\\":false,\\"name\\":\\"_owner\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":43,\\"src\\":\\"391:14:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":36,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"391:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":39,\\"indexed\\":false,\\"name\\":\\"_blockNumber\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":43,\\"src\\":\\"407:20:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":38,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"407:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":41,\\"indexed\\":false,\\"name\\":\\"_cap\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":43,\\"src\\":\\"429:12:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":40,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"429:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"390:52:0\\"},\\"src\\":\\"376:67:0\\"},{\\"canonicalName\\":\\"TomoValidator.ValidatorState\\",\\"id\\":54,\\"members\\":[{\\"constant\\":false,\\"id\\":45,\\"name\\":\\"owner\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":54,\\"src\\":\\"481:13:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":44,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"481:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":47,\\"name\\":\\"isCandidate\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":54,\\"src\\":\\"504:16:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"},\\"typeName\\":{\\"id\\":46,\\"name\\":\\"bool\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"504:4:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":49,\\"name\\":\\"cap\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":54,\\"src\\":\\"530:11:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":48,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"530:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":53,\\"name\\":\\"voters\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":54,\\"src\\":\\"551:34:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_uint256_$\\",\\"typeString\\":\\"mapping(address => uint256)\\"},\\"typeName\\":{\\"id\\":52,\\"keyType\\":{\\"id\\":50,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"559:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"nodeType\\":\\"Mapping\\",\\"src\\":\\"551:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_uint256_$\\",\\"typeString\\":\\"mapping(address => uint256)\\"},\\"valueType\\":{\\"id\\":51,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"570:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"name\\":\\"ValidatorState\\",\\"nodeType\\":\\"StructDefinition\\",\\"scope\\":864,\\"src\\":\\"449:143:0\\",\\"visibility\\":\\"public\\"},{\\"canonicalName\\":\\"TomoValidator.WithdrawState\\",\\"id\\":62,\\"members\\":[{\\"constant\\":false,\\"id\\":58,\\"name\\":\\"caps\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":62,\\"src\\":\\"627:32:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_uint256_$_t_uint256_$\\",\\"typeString\\":\\"mapping(uint256 => uint256)\\"},\\"typeName\\":{\\"id\\":57,\\"keyType\\":{\\"id\\":55,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"635:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"Mapping\\",\\"src\\":\\"627:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_uint256_$_t_uint256_$\\",\\"typeString\\":\\"mapping(uint256 => uint256)\\"},\\"valueType\\":{\\"id\\":56,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"646:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":61,\\"name\\":\\"blockNumbers\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":62,\\"src\\":\\"667:22:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_uint256_$dyn_storage_ptr\\",\\"typeString\\":\\"uint256[]\\"},\\"typeName\\":{\\"baseType\\":{\\"id\\":59,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"667:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":60,\\"length\\":null,\\"nodeType\\":\\"ArrayTypeName\\",\\"src\\":\\"667:9:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_uint256_$dyn_storage_ptr\\",\\"typeString\\":\\"uint256[]\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"name\\":\\"WithdrawState\\",\\"nodeType\\":\\"StructDefinition\\",\\"scope\\":864,\\"src\\":\\"598:98:0\\",\\"visibility\\":\\"public\\"},{\\"constant\\":false,\\"id\\":66,\\"name\\":\\"withdrawsState\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":864,\\"src\\":\\"702:48:0\\",\\"stateVariable\\":true,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_WithdrawState_$62_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.WithdrawState)\\"},\\"typeName\\":{\\"id\\":65,\\"keyType\\":{\\"id\\":63,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"710:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"nodeType\\":\\"Mapping\\",\\"src\\":\\"702:33:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_WithdrawState_$62_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.WithdrawState)\\"},\\"valueType\\":{\\"contractScope\\":null,\\"id\\":64,\\"name\\":\\"WithdrawState\\",\\"nodeType\\":\\"UserDefinedTypeName\\",\\"referencedDeclaration\\":62,\\"src\\":\\"721:13:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_WithdrawState_$62_storage_ptr\\",\\"typeString\\":\\"struct TomoValidator.WithdrawState\\"}}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":70,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":864,\\"src\\":\\"757:50:0\\",\\"stateVariable\\":true,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState)\\"},\\"typeName\\":{\\"id\\":69,\\"keyType\\":{\\"id\\":67,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"765:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"nodeType\\":\\"Mapping\\",\\"src\\":\\"757:34:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState)\\"},\\"valueType\\":{\\"contractScope\\":null,\\"id\\":68,\\"name\\":\\"ValidatorState\\",\\"nodeType\\":\\"UserDefinedTypeName\\",\\"referencedDeclaration\\":54,\\"src\\":\\"776:14:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage_ptr\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState\\"}}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":75,\\"name\\":\\"voters\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":864,\\"src\\":\\"813:36:0\\",\\"stateVariable\\":true,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$\\",\\"typeString\\":\\"mapping(address => address[])\\"},\\"typeName\\":{\\"id\\":74,\\"keyType\\":{\\"id\\":71,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"821:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"nodeType\\":\\"Mapping\\",\\"src\\":\\"813:29:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$\\",\\"typeString\\":\\"mapping(address => address[])\\"},\\"valueType\\":{\\"baseType\\":{\\"id\\":72,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"832:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"id\\":73,\\"length\\":null,\\"nodeType\\":\\"ArrayTypeName\\",\\"src\\":\\"832:9:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_address_$dyn_storage_ptr\\",\\"typeString\\":\\"address[]\\"}}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":78,\\"name\\":\\"candidates\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":864,\\"src\\":\\"855:27:0\\",\\"stateVariable\\":true,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_address_$dyn_storage\\",\\"typeString\\":\\"address[]\\"},\\"typeName\\":{\\"baseType\\":{\\"id\\":76,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"855:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"id\\":77,\\"length\\":null,\\"nodeType\\":\\"ArrayTypeName\\",\\"src\\":\\"855:9:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_address_$dyn_storage_ptr\\",\\"typeString\\":\\"address[]\\"}},\\"value\\":null,\\"visibility\\":\\"public\\"},{\\"constant\\":false,\\"id\\":81,\\"name\\":\\"candidateCount\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":864,\\"src\\":\\"889:33:0\\",\\"stateVariable\\":true,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":79,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"889:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":{\\"argumentTypes\\":null,\\"hexValue\\":\\"30\\",\\"id\\":80,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":true,\\"kind\\":\\"number\\",\\"lValueRequested\\":false,\\"nodeType\\":\\"Literal\\",\\"src\\":\\"921:1:0\\",\\"subdenomination\\":null,\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_rational_0_by_1\\",\\"typeString\\":\\"int_const 0\\"},\\"value\\":\\"0\\"},\\"visibility\\":\\"public\\"},{\\"constant\\":false,\\"id\\":83,\\"name\\":\\"minCandidateCap\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":864,\\"src\\":\\"928:30:0\\",\\"stateVariable\\":true,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":82,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"928:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"public\\"},{\\"constant\\":false,\\"id\\":85,\\"name\\":\\"maxValidatorNumber\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":864,\\"src\\":\\"964:33:0\\",\\"stateVariable\\":true,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":84,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"964:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"public\\"},{\\"constant\\":false,\\"id\\":87,\\"name\\":\\"candidateWithdrawDelay\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":864,\\"src\\":\\"1003:37:0\\",\\"stateVariable\\":true,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":86,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"1003:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"public\\"},{\\"constant\\":false,\\"id\\":89,\\"name\\":\\"voterWithdrawDelay\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":864,\\"src\\":\\"1046:33:0\\",\\"stateVariable\\":true,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":88,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"1046:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"public\\"},{\\"body\\":{\\"id\\":99,\\"nodeType\\":\\"Block\\",\\"src\\":\\"1117:124:0\\",\\"statements\\":[{\\"expression\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"commonType\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"id\\":95,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":92,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"1194:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":93,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"value\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"1194:9:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"BinaryOperation\\",\\"operator\\":\\">=\\",\\"rightExpression\\":{\\"argumentTypes\\":null,\\"id\\":94,\\"name\\":\\"minCandidateCap\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":83,\\"src\\":\\"1207:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"src\\":\\"1194:28:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}],\\"id\\":91,\\"name\\":\\"require\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[976,977],\\"referencedDeclaration\\":976,\\"src\\":\\"1186:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_require_pure$_t_bool_$returns$__$\\",\\"typeString\\":\\"function (bool) pure\\"}},\\"id\\":96,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"1186:37:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_tuple$__$\\",\\"typeString\\":\\"tuple()\\"}},\\"id\\":97,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"1186:37:0\\"},{\\"id\\":98,\\"nodeType\\":\\"PlaceholderStatement\\",\\"src\\":\\"1233:1:0\\"}]},\\"documentation\\":null,\\"id\\":100,\\"name\\":\\"onlyValidCandidateCap\\",\\"nodeType\\":\\"ModifierDefinition\\",\\"parameters\\":{\\"id\\":90,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[],\\"src\\":\\"1117:0:0\\"},\\"src\\":\\"1086:155:0\\",\\"visibility\\":\\"internal\\"},{\\"body\\":{\\"id\\":115,\\"nodeType\\":\\"Block\\",\\"src\\":\\"1286:84:0\\",\\"statements\\":[{\\"expression\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"commonType\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"id\\":111,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":105,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"1304:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":107,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":106,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":102,\\"src\\":\\"1320:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"1304:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":108,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"owner\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":45,\\"src\\":\\"1304:33:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"nodeType\\":\\"BinaryOperation\\",\\"operator\\":\\"==\\",\\"rightExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":109,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"1341:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":110,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"1341:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"src\\":\\"1304:47:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}],\\"id\\":104,\\"name\\":\\"require\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[976,977],\\"referencedDeclaration\\":976,\\"src\\":\\"1296:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_require_pure$_t_bool_$returns$__$\\",\\"typeString\\":\\"function (bool) pure\\"}},\\"id\\":112,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"1296:56:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_tuple$__$\\",\\"typeString\\":\\"tuple()\\"}},\\"id\\":113,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"1296:56:0\\"},{\\"id\\":114,\\"nodeType\\":\\"PlaceholderStatement\\",\\"src\\":\\"1362:1:0\\"}]},\\"documentation\\":null,\\"id\\":116,\\"name\\":\\"onlyOwner\\",\\"nodeType\\":\\"ModifierDefinition\\",\\"parameters\\":{\\"id\\":103,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":102,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":116,\\"src\\":\\"1266:18:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":101,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"1266:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"1265:20:0\\"},\\"src\\":\\"1247:123:0\\",\\"visibility\\":\\"internal\\"},{\\"body\\":{\\"id\\":128,\\"nodeType\\":\\"Block\\",\\"src\\":\\"1419:76:0\\",\\"statements\\":[{\\"expression\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":121,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"1437:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":123,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":122,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":118,\\"src\\":\\"1453:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"1437:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":124,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"isCandidate\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":47,\\"src\\":\\"1437:39:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}],\\"id\\":120,\\"name\\":\\"require\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[976,977],\\"referencedDeclaration\\":976,\\"src\\":\\"1429:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_require_pure$_t_bool_$returns$__$\\",\\"typeString\\":\\"function (bool) pure\\"}},\\"id\\":125,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"1429:48:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_tuple$__$\\",\\"typeString\\":\\"tuple()\\"}},\\"id\\":126,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"1429:48:0\\"},{\\"id\\":127,\\"nodeType\\":\\"PlaceholderStatement\\",\\"src\\":\\"1487:1:0\\"}]},\\"documentation\\":null,\\"id\\":129,\\"name\\":\\"onlyCandidate\\",\\"nodeType\\":\\"ModifierDefinition\\",\\"parameters\\":{\\"id\\":119,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":118,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":129,\\"src\\":\\"1399:18:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":117,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"1399:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"1398:20:0\\"},\\"src\\":\\"1376:119:0\\",\\"visibility\\":\\"internal\\"},{\\"body\\":{\\"id\\":141,\\"nodeType\\":\\"Block\\",\\"src\\":\\"1550:76:0\\",\\"statements\\":[{\\"expression\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":134,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"1568:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":136,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":135,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":131,\\"src\\":\\"1584:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"1568:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":137,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"isCandidate\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":47,\\"src\\":\\"1568:39:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}],\\"id\\":133,\\"name\\":\\"require\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[976,977],\\"referencedDeclaration\\":976,\\"src\\":\\"1560:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_require_pure$_t_bool_$returns$__$\\",\\"typeString\\":\\"function (bool) pure\\"}},\\"id\\":138,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"1560:48:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_tuple$__$\\",\\"typeString\\":\\"tuple()\\"}},\\"id\\":139,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"1560:48:0\\"},{\\"id\\":140,\\"nodeType\\":\\"PlaceholderStatement\\",\\"src\\":\\"1618:1:0\\"}]},\\"documentation\\":null,\\"id\\":142,\\"name\\":\\"onlyValidCandidate\\",\\"nodeType\\":\\"ModifierDefinition\\",\\"parameters\\":{\\"id\\":132,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":131,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":142,\\"src\\":\\"1530:18:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":130,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"1530:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"1529:20:0\\"},\\"src\\":\\"1501:125:0\\",\\"visibility\\":\\"internal\\"},{\\"body\\":{\\"id\\":155,\\"nodeType\\":\\"Block\\",\\"src\\":\\"1679:77:0\\",\\"statements\\":[{\\"expression\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"id\\":151,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"UnaryOperation\\",\\"operator\\":\\"!\\",\\"prefix\\":true,\\"src\\":\\"1697:40:0\\",\\"subExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":147,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"1698:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":149,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":148,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":144,\\"src\\":\\"1714:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"1698:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":150,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"isCandidate\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":47,\\"src\\":\\"1698:39:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}},\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}],\\"id\\":146,\\"name\\":\\"require\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[976,977],\\"referencedDeclaration\\":976,\\"src\\":\\"1689:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_require_pure$_t_bool_$returns$__$\\",\\"typeString\\":\\"function (bool) pure\\"}},\\"id\\":152,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"1689:49:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_tuple$__$\\",\\"typeString\\":\\"tuple()\\"}},\\"id\\":153,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"1689:49:0\\"},{\\"id\\":154,\\"nodeType\\":\\"PlaceholderStatement\\",\\"src\\":\\"1748:1:0\\"}]},\\"documentation\\":null,\\"id\\":156,\\"name\\":\\"onlyNotCandidate\\",\\"nodeType\\":\\"ModifierDefinition\\",\\"parameters\\":{\\"id\\":145,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":144,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":156,\\"src\\":\\"1659:18:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":143,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"1659:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"1658:20:0\\"},\\"src\\":\\"1632:124:0\\",\\"visibility\\":\\"internal\\"},{\\"body\\":{\\"id\\":199,\\"nodeType\\":\\"Block\\",\\"src\\":\\"1820:262:0\\",\\"statements\\":[{\\"expression\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"commonType\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"id\\":171,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftExpression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":163,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"1838:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":165,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":164,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":158,\\"src\\":\\"1854:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"1838:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":166,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"voters\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":53,\\"src\\":\\"1838:34:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_uint256_$\\",\\"typeString\\":\\"mapping(address => uint256)\\"}},\\"id\\":169,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":167,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"1873:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":168,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"1873:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"1838:46:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"BinaryOperation\\",\\"operator\\":\\">=\\",\\"rightExpression\\":{\\"argumentTypes\\":null,\\"id\\":170,\\"name\\":\\"_cap\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":160,\\"src\\":\\"1888:4:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"src\\":\\"1838:54:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}],\\"id\\":162,\\"name\\":\\"require\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[976,977],\\"referencedDeclaration\\":976,\\"src\\":\\"1830:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_require_pure$_t_bool_$returns$__$\\",\\"typeString\\":\\"function (bool) pure\\"}},\\"id\\":172,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"1830:63:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_tuple$__$\\",\\"typeString\\":\\"tuple()\\"}},\\"id\\":173,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"1830:63:0\\"},{\\"condition\\":{\\"argumentTypes\\":null,\\"commonType\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"id\\":180,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":174,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"1907:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":176,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":175,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":158,\\"src\\":\\"1923:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"1907:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":177,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"owner\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":45,\\"src\\":\\"1907:33:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"nodeType\\":\\"BinaryOperation\\",\\"operator\\":\\"==\\",\\"rightExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":178,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"1944:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":179,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"1944:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"src\\":\\"1907:47:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}},\\"falseBody\\":null,\\"id\\":197,\\"nodeType\\":\\"IfStatement\\",\\"src\\":\\"1903:162:0\\",\\"trueBody\\":{\\"id\\":196,\\"nodeType\\":\\"Block\\",\\"src\\":\\"1956:109:0\\",\\"statements\\":[{\\"expression\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"commonType\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"id\\":193,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftExpression\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"id\\":190,\\"name\\":\\"_cap\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":160,\\"src\\":\\"2029:4:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}],\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":182,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"1978:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":184,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":183,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":158,\\"src\\":\\"1994:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"1978:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":185,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"voters\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":53,\\"src\\":\\"1978:34:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_uint256_$\\",\\"typeString\\":\\"mapping(address => uint256)\\"}},\\"id\\":188,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":186,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"2013:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":187,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"2013:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"1978:46:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":189,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sub\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":933,\\"src\\":\\"1978:50:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$\\",\\"typeString\\":\\"function (uint256,uint256) pure returns (uint256)\\"}},\\"id\\":191,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"1978:56:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"BinaryOperation\\",\\"operator\\":\\">=\\",\\"rightExpression\\":{\\"argumentTypes\\":null,\\"id\\":192,\\"name\\":\\"minCandidateCap\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":83,\\"src\\":\\"2038:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"src\\":\\"1978:75:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}],\\"id\\":181,\\"name\\":\\"require\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[976,977],\\"referencedDeclaration\\":976,\\"src\\":\\"1970:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_require_pure$_t_bool_$returns$__$\\",\\"typeString\\":\\"function (bool) pure\\"}},\\"id\\":194,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"1970:84:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_tuple$__$\\",\\"typeString\\":\\"tuple()\\"}},\\"id\\":195,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"1970:84:0\\"}]}},{\\"id\\":198,\\"nodeType\\":\\"PlaceholderStatement\\",\\"src\\":\\"2074:1:0\\"}]},\\"documentation\\":null,\\"id\\":200,\\"name\\":\\"onlyValidVote\\",\\"nodeType\\":\\"ModifierDefinition\\",\\"parameters\\":{\\"id\\":161,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":158,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":200,\\"src\\":\\"1786:18:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":157,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"1786:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":160,\\"name\\":\\"_cap\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":200,\\"src\\":\\"1806:12:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":159,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"1806:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"1785:34:0\\"},\\"src\\":\\"1762:320:0\\",\\"visibility\\":\\"internal\\"},{\\"body\\":{\\"id\\":244,\\"nodeType\\":\\"Block\\",\\"src\\":\\"2151:250:0\\",\\"statements\\":[{\\"expression\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"commonType\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"id\\":209,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftExpression\\":{\\"argumentTypes\\":null,\\"id\\":207,\\"name\\":\\"_blockNumber\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":202,\\"src\\":\\"2169:12:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"BinaryOperation\\",\\"operator\\":\\">\\",\\"rightExpression\\":{\\"argumentTypes\\":null,\\"hexValue\\":\\"30\\",\\"id\\":208,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":true,\\"kind\\":\\"number\\",\\"lValueRequested\\":false,\\"nodeType\\":\\"Literal\\",\\"src\\":\\"2184:1:0\\",\\"subdenomination\\":null,\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_rational_0_by_1\\",\\"typeString\\":\\"int_const 0\\"},\\"value\\":\\"0\\"},\\"src\\":\\"2169:16:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}],\\"id\\":206,\\"name\\":\\"require\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[976,977],\\"referencedDeclaration\\":976,\\"src\\":\\"2161:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_require_pure$_t_bool_$returns$__$\\",\\"typeString\\":\\"function (bool) pure\\"}},\\"id\\":210,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"2161:25:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_tuple$__$\\",\\"typeString\\":\\"tuple()\\"}},\\"id\\":211,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"2161:25:0\\"},{\\"expression\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"commonType\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"id\\":216,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":213,\\"name\\":\\"block\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":963,\\"src\\":\\"2204:5:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_block\\",\\"typeString\\":\\"block\\"}},\\"id\\":214,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"number\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"2204:12:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"BinaryOperation\\",\\"operator\\":\\">=\\",\\"rightExpression\\":{\\"argumentTypes\\":null,\\"id\\":215,\\"name\\":\\"_blockNumber\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":202,\\"src\\":\\"2220:12:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"src\\":\\"2204:28:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}],\\"id\\":212,\\"name\\":\\"require\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[976,977],\\"referencedDeclaration\\":976,\\"src\\":\\"2196:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_require_pure$_t_bool_$returns$__$\\",\\"typeString\\":\\"function (bool) pure\\"}},\\"id\\":217,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"2196:37:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_tuple$__$\\",\\"typeString\\":\\"tuple()\\"}},\\"id\\":218,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"2196:37:0\\"},{\\"expression\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"commonType\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"id\\":228,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftExpression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":220,\\"name\\":\\"withdrawsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":66,\\"src\\":\\"2251:14:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_WithdrawState_$62_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.WithdrawState storage ref)\\"}},\\"id\\":223,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":221,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"2266:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":222,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"2266:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"2251:26:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_WithdrawState_$62_storage\\",\\"typeString\\":\\"struct TomoValidator.WithdrawState storage ref\\"}},\\"id\\":224,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"caps\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":58,\\"src\\":\\"2251:31:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_uint256_$_t_uint256_$\\",\\"typeString\\":\\"mapping(uint256 => uint256)\\"}},\\"id\\":226,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":225,\\"name\\":\\"_blockNumber\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":202,\\"src\\":\\"2283:12:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"2251:45:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"BinaryOperation\\",\\"operator\\":\\">\\",\\"rightExpression\\":{\\"argumentTypes\\":null,\\"hexValue\\":\\"30\\",\\"id\\":227,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":true,\\"kind\\":\\"number\\",\\"lValueRequested\\":false,\\"nodeType\\":\\"Literal\\",\\"src\\":\\"2299:1:0\\",\\"subdenomination\\":null,\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_rational_0_by_1\\",\\"typeString\\":\\"int_const 0\\"},\\"value\\":\\"0\\"},\\"src\\":\\"2251:49:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}],\\"id\\":219,\\"name\\":\\"require\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[976,977],\\"referencedDeclaration\\":976,\\"src\\":\\"2243:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_require_pure$_t_bool_$returns$__$\\",\\"typeString\\":\\"function (bool) pure\\"}},\\"id\\":229,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"2243:58:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_tuple$__$\\",\\"typeString\\":\\"tuple()\\"}},\\"id\\":230,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"2243:58:0\\"},{\\"expression\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"commonType\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"id\\":240,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftExpression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":232,\\"name\\":\\"withdrawsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":66,\\"src\\":\\"2319:14:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_WithdrawState_$62_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.WithdrawState storage ref)\\"}},\\"id\\":235,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":233,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"2334:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":234,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"2334:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"2319:26:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_WithdrawState_$62_storage\\",\\"typeString\\":\\"struct TomoValidator.WithdrawState storage ref\\"}},\\"id\\":236,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"blockNumbers\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":61,\\"src\\":\\"2319:39:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_uint256_$dyn_storage\\",\\"typeString\\":\\"uint256[] storage ref\\"}},\\"id\\":238,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":237,\\"name\\":\\"_index\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":204,\\"src\\":\\"2359:6:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"2319:47:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"BinaryOperation\\",\\"operator\\":\\"==\\",\\"rightExpression\\":{\\"argumentTypes\\":null,\\"id\\":239,\\"name\\":\\"_blockNumber\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":202,\\"src\\":\\"2370:12:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"src\\":\\"2319:63:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}],\\"id\\":231,\\"name\\":\\"require\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[976,977],\\"referencedDeclaration\\":976,\\"src\\":\\"2311:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_require_pure$_t_bool_$returns$__$\\",\\"typeString\\":\\"function (bool) pure\\"}},\\"id\\":241,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"2311:72:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_tuple$__$\\",\\"typeString\\":\\"tuple()\\"}},\\"id\\":242,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"2311:72:0\\"},{\\"id\\":243,\\"nodeType\\":\\"PlaceholderStatement\\",\\"src\\":\\"2393:1:0\\"}]},\\"documentation\\":null,\\"id\\":245,\\"name\\":\\"onlyValidWithdraw\\",\\"nodeType\\":\\"ModifierDefinition\\",\\"parameters\\":{\\"id\\":205,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":202,\\"name\\":\\"_blockNumber\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":245,\\"src\\":\\"2116:20:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":201,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"2116:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":204,\\"name\\":\\"_index\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":245,\\"src\\":\\"2138:11:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":203,\\"name\\":\\"uint\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"2138:4:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"2115:35:0\\"},\\"src\\":\\"2088:313:0\\",\\"visibility\\":\\"internal\\"},{\\"body\\":{\\"id\\":343,\\"nodeType\\":\\"Block\\",\\"src\\":\\"2678:705:0\\",\\"statements\\":[{\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":266,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftHandSide\\":{\\"argumentTypes\\":null,\\"id\\":264,\\"name\\":\\"minCandidateCap\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":83,\\"src\\":\\"2688:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"Assignment\\",\\"operator\\":\\"=\\",\\"rightHandSide\\":{\\"argumentTypes\\":null,\\"id\\":265,\\"name\\":\\"_minCandidateCap\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":255,\\"src\\":\\"2706:16:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"src\\":\\"2688:34:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":267,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"2688:34:0\\"},{\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":270,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftHandSide\\":{\\"argumentTypes\\":null,\\"id\\":268,\\"name\\":\\"maxValidatorNumber\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":85,\\"src\\":\\"2732:18:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"Assignment\\",\\"operator\\":\\"=\\",\\"rightHandSide\\":{\\"argumentTypes\\":null,\\"id\\":269,\\"name\\":\\"_maxValidatorNumber\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":257,\\"src\\":\\"2753:19:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"src\\":\\"2732:40:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":271,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"2732:40:0\\"},{\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":274,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftHandSide\\":{\\"argumentTypes\\":null,\\"id\\":272,\\"name\\":\\"candidateWithdrawDelay\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":87,\\"src\\":\\"2782:22:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"Assignment\\",\\"operator\\":\\"=\\",\\"rightHandSide\\":{\\"argumentTypes\\":null,\\"id\\":273,\\"name\\":\\"_candidateWithdrawDelay\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":259,\\"src\\":\\"2807:23:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"src\\":\\"2782:48:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":275,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"2782:48:0\\"},{\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":278,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftHandSide\\":{\\"argumentTypes\\":null,\\"id\\":276,\\"name\\":\\"voterWithdrawDelay\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":89,\\"src\\":\\"2840:18:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"Assignment\\",\\"operator\\":\\"=\\",\\"rightHandSide\\":{\\"argumentTypes\\":null,\\"id\\":277,\\"name\\":\\"_voterWithdrawDelay\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":261,\\"src\\":\\"2861:19:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"src\\":\\"2840:40:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":279,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"2840:40:0\\"},{\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":286,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftHandSide\\":{\\"argumentTypes\\":null,\\"id\\":280,\\"name\\":\\"candidateCount\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":81,\\"src\\":\\"2890:14:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"Assignment\\",\\"operator\\":\\"=\\",\\"rightHandSide\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":283,\\"name\\":\\"_candidates\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":248,\\"src\\":\\"2926:11:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_address_$dyn_memory_ptr\\",\\"typeString\\":\\"address[] memory\\"}},\\"id\\":284,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"length\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"2926:18:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}],\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":281,\\"name\\":\\"candidateCount\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":81,\\"src\\":\\"2907:14:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":282,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"add\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":957,\\"src\\":\\"2907:18:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$\\",\\"typeString\\":\\"function (uint256,uint256) pure returns (uint256)\\"}},\\"id\\":285,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"2907:38:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"src\\":\\"2890:55:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":287,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"2890:55:0\\"},{\\"body\\":{\\"id\\":341,\\"nodeType\\":\\"Block\\",\\"src\\":\\"3005:372:0\\",\\"statements\\":[{\\"expression\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":302,\\"name\\":\\"_candidates\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":248,\\"src\\":\\"3035:11:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_address_$dyn_memory_ptr\\",\\"typeString\\":\\"address[] memory\\"}},\\"id\\":304,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":303,\\"name\\":\\"i\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":289,\\"src\\":\\"3047:1:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"3035:14:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}],\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":299,\\"name\\":\\"candidates\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":78,\\"src\\":\\"3019:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_address_$dyn_storage\\",\\"typeString\\":\\"address[] storage ref\\"}},\\"id\\":301,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"push\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"3019:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$\\",\\"typeString\\":\\"function (address) returns (uint256)\\"}},\\"id\\":305,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"3019:31:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":306,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"3019:31:0\\"},{\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":319,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftHandSide\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":307,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"3064:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":311,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":308,\\"name\\":\\"_candidates\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":248,\\"src\\":\\"3080:11:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_address_$dyn_memory_ptr\\",\\"typeString\\":\\"address[] memory\\"}},\\"id\\":310,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":309,\\"name\\":\\"i\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":289,\\"src\\":\\"3092:1:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"3080:14:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":true,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"3064:31:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"nodeType\\":\\"Assignment\\",\\"operator\\":\\"=\\",\\"rightHandSide\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"id\\":313,\\"name\\":\\"_firstOwner\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":253,\\"src\\":\\"3138:11:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},{\\"argumentTypes\\":null,\\"hexValue\\":\\"74727565\\",\\"id\\":314,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":true,\\"kind\\":\\"bool\\",\\"lValueRequested\\":false,\\"nodeType\\":\\"Literal\\",\\"src\\":\\"3180:4:0\\",\\"subdenomination\\":null,\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"},\\"value\\":\\"true\\"},{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":315,\\"name\\":\\"_caps\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":251,\\"src\\":\\"3207:5:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_uint256_$dyn_memory_ptr\\",\\"typeString\\":\\"uint256[] memory\\"}},\\"id\\":317,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":316,\\"name\\":\\"i\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":289,\\"src\\":\\"3213:1:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"3207:8:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}}],\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":312,\\"name\\":\\"ValidatorState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":54,\\"src\\":\\"3098:14:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_type$_t_struct$_ValidatorState_$54_storage_ptr_$\\",\\"typeString\\":\\"type(struct TomoValidator.ValidatorState storage pointer)\\"}},\\"id\\":318,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"structConstructorCall\\",\\"lValueRequested\\":false,\\"names\\":[\\"owner\\",\\"isCandidate\\",\\"cap\\"],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"3098:132:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_memory\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState memory\\"}},\\"src\\":\\"3064:166:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":320,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"3064:166:0\\"},{\\"expression\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"id\\":327,\\"name\\":\\"_firstOwner\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":253,\\"src\\":\\"3272:11:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}],\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":321,\\"name\\":\\"voters\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":75,\\"src\\":\\"3244:6:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$\\",\\"typeString\\":\\"mapping(address => address[] storage ref)\\"}},\\"id\\":325,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":322,\\"name\\":\\"_candidates\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":248,\\"src\\":\\"3251:11:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_address_$dyn_memory_ptr\\",\\"typeString\\":\\"address[] memory\\"}},\\"id\\":324,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":323,\\"name\\":\\"i\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":289,\\"src\\":\\"3263:1:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"3251:14:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"3244:22:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_address_$dyn_storage\\",\\"typeString\\":\\"address[] storage ref\\"}},\\"id\\":326,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"push\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"3244:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$\\",\\"typeString\\":\\"function (address) returns (uint256)\\"}},\\"id\\":328,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"3244:40:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":329,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"3244:40:0\\"},{\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":339,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftHandSide\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":330,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"3298:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":334,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":331,\\"name\\":\\"candidates\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":78,\\"src\\":\\"3314:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_address_$dyn_storage\\",\\"typeString\\":\\"address[] storage ref\\"}},\\"id\\":333,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":332,\\"name\\":\\"i\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":289,\\"src\\":\\"3325:1:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"3314:13:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"3298:30:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":335,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"voters\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":53,\\"src\\":\\"3298:37:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_uint256_$\\",\\"typeString\\":\\"mapping(address => uint256)\\"}},\\"id\\":337,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":336,\\"name\\":\\"_firstOwner\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":253,\\"src\\":\\"3336:11:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":true,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"3298:50:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"Assignment\\",\\"operator\\":\\"=\\",\\"rightHandSide\\":{\\"argumentTypes\\":null,\\"id\\":338,\\"name\\":\\"minCandidateCap\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":83,\\"src\\":\\"3351:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"src\\":\\"3298:68:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":340,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"3298:68:0\\"}]},\\"condition\\":{\\"argumentTypes\\":null,\\"commonType\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"id\\":295,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftExpression\\":{\\"argumentTypes\\":null,\\"id\\":292,\\"name\\":\\"i\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":289,\\"src\\":\\"2976:1:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"BinaryOperation\\",\\"operator\\":\\"<\\",\\"rightExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":293,\\"name\\":\\"_candidates\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":248,\\"src\\":\\"2980:11:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_address_$dyn_memory_ptr\\",\\"typeString\\":\\"address[] memory\\"}},\\"id\\":294,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"length\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"2980:18:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"src\\":\\"2976:22:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}},\\"id\\":342,\\"initializationExpression\\":{\\"assignments\\":[289],\\"declarations\\":[{\\"constant\\":false,\\"id\\":289,\\"name\\":\\"i\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":344,\\"src\\":\\"2961:9:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":288,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"2961:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"id\\":291,\\"initialValue\\":{\\"argumentTypes\\":null,\\"hexValue\\":\\"30\\",\\"id\\":290,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":true,\\"kind\\":\\"number\\",\\"lValueRequested\\":false,\\"nodeType\\":\\"Literal\\",\\"src\\":\\"2973:1:0\\",\\"subdenomination\\":null,\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_rational_0_by_1\\",\\"typeString\\":\\"int_const 0\\"},\\"value\\":\\"0\\"},\\"nodeType\\":\\"VariableDeclarationStatement\\",\\"src\\":\\"2961:13:0\\"},\\"loopExpression\\":{\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":297,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"UnaryOperation\\",\\"operator\\":\\"++\\",\\"prefix\\":false,\\"src\\":\\"3000:3:0\\",\\"subExpression\\":{\\"argumentTypes\\":null,\\"id\\":296,\\"name\\":\\"i\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":289,\\"src\\":\\"3000:1:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":298,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"3000:3:0\\"},\\"nodeType\\":\\"ForStatement\\",\\"src\\":\\"2956:421:0\\"}]},\\"documentation\\":null,\\"id\\":344,\\"implemented\\":true,\\"isConstructor\\":true,\\"isDeclaredConst\\":false,\\"modifiers\\":[],\\"name\\":\\"TomoValidator\\",\\"nodeType\\":\\"FunctionDefinition\\",\\"parameters\\":{\\"id\\":262,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":248,\\"name\\":\\"_candidates\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":344,\\"src\\":\\"2440:21:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_address_$dyn_memory_ptr\\",\\"typeString\\":\\"address[]\\"},\\"typeName\\":{\\"baseType\\":{\\"id\\":246,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"2440:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"id\\":247,\\"length\\":null,\\"nodeType\\":\\"ArrayTypeName\\",\\"src\\":\\"2440:9:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_address_$dyn_storage_ptr\\",\\"typeString\\":\\"address[]\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":251,\\"name\\":\\"_caps\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":344,\\"src\\":\\"2471:15:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_uint256_$dyn_memory_ptr\\",\\"typeString\\":\\"uint256[]\\"},\\"typeName\\":{\\"baseType\\":{\\"id\\":249,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"2471:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":250,\\"length\\":null,\\"nodeType\\":\\"ArrayTypeName\\",\\"src\\":\\"2471:9:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_uint256_$dyn_storage_ptr\\",\\"typeString\\":\\"uint256[]\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":253,\\"name\\":\\"_firstOwner\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":344,\\"src\\":\\"2496:19:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":252,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"2496:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":255,\\"name\\":\\"_minCandidateCap\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":344,\\"src\\":\\"2525:24:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":254,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"2525:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":257,\\"name\\":\\"_maxValidatorNumber\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":344,\\"src\\":\\"2559:27:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":256,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"2559:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":259,\\"name\\":\\"_candidateWithdrawDelay\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":344,\\"src\\":\\"2596:31:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":258,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"2596:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":261,\\"name\\":\\"_voterWithdrawDelay\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":344,\\"src\\":\\"2637:27:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":260,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"2637:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"2430:240:0\\"},\\"payable\\":false,\\"returnParameters\\":{\\"id\\":263,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[],\\"src\\":\\"2678:0:0\\"},\\"scope\\":864,\\"src\\":\\"2407:976:0\\",\\"stateMutability\\":\\"nonpayable\\",\\"superFunction\\":null,\\"visibility\\":\\"public\\"},{\\"body\\":{\\"id\\":416,\\"nodeType\\":\\"Block\\",\\"src\\":\\"3494:482:0\\",\\"statements\\":[{\\"assignments\\":[355],\\"declarations\\":[{\\"constant\\":false,\\"id\\":355,\\"name\\":\\"cap\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":417,\\"src\\":\\"3504:11:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":354,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"3504:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"id\\":364,\\"initialValue\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":361,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"3554:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":362,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"value\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"3554:9:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}],\\"expression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":356,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"3518:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":358,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":357,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":346,\\"src\\":\\"3534:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"3518:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":359,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"cap\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":49,\\"src\\":\\"3518:31:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":360,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"add\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":957,\\"src\\":\\"3518:35:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$\\",\\"typeString\\":\\"function (uint256,uint256) pure returns (uint256)\\"}},\\"id\\":363,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"3518:46:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"VariableDeclarationStatement\\",\\"src\\":\\"3504:60:0\\"},{\\"expression\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"id\\":368,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":346,\\"src\\":\\"3590:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}],\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":365,\\"name\\":\\"candidates\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":78,\\"src\\":\\"3574:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_address_$dyn_storage\\",\\"typeString\\":\\"address[] storage ref\\"}},\\"id\\":367,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"push\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"3574:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$\\",\\"typeString\\":\\"function (address) returns (uint256)\\"}},\\"id\\":369,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"3574:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":370,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"3574:27:0\\"},{\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":380,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftHandSide\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":371,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"3611:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":373,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":372,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":346,\\"src\\":\\"3627:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":true,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"3611:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"nodeType\\":\\"Assignment\\",\\"operator\\":\\"=\\",\\"rightHandSide\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":375,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"3677:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":376,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"3677:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},{\\"argumentTypes\\":null,\\"hexValue\\":\\"74727565\\",\\"id\\":377,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":true,\\"kind\\":\\"bool\\",\\"lValueRequested\\":false,\\"nodeType\\":\\"Literal\\",\\"src\\":\\"3714:4:0\\",\\"subdenomination\\":null,\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"},\\"value\\":\\"true\\"},{\\"argumentTypes\\":null,\\"id\\":378,\\"name\\":\\"cap\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":355,\\"src\\":\\"3737:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}}],\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":374,\\"name\\":\\"ValidatorState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":54,\\"src\\":\\"3641:14:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_type$_t_struct$_ValidatorState_$54_storage_ptr_$\\",\\"typeString\\":\\"type(struct TomoValidator.ValidatorState storage pointer)\\"}},\\"id\\":379,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"structConstructorCall\\",\\"lValueRequested\\":false,\\"names\\":[\\"owner\\",\\"isCandidate\\",\\"cap\\"],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"3641:110:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_memory\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState memory\\"}},\\"src\\":\\"3611:140:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":381,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"3611:140:0\\"},{\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":391,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftHandSide\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":382,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"3761:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":384,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":383,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":346,\\"src\\":\\"3777:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"3761:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":385,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"voters\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":53,\\"src\\":\\"3761:34:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_uint256_$\\",\\"typeString\\":\\"mapping(address => uint256)\\"}},\\"id\\":388,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":386,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"3796:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":387,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"3796:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":true,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"3761:46:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"Assignment\\",\\"operator\\":\\"=\\",\\"rightHandSide\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":389,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"3810:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":390,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"value\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"3810:9:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"src\\":\\"3761:58:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":392,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"3761:58:0\\"},{\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":398,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftHandSide\\":{\\"argumentTypes\\":null,\\"id\\":393,\\"name\\":\\"candidateCount\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":81,\\"src\\":\\"3829:14:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"Assignment\\",\\"operator\\":\\"=\\",\\"rightHandSide\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"hexValue\\":\\"31\\",\\"id\\":396,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":true,\\"kind\\":\\"number\\",\\"lValueRequested\\":false,\\"nodeType\\":\\"Literal\\",\\"src\\":\\"3865:1:0\\",\\"subdenomination\\":null,\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_rational_1_by_1\\",\\"typeString\\":\\"int_const 1\\"},\\"value\\":\\"1\\"}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_rational_1_by_1\\",\\"typeString\\":\\"int_const 1\\"}],\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":394,\\"name\\":\\"candidateCount\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":81,\\"src\\":\\"3846:14:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":395,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"add\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":957,\\"src\\":\\"3846:18:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$\\",\\"typeString\\":\\"function (uint256,uint256) pure returns (uint256)\\"}},\\"id\\":397,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"3846:21:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"src\\":\\"3829:38:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":399,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"3829:38:0\\"},{\\"expression\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":404,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"3901:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":405,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"3901:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}],\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":400,\\"name\\":\\"voters\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":75,\\"src\\":\\"3877:6:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$\\",\\"typeString\\":\\"mapping(address => address[] storage ref)\\"}},\\"id\\":402,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":401,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":346,\\"src\\":\\"3884:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"3877:18:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_address_$dyn_storage\\",\\"typeString\\":\\"address[] storage ref\\"}},\\"id\\":403,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"push\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"3877:23:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$\\",\\"typeString\\":\\"function (address) returns (uint256)\\"}},\\"id\\":406,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"3877:35:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":407,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"3877:35:0\\"},{\\"eventCall\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":409,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"3935:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":410,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"3935:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},{\\"argumentTypes\\":null,\\"id\\":411,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":346,\\"src\\":\\"3947:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":412,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"3959:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":413,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"value\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"3959:9:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}],\\"id\\":408,\\"name\\":\\"Propose\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":29,\\"src\\":\\"3927:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$\\",\\"typeString\\":\\"function (address,address,uint256)\\"}},\\"id\\":414,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"3927:42:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_tuple$__$\\",\\"typeString\\":\\"tuple()\\"}},\\"id\\":415,\\"nodeType\\":\\"EmitStatement\\",\\"src\\":\\"3922:47:0\\"}]},\\"documentation\\":null,\\"id\\":417,\\"implemented\\":true,\\"isConstructor\\":false,\\"isDeclaredConst\\":false,\\"modifiers\\":[{\\"arguments\\":null,\\"id\\":349,\\"modifierName\\":{\\"argumentTypes\\":null,\\"id\\":348,\\"name\\":\\"onlyValidCandidateCap\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":100,\\"src\\":\\"3443:21:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_modifier$__$\\",\\"typeString\\":\\"modifier ()\\"}},\\"nodeType\\":\\"ModifierInvocation\\",\\"src\\":\\"3443:21:0\\"},{\\"arguments\\":[{\\"argumentTypes\\":null,\\"id\\":351,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":346,\\"src\\":\\"3482:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}}],\\"id\\":352,\\"modifierName\\":{\\"argumentTypes\\":null,\\"id\\":350,\\"name\\":\\"onlyNotCandidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":156,\\"src\\":\\"3465:16:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_modifier$_t_address_$\\",\\"typeString\\":\\"modifier (address)\\"}},\\"nodeType\\":\\"ModifierInvocation\\",\\"src\\":\\"3465:28:0\\"}],\\"name\\":\\"propose\\",\\"nodeType\\":\\"FunctionDefinition\\",\\"parameters\\":{\\"id\\":347,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":346,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":417,\\"src\\":\\"3406:18:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":345,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"3406:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"3405:20:0\\"},\\"payable\\":true,\\"returnParameters\\":{\\"id\\":353,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[],\\"src\\":\\"3494:0:0\\"},\\"scope\\":864,\\"src\\":\\"3389:587:0\\",\\"stateMutability\\":\\"payable\\",\\"superFunction\\":null,\\"visibility\\":\\"external\\"},{\\"body\\":{\\"id\\":486,\\"nodeType\\":\\"Block\\",\\"src\\":\\"4064:397:0\\",\\"statements\\":[{\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":437,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftHandSide\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":425,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"4074:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":427,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":426,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":419,\\"src\\":\\"4090:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"4074:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":428,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":true,\\"memberName\\":\\"cap\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":49,\\"src\\":\\"4074:31:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"Assignment\\",\\"operator\\":\\"=\\",\\"rightHandSide\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":434,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"4144:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":435,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"value\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"4144:9:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}],\\"expression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":429,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"4108:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":431,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":430,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":419,\\"src\\":\\"4124:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"4108:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":432,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"cap\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":49,\\"src\\":\\"4108:31:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":433,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"add\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":957,\\"src\\":\\"4108:35:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$\\",\\"typeString\\":\\"function (uint256,uint256) pure returns (uint256)\\"}},\\"id\\":436,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"4108:46:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"src\\":\\"4074:80:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":438,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"4074:80:0\\"},{\\"condition\\":{\\"argumentTypes\\":null,\\"commonType\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"id\\":447,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftExpression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":439,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"4168:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":441,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":440,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":419,\\"src\\":\\"4184:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"4168:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":442,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"voters\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":53,\\"src\\":\\"4168:34:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_uint256_$\\",\\"typeString\\":\\"mapping(address => uint256)\\"}},\\"id\\":445,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":443,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"4203:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":444,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"4203:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"4168:46:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"BinaryOperation\\",\\"operator\\":\\"==\\",\\"rightExpression\\":{\\"argumentTypes\\":null,\\"hexValue\\":\\"30\\",\\"id\\":446,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":true,\\"kind\\":\\"number\\",\\"lValueRequested\\":false,\\"nodeType\\":\\"Literal\\",\\"src\\":\\"4218:1:0\\",\\"subdenomination\\":null,\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_rational_0_by_1\\",\\"typeString\\":\\"int_const 0\\"},\\"value\\":\\"0\\"},\\"src\\":\\"4168:51:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}},\\"falseBody\\":null,\\"id\\":457,\\"nodeType\\":\\"IfStatement\\",\\"src\\":\\"4164:117:0\\",\\"trueBody\\":{\\"id\\":456,\\"nodeType\\":\\"Block\\",\\"src\\":\\"4221:60:0\\",\\"statements\\":[{\\"expression\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":452,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"4259:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":453,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"4259:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}],\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":448,\\"name\\":\\"voters\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":75,\\"src\\":\\"4235:6:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$\\",\\"typeString\\":\\"mapping(address => address[] storage ref)\\"}},\\"id\\":450,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":449,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":419,\\"src\\":\\"4242:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"4235:18:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_address_$dyn_storage\\",\\"typeString\\":\\"address[] storage ref\\"}},\\"id\\":451,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"push\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"4235:23:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$\\",\\"typeString\\":\\"function (address) returns (uint256)\\"}},\\"id\\":454,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"4235:35:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":455,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"4235:35:0\\"}]}},{\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":476,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftHandSide\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":458,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"4290:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":460,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":459,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":419,\\"src\\":\\"4306:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"4290:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":461,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"voters\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":53,\\"src\\":\\"4290:34:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_uint256_$\\",\\"typeString\\":\\"mapping(address => uint256)\\"}},\\"id\\":464,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":462,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"4325:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":463,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"4325:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":true,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"4290:46:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"Assignment\\",\\"operator\\":\\"=\\",\\"rightHandSide\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":473,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"4390:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":474,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"value\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"4390:9:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}],\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":465,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"4339:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":467,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":466,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":419,\\"src\\":\\"4355:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"4339:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":468,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"voters\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":53,\\"src\\":\\"4339:34:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_uint256_$\\",\\"typeString\\":\\"mapping(address => uint256)\\"}},\\"id\\":471,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":469,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"4374:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":470,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"4374:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"4339:46:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":472,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"add\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":957,\\"src\\":\\"4339:50:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$\\",\\"typeString\\":\\"function (uint256,uint256) pure returns (uint256)\\"}},\\"id\\":475,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"4339:61:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"src\\":\\"4290:110:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":477,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"4290:110:0\\"},{\\"eventCall\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":479,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"4420:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":480,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"4420:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},{\\"argumentTypes\\":null,\\"id\\":481,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":419,\\"src\\":\\"4432:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":482,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"4444:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":483,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"value\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"4444:9:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}],\\"id\\":478,\\"name\\":\\"Vote\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":13,\\"src\\":\\"4415:4:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$\\",\\"typeString\\":\\"function (address,address,uint256)\\"}},\\"id\\":484,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"4415:39:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_tuple$__$\\",\\"typeString\\":\\"tuple()\\"}},\\"id\\":485,\\"nodeType\\":\\"EmitStatement\\",\\"src\\":\\"4410:44:0\\"}]},\\"documentation\\":null,\\"id\\":487,\\"implemented\\":true,\\"isConstructor\\":false,\\"isDeclaredConst\\":false,\\"modifiers\\":[{\\"arguments\\":[{\\"argumentTypes\\":null,\\"id\\":422,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":419,\\"src\\":\\"4052:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}}],\\"id\\":423,\\"modifierName\\":{\\"argumentTypes\\":null,\\"id\\":421,\\"name\\":\\"onlyValidCandidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":142,\\"src\\":\\"4033:18:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_modifier$_t_address_$\\",\\"typeString\\":\\"modifier (address)\\"}},\\"nodeType\\":\\"ModifierInvocation\\",\\"src\\":\\"4033:30:0\\"}],\\"name\\":\\"vote\\",\\"nodeType\\":\\"FunctionDefinition\\",\\"parameters\\":{\\"id\\":420,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":419,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":487,\\"src\\":\\"3996:18:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":418,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"3996:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"3995:20:0\\"},\\"payable\\":true,\\"returnParameters\\":{\\"id\\":424,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[],\\"src\\":\\"4064:0:0\\"},\\"scope\\":864,\\"src\\":\\"3982:479:0\\",\\"stateMutability\\":\\"payable\\",\\"superFunction\\":null,\\"visibility\\":\\"external\\"},{\\"body\\":{\\"id\\":495,\\"nodeType\\":\\"Block\\",\\"src\\":\\"4523:34:0\\",\\"statements\\":[{\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":493,\\"name\\":\\"candidates\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":78,\\"src\\":\\"4540:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_address_$dyn_storage\\",\\"typeString\\":\\"address[] storage ref\\"}},\\"functionReturnParameters\\":492,\\"id\\":494,\\"nodeType\\":\\"Return\\",\\"src\\":\\"4533:17:0\\"}]},\\"documentation\\":null,\\"id\\":496,\\"implemented\\":true,\\"isConstructor\\":false,\\"isDeclaredConst\\":true,\\"modifiers\\":[],\\"name\\":\\"getCandidates\\",\\"nodeType\\":\\"FunctionDefinition\\",\\"parameters\\":{\\"id\\":488,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[],\\"src\\":\\"4489:2:0\\"},\\"payable\\":false,\\"returnParameters\\":{\\"id\\":492,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":491,\\"name\\":\\"\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":496,\\"src\\":\\"4512:9:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_address_$dyn_memory_ptr\\",\\"typeString\\":\\"address[]\\"},\\"typeName\\":{\\"baseType\\":{\\"id\\":489,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"4512:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"id\\":490,\\"length\\":null,\\"nodeType\\":\\"ArrayTypeName\\",\\"src\\":\\"4512:9:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_address_$dyn_storage_ptr\\",\\"typeString\\":\\"address[]\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"4511:11:0\\"},\\"scope\\":864,\\"src\\":\\"4467:90:0\\",\\"stateMutability\\":\\"view\\",\\"superFunction\\":null,\\"visibility\\":\\"public\\"},{\\"body\\":{\\"id\\":508,\\"nodeType\\":\\"Block\\",\\"src\\":\\"4637:55:0\\",\\"statements\\":[{\\"expression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":503,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"4654:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":505,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":504,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":498,\\"src\\":\\"4670:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"4654:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":506,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"cap\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":49,\\"src\\":\\"4654:31:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"functionReturnParameters\\":502,\\"id\\":507,\\"nodeType\\":\\"Return\\",\\"src\\":\\"4647:38:0\\"}]},\\"documentation\\":null,\\"id\\":509,\\"implemented\\":true,\\"isConstructor\\":false,\\"isDeclaredConst\\":true,\\"modifiers\\":[],\\"name\\":\\"getCandidateCap\\",\\"nodeType\\":\\"FunctionDefinition\\",\\"parameters\\":{\\"id\\":499,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":498,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":509,\\"src\\":\\"4588:18:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":497,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"4588:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"4587:20:0\\"},\\"payable\\":false,\\"returnParameters\\":{\\"id\\":502,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":501,\\"name\\":\\"\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":509,\\"src\\":\\"4628:7:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":500,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"4628:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"4627:9:0\\"},\\"scope\\":864,\\"src\\":\\"4563:129:0\\",\\"stateMutability\\":\\"view\\",\\"superFunction\\":null,\\"visibility\\":\\"public\\"},{\\"body\\":{\\"id\\":521,\\"nodeType\\":\\"Block\\",\\"src\\":\\"4774:57:0\\",\\"statements\\":[{\\"expression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":516,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"4791:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":518,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":517,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":511,\\"src\\":\\"4807:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"4791:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":519,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"owner\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":45,\\"src\\":\\"4791:33:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"functionReturnParameters\\":515,\\"id\\":520,\\"nodeType\\":\\"Return\\",\\"src\\":\\"4784:40:0\\"}]},\\"documentation\\":null,\\"id\\":522,\\"implemented\\":true,\\"isConstructor\\":false,\\"isDeclaredConst\\":true,\\"modifiers\\":[],\\"name\\":\\"getCandidateOwner\\",\\"nodeType\\":\\"FunctionDefinition\\",\\"parameters\\":{\\"id\\":512,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":511,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":522,\\"src\\":\\"4725:18:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":510,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"4725:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"4724:20:0\\"},\\"payable\\":false,\\"returnParameters\\":{\\"id\\":515,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":514,\\"name\\":\\"\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":522,\\"src\\":\\"4765:7:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":513,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"4765:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"4764:9:0\\"},\\"scope\\":864,\\"src\\":\\"4698:133:0\\",\\"stateMutability\\":\\"view\\",\\"superFunction\\":null,\\"visibility\\":\\"public\\"},{\\"body\\":{\\"id\\":538,\\"nodeType\\":\\"Block\\",\\"src\\":\\"4923:66:0\\",\\"statements\\":[{\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":531,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"4940:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":533,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":532,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":524,\\"src\\":\\"4956:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"4940:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":534,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"voters\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":53,\\"src\\":\\"4940:34:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_uint256_$\\",\\"typeString\\":\\"mapping(address => uint256)\\"}},\\"id\\":536,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":535,\\"name\\":\\"_voter\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":526,\\"src\\":\\"4975:6:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"4940:42:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"functionReturnParameters\\":530,\\"id\\":537,\\"nodeType\\":\\"Return\\",\\"src\\":\\"4933:49:0\\"}]},\\"documentation\\":null,\\"id\\":539,\\"implemented\\":true,\\"isConstructor\\":false,\\"isDeclaredConst\\":true,\\"modifiers\\":[],\\"name\\":\\"getVoterCap\\",\\"nodeType\\":\\"FunctionDefinition\\",\\"parameters\\":{\\"id\\":527,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":524,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":539,\\"src\\":\\"4858:18:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":523,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"4858:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":526,\\"name\\":\\"_voter\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":539,\\"src\\":\\"4878:14:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":525,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"4878:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"4857:36:0\\"},\\"payable\\":false,\\"returnParameters\\":{\\"id\\":530,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":529,\\"name\\":\\"\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":539,\\"src\\":\\"4914:7:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":528,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"4914:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"4913:9:0\\"},\\"scope\\":864,\\"src\\":\\"4837:152:0\\",\\"stateMutability\\":\\"view\\",\\"superFunction\\":null,\\"visibility\\":\\"public\\"},{\\"body\\":{\\"id\\":551,\\"nodeType\\":\\"Block\\",\\"src\\":\\"5065:42:0\\",\\"statements\\":[{\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":547,\\"name\\":\\"voters\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":75,\\"src\\":\\"5082:6:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$\\",\\"typeString\\":\\"mapping(address => address[] storage ref)\\"}},\\"id\\":549,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":548,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":541,\\"src\\":\\"5089:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"5082:18:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_address_$dyn_storage\\",\\"typeString\\":\\"address[] storage ref\\"}},\\"functionReturnParameters\\":546,\\"id\\":550,\\"nodeType\\":\\"Return\\",\\"src\\":\\"5075:25:0\\"}]},\\"documentation\\":null,\\"id\\":552,\\"implemented\\":true,\\"isConstructor\\":false,\\"isDeclaredConst\\":true,\\"modifiers\\":[],\\"name\\":\\"getVoters\\",\\"nodeType\\":\\"FunctionDefinition\\",\\"parameters\\":{\\"id\\":542,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":541,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":552,\\"src\\":\\"5014:18:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":540,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"5014:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"5013:20:0\\"},\\"payable\\":false,\\"returnParameters\\":{\\"id\\":546,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":545,\\"name\\":\\"\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":552,\\"src\\":\\"5054:9:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_address_$dyn_memory_ptr\\",\\"typeString\\":\\"address[]\\"},\\"typeName\\":{\\"baseType\\":{\\"id\\":543,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"5054:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"id\\":544,\\"length\\":null,\\"nodeType\\":\\"ArrayTypeName\\",\\"src\\":\\"5054:9:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_address_$dyn_storage_ptr\\",\\"typeString\\":\\"address[]\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"5053:11:0\\"},\\"scope\\":864,\\"src\\":\\"4995:112:0\\",\\"stateMutability\\":\\"view\\",\\"superFunction\\":null,\\"visibility\\":\\"public\\"},{\\"body\\":{\\"id\\":564,\\"nodeType\\":\\"Block\\",\\"src\\":\\"5180:63:0\\",\\"statements\\":[{\\"expression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":559,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"5197:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":561,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":560,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":554,\\"src\\":\\"5213:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"5197:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":562,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"isCandidate\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":47,\\"src\\":\\"5197:39:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}},\\"functionReturnParameters\\":558,\\"id\\":563,\\"nodeType\\":\\"Return\\",\\"src\\":\\"5190:46:0\\"}]},\\"documentation\\":null,\\"id\\":565,\\"implemented\\":true,\\"isConstructor\\":false,\\"isDeclaredConst\\":true,\\"modifiers\\":[],\\"name\\":\\"isCandidate\\",\\"nodeType\\":\\"FunctionDefinition\\",\\"parameters\\":{\\"id\\":555,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":554,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":565,\\"src\\":\\"5134:18:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":553,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"5134:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"5133:20:0\\"},\\"payable\\":false,\\"returnParameters\\":{\\"id\\":558,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":557,\\"name\\":\\"\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":565,\\"src\\":\\"5174:4:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"},\\"typeName\\":{\\"id\\":556,\\"name\\":\\"bool\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"5174:4:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"5173:6:0\\"},\\"scope\\":864,\\"src\\":\\"5113:130:0\\",\\"stateMutability\\":\\"view\\",\\"superFunction\\":null,\\"visibility\\":\\"public\\"},{\\"body\\":{\\"id\\":577,\\"nodeType\\":\\"Block\\",\\"src\\":\\"5315:63:0\\",\\"statements\\":[{\\"expression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":571,\\"name\\":\\"withdrawsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":66,\\"src\\":\\"5332:14:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_WithdrawState_$62_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.WithdrawState storage ref)\\"}},\\"id\\":574,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":572,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"5347:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":573,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"5347:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"5332:26:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_WithdrawState_$62_storage\\",\\"typeString\\":\\"struct TomoValidator.WithdrawState storage ref\\"}},\\"id\\":575,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"blockNumbers\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":61,\\"src\\":\\"5332:39:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_uint256_$dyn_storage\\",\\"typeString\\":\\"uint256[] storage ref\\"}},\\"functionReturnParameters\\":570,\\"id\\":576,\\"nodeType\\":\\"Return\\",\\"src\\":\\"5325:46:0\\"}]},\\"documentation\\":null,\\"id\\":578,\\"implemented\\":true,\\"isConstructor\\":false,\\"isDeclaredConst\\":true,\\"modifiers\\":[],\\"name\\":\\"getWithdrawBlockNumbers\\",\\"nodeType\\":\\"FunctionDefinition\\",\\"parameters\\":{\\"id\\":566,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[],\\"src\\":\\"5281:2:0\\"},\\"payable\\":false,\\"returnParameters\\":{\\"id\\":570,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":569,\\"name\\":\\"\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":578,\\"src\\":\\"5304:9:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_uint256_$dyn_memory_ptr\\",\\"typeString\\":\\"uint256[]\\"},\\"typeName\\":{\\"baseType\\":{\\"id\\":567,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"5304:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":568,\\"length\\":null,\\"nodeType\\":\\"ArrayTypeName\\",\\"src\\":\\"5304:9:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_uint256_$dyn_storage_ptr\\",\\"typeString\\":\\"uint256[]\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"5303:11:0\\"},\\"scope\\":864,\\"src\\":\\"5249:129:0\\",\\"stateMutability\\":\\"view\\",\\"superFunction\\":null,\\"visibility\\":\\"public\\"},{\\"body\\":{\\"id\\":593,\\"nodeType\\":\\"Block\\",\\"src\\":\\"5459:69:0\\",\\"statements\\":[{\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":585,\\"name\\":\\"withdrawsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":66,\\"src\\":\\"5476:14:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_WithdrawState_$62_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.WithdrawState storage ref)\\"}},\\"id\\":588,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":586,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"5491:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":587,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"5491:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"5476:26:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_WithdrawState_$62_storage\\",\\"typeString\\":\\"struct TomoValidator.WithdrawState storage ref\\"}},\\"id\\":589,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"caps\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":58,\\"src\\":\\"5476:31:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_uint256_$_t_uint256_$\\",\\"typeString\\":\\"mapping(uint256 => uint256)\\"}},\\"id\\":591,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":590,\\"name\\":\\"_blockNumber\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":580,\\"src\\":\\"5508:12:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"5476:45:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"functionReturnParameters\\":584,\\"id\\":592,\\"nodeType\\":\\"Return\\",\\"src\\":\\"5469:52:0\\"}]},\\"documentation\\":null,\\"id\\":594,\\"implemented\\":true,\\"isConstructor\\":false,\\"isDeclaredConst\\":true,\\"modifiers\\":[],\\"name\\":\\"getWithdrawCap\\",\\"nodeType\\":\\"FunctionDefinition\\",\\"parameters\\":{\\"id\\":581,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":580,\\"name\\":\\"_blockNumber\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":594,\\"src\\":\\"5408:20:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":579,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"5408:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"5407:22:0\\"},\\"payable\\":false,\\"returnParameters\\":{\\"id\\":584,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":583,\\"name\\":\\"\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":594,\\"src\\":\\"5450:7:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":582,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"5450:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"5449:9:0\\"},\\"scope\\":864,\\"src\\":\\"5384:144:0\\",\\"stateMutability\\":\\"view\\",\\"superFunction\\":null,\\"visibility\\":\\"public\\"},{\\"body\\":{\\"id\\":680,\\"nodeType\\":\\"Block\\",\\"src\\":\\"5623:577:0\\",\\"statements\\":[{\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":616,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftHandSide\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":605,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"5633:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":607,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":606,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":596,\\"src\\":\\"5649:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"5633:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":608,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":true,\\"memberName\\":\\"cap\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":49,\\"src\\":\\"5633:31:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"Assignment\\",\\"operator\\":\\"=\\",\\"rightHandSide\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"id\\":614,\\"name\\":\\"_cap\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":598,\\"src\\":\\"5703:4:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}],\\"expression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":609,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"5667:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":611,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":610,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":596,\\"src\\":\\"5683:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"5667:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":612,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"cap\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":49,\\"src\\":\\"5667:31:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":613,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sub\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":933,\\"src\\":\\"5667:35:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$\\",\\"typeString\\":\\"function (uint256,uint256) pure returns (uint256)\\"}},\\"id\\":615,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"5667:41:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"src\\":\\"5633:75:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":617,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"5633:75:0\\"},{\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":635,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftHandSide\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":618,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"5718:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":620,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":619,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":596,\\"src\\":\\"5734:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"5718:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":621,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"voters\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":53,\\"src\\":\\"5718:34:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_uint256_$\\",\\"typeString\\":\\"mapping(address => uint256)\\"}},\\"id\\":624,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":622,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"5753:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":623,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"5753:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":true,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"5718:46:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"Assignment\\",\\"operator\\":\\"=\\",\\"rightHandSide\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"id\\":633,\\"name\\":\\"_cap\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":598,\\"src\\":\\"5818:4:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}],\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":625,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"5767:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":627,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":626,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":596,\\"src\\":\\"5783:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"5767:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":628,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"voters\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":53,\\"src\\":\\"5767:34:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_uint256_$\\",\\"typeString\\":\\"mapping(address => uint256)\\"}},\\"id\\":631,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":629,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"5802:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":630,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"5802:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"5767:46:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":632,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sub\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":933,\\"src\\":\\"5767:50:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$\\",\\"typeString\\":\\"function (uint256,uint256) pure returns (uint256)\\"}},\\"id\\":634,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"5767:56:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"src\\":\\"5718:105:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":636,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"5718:105:0\\"},{\\"assignments\\":[638],\\"declarations\\":[{\\"constant\\":false,\\"id\\":638,\\"name\\":\\"withdrawBlockNumber\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":681,\\"src\\":\\"5873:27:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":637,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"5873:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"id\\":644,\\"initialValue\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":641,\\"name\\":\\"block\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":963,\\"src\\":\\"5926:5:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_block\\",\\"typeString\\":\\"block\\"}},\\"id\\":642,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"number\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"5926:12:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}],\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":639,\\"name\\":\\"voterWithdrawDelay\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":89,\\"src\\":\\"5903:18:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":640,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"add\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":957,\\"src\\":\\"5903:22:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$\\",\\"typeString\\":\\"function (uint256,uint256) pure returns (uint256)\\"}},\\"id\\":643,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"5903:36:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"VariableDeclarationStatement\\",\\"src\\":\\"5873:66:0\\"},{\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":662,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftHandSide\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":645,\\"name\\":\\"withdrawsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":66,\\"src\\":\\"5949:14:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_WithdrawState_$62_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.WithdrawState storage ref)\\"}},\\"id\\":648,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":646,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"5964:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":647,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"5964:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"5949:26:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_WithdrawState_$62_storage\\",\\"typeString\\":\\"struct TomoValidator.WithdrawState storage ref\\"}},\\"id\\":649,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"caps\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":58,\\"src\\":\\"5949:31:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_uint256_$_t_uint256_$\\",\\"typeString\\":\\"mapping(uint256 => uint256)\\"}},\\"id\\":651,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":650,\\"name\\":\\"withdrawBlockNumber\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":638,\\"src\\":\\"5981:19:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":true,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"5949:52:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"Assignment\\",\\"operator\\":\\"=\\",\\"rightHandSide\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"id\\":660,\\"name\\":\\"_cap\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":598,\\"src\\":\\"6061:4:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}],\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":652,\\"name\\":\\"withdrawsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":66,\\"src\\":\\"6004:14:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_WithdrawState_$62_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.WithdrawState storage ref)\\"}},\\"id\\":655,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":653,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"6019:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":654,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"6019:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"6004:26:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_WithdrawState_$62_storage\\",\\"typeString\\":\\"struct TomoValidator.WithdrawState storage ref\\"}},\\"id\\":656,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"caps\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":58,\\"src\\":\\"6004:31:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_uint256_$_t_uint256_$\\",\\"typeString\\":\\"mapping(uint256 => uint256)\\"}},\\"id\\":658,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":657,\\"name\\":\\"withdrawBlockNumber\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":638,\\"src\\":\\"6036:19:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"6004:52:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":659,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"add\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":957,\\"src\\":\\"6004:56:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$\\",\\"typeString\\":\\"function (uint256,uint256) pure returns (uint256)\\"}},\\"id\\":661,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"6004:62:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"src\\":\\"5949:117:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":663,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"5949:117:0\\"},{\\"expression\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"id\\":670,\\"name\\":\\"withdrawBlockNumber\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":638,\\"src\\":\\"6121:19:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}],\\"expression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":664,\\"name\\":\\"withdrawsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":66,\\"src\\":\\"6076:14:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_WithdrawState_$62_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.WithdrawState storage ref)\\"}},\\"id\\":667,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":665,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"6091:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":666,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"6091:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"6076:26:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_WithdrawState_$62_storage\\",\\"typeString\\":\\"struct TomoValidator.WithdrawState storage ref\\"}},\\"id\\":668,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"blockNumbers\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":61,\\"src\\":\\"6076:39:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_uint256_$dyn_storage\\",\\"typeString\\":\\"uint256[] storage ref\\"}},\\"id\\":669,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"push\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"6076:44:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$\\",\\"typeString\\":\\"function (uint256) returns (uint256)\\"}},\\"id\\":671,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"6076:65:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":672,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"6076:65:0\\"},{\\"eventCall\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":674,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"6164:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":675,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"6164:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},{\\"argumentTypes\\":null,\\"id\\":676,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":596,\\"src\\":\\"6176:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},{\\"argumentTypes\\":null,\\"id\\":677,\\"name\\":\\"_cap\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":598,\\"src\\":\\"6188:4:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}],\\"id\\":673,\\"name\\":\\"Unvote\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":21,\\"src\\":\\"6157:6:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$\\",\\"typeString\\":\\"function (address,address,uint256)\\"}},\\"id\\":678,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"6157:36:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_tuple$__$\\",\\"typeString\\":\\"tuple()\\"}},\\"id\\":679,\\"nodeType\\":\\"EmitStatement\\",\\"src\\":\\"6152:41:0\\"}]},\\"documentation\\":null,\\"id\\":681,\\"implemented\\":true,\\"isConstructor\\":false,\\"isDeclaredConst\\":false,\\"modifiers\\":[{\\"arguments\\":[{\\"argumentTypes\\":null,\\"id\\":601,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":596,\\"src\\":\\"5605:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},{\\"argumentTypes\\":null,\\"id\\":602,\\"name\\":\\"_cap\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":598,\\"src\\":\\"5617:4:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}}],\\"id\\":603,\\"modifierName\\":{\\"argumentTypes\\":null,\\"id\\":600,\\"name\\":\\"onlyValidVote\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":200,\\"src\\":\\"5591:13:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_modifier$_t_address_$_t_uint256_$\\",\\"typeString\\":\\"modifier (address,uint256)\\"}},\\"nodeType\\":\\"ModifierInvocation\\",\\"src\\":\\"5591:31:0\\"}],\\"name\\":\\"unvote\\",\\"nodeType\\":\\"FunctionDefinition\\",\\"parameters\\":{\\"id\\":599,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":596,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":681,\\"src\\":\\"5550:18:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":595,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"5550:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":598,\\"name\\":\\"_cap\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":681,\\"src\\":\\"5570:12:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":597,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"5570:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"5549:34:0\\"},\\"payable\\":false,\\"returnParameters\\":{\\"id\\":604,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[],\\"src\\":\\"5623:0:0\\"},\\"scope\\":864,\\"src\\":\\"5534:666:0\\",\\"stateMutability\\":\\"nonpayable\\",\\"superFunction\\":null,\\"visibility\\":\\"public\\"},{\\"body\\":{\\"id\\":807,\\"nodeType\\":\\"Block\\",\\"src\\":\\"6297:888:0\\",\\"statements\\":[{\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":697,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftHandSide\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":692,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"6307:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":694,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":693,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":683,\\"src\\":\\"6323:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"6307:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":695,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":true,\\"memberName\\":\\"isCandidate\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":47,\\"src\\":\\"6307:39:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}},\\"nodeType\\":\\"Assignment\\",\\"operator\\":\\"=\\",\\"rightHandSide\\":{\\"argumentTypes\\":null,\\"hexValue\\":\\"66616c7365\\",\\"id\\":696,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":true,\\"kind\\":\\"bool\\",\\"lValueRequested\\":false,\\"nodeType\\":\\"Literal\\",\\"src\\":\\"6349:5:0\\",\\"subdenomination\\":null,\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"},\\"value\\":\\"false\\"},\\"src\\":\\"6307:47:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}},\\"id\\":698,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"6307:47:0\\"},{\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":704,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftHandSide\\":{\\"argumentTypes\\":null,\\"id\\":699,\\"name\\":\\"candidateCount\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":81,\\"src\\":\\"6364:14:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"Assignment\\",\\"operator\\":\\"=\\",\\"rightHandSide\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"hexValue\\":\\"31\\",\\"id\\":702,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":true,\\"kind\\":\\"number\\",\\"lValueRequested\\":false,\\"nodeType\\":\\"Literal\\",\\"src\\":\\"6400:1:0\\",\\"subdenomination\\":null,\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_rational_1_by_1\\",\\"typeString\\":\\"int_const 1\\"},\\"value\\":\\"1\\"}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_rational_1_by_1\\",\\"typeString\\":\\"int_const 1\\"}],\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":700,\\"name\\":\\"candidateCount\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":81,\\"src\\":\\"6381:14:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":701,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sub\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":933,\\"src\\":\\"6381:18:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$\\",\\"typeString\\":\\"function (uint256,uint256) pure returns (uint256)\\"}},\\"id\\":703,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"6381:21:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"src\\":\\"6364:38:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":705,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"6364:38:0\\"},{\\"body\\":{\\"id\\":730,\\"nodeType\\":\\"Block\\",\\"src\\":\\"6460:133:0\\",\\"statements\\":[{\\"condition\\":{\\"argumentTypes\\":null,\\"commonType\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"id\\":721,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftExpression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":717,\\"name\\":\\"candidates\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":78,\\"src\\":\\"6478:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_address_$dyn_storage\\",\\"typeString\\":\\"address[] storage ref\\"}},\\"id\\":719,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":718,\\"name\\":\\"i\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":707,\\"src\\":\\"6489:1:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"6478:13:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"nodeType\\":\\"BinaryOperation\\",\\"operator\\":\\"==\\",\\"rightExpression\\":{\\"argumentTypes\\":null,\\"id\\":720,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":683,\\"src\\":\\"6495:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"src\\":\\"6478:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}},\\"falseBody\\":null,\\"id\\":729,\\"nodeType\\":\\"IfStatement\\",\\"src\\":\\"6474:109:0\\",\\"trueBody\\":{\\"id\\":728,\\"nodeType\\":\\"Block\\",\\"src\\":\\"6507:76:0\\",\\"statements\\":[{\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":725,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"UnaryOperation\\",\\"operator\\":\\"delete\\",\\"prefix\\":true,\\"src\\":\\"6525:20:0\\",\\"subExpression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":722,\\"name\\":\\"candidates\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":78,\\"src\\":\\"6532:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_address_$dyn_storage\\",\\"typeString\\":\\"address[] storage ref\\"}},\\"id\\":724,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":723,\\"name\\":\\"i\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":707,\\"src\\":\\"6543:1:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":true,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"6532:13:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_tuple$__$\\",\\"typeString\\":\\"tuple()\\"}},\\"id\\":726,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"6525:20:0\\"},{\\"id\\":727,\\"nodeType\\":\\"Break\\",\\"src\\":\\"6563:5:0\\"}]}}]},\\"condition\\":{\\"argumentTypes\\":null,\\"commonType\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"id\\":713,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftExpression\\":{\\"argumentTypes\\":null,\\"id\\":710,\\"name\\":\\"i\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":707,\\"src\\":\\"6432:1:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"BinaryOperation\\",\\"operator\\":\\"<\\",\\"rightExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":711,\\"name\\":\\"candidates\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":78,\\"src\\":\\"6436:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_address_$dyn_storage\\",\\"typeString\\":\\"address[] storage ref\\"}},\\"id\\":712,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"length\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"6436:17:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"src\\":\\"6432:21:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_bool\\",\\"typeString\\":\\"bool\\"}},\\"id\\":731,\\"initializationExpression\\":{\\"assignments\\":[707],\\"declarations\\":[{\\"constant\\":false,\\"id\\":707,\\"name\\":\\"i\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":808,\\"src\\":\\"6417:9:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":706,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"6417:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"id\\":709,\\"initialValue\\":{\\"argumentTypes\\":null,\\"hexValue\\":\\"30\\",\\"id\\":708,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":true,\\"kind\\":\\"number\\",\\"lValueRequested\\":false,\\"nodeType\\":\\"Literal\\",\\"src\\":\\"6429:1:0\\",\\"subdenomination\\":null,\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_rational_0_by_1\\",\\"typeString\\":\\"int_const 0\\"},\\"value\\":\\"0\\"},\\"nodeType\\":\\"VariableDeclarationStatement\\",\\"src\\":\\"6417:13:0\\"},\\"loopExpression\\":{\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":715,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"UnaryOperation\\",\\"operator\\":\\"++\\",\\"prefix\\":false,\\"src\\":\\"6455:3:0\\",\\"subExpression\\":{\\"argumentTypes\\":null,\\"id\\":714,\\"name\\":\\"i\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":707,\\"src\\":\\"6455:1:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":716,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"6455:3:0\\"},\\"nodeType\\":\\"ForStatement\\",\\"src\\":\\"6412:181:0\\"},{\\"assignments\\":[733],\\"declarations\\":[{\\"constant\\":false,\\"id\\":733,\\"name\\":\\"cap\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":808,\\"src\\":\\"6602:11:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":732,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"6602:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"id\\":741,\\"initialValue\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":734,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"6616:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":736,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":735,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":683,\\"src\\":\\"6632:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"6616:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":737,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"voters\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":53,\\"src\\":\\"6616:34:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_uint256_$\\",\\"typeString\\":\\"mapping(address => uint256)\\"}},\\"id\\":740,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":738,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"6651:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":739,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"6651:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"6616:46:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"VariableDeclarationStatement\\",\\"src\\":\\"6602:60:0\\"},{\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":753,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftHandSide\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":742,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"6672:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":744,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":743,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":683,\\"src\\":\\"6688:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"6672:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":745,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":true,\\"memberName\\":\\"cap\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":49,\\"src\\":\\"6672:31:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"Assignment\\",\\"operator\\":\\"=\\",\\"rightHandSide\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"id\\":751,\\"name\\":\\"cap\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":733,\\"src\\":\\"6742:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}],\\"expression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":746,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"6706:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":748,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":747,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":683,\\"src\\":\\"6722:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"6706:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":749,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"cap\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":49,\\"src\\":\\"6706:31:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":750,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sub\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":933,\\"src\\":\\"6706:35:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$\\",\\"typeString\\":\\"function (uint256,uint256) pure returns (uint256)\\"}},\\"id\\":752,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"6706:40:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"src\\":\\"6672:74:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":754,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"6672:74:0\\"},{\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":763,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftHandSide\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":755,\\"name\\":\\"validatorsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":70,\\"src\\":\\"6756:15:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_ValidatorState_$54_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.ValidatorState storage ref)\\"}},\\"id\\":757,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":756,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":683,\\"src\\":\\"6772:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"6756:27:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_ValidatorState_$54_storage\\",\\"typeString\\":\\"struct TomoValidator.ValidatorState storage ref\\"}},\\"id\\":758,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"voters\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":53,\\"src\\":\\"6756:34:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_uint256_$\\",\\"typeString\\":\\"mapping(address => uint256)\\"}},\\"id\\":761,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":759,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"6791:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":760,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"6791:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":true,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"6756:46:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"Assignment\\",\\"operator\\":\\"=\\",\\"rightHandSide\\":{\\"argumentTypes\\":null,\\"hexValue\\":\\"30\\",\\"id\\":762,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":true,\\"kind\\":\\"number\\",\\"lValueRequested\\":false,\\"nodeType\\":\\"Literal\\",\\"src\\":\\"6805:1:0\\",\\"subdenomination\\":null,\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_rational_0_by_1\\",\\"typeString\\":\\"int_const 0\\"},\\"value\\":\\"0\\"},\\"src\\":\\"6756:50:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":764,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"6756:50:0\\"},{\\"assignments\\":[766],\\"declarations\\":[{\\"constant\\":false,\\"id\\":766,\\"name\\":\\"withdrawBlockNumber\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":808,\\"src\\":\\"6862:27:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":765,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"6862:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"id\\":772,\\"initialValue\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":769,\\"name\\":\\"block\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":963,\\"src\\":\\"6919:5:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_block\\",\\"typeString\\":\\"block\\"}},\\"id\\":770,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"number\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"6919:12:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}],\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":767,\\"name\\":\\"candidateWithdrawDelay\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":87,\\"src\\":\\"6892:22:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":768,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"add\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":957,\\"src\\":\\"6892:26:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$\\",\\"typeString\\":\\"function (uint256,uint256) pure returns (uint256)\\"}},\\"id\\":771,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"6892:40:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"VariableDeclarationStatement\\",\\"src\\":\\"6862:70:0\\"},{\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":790,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"leftHandSide\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":773,\\"name\\":\\"withdrawsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":66,\\"src\\":\\"6942:14:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_WithdrawState_$62_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.WithdrawState storage ref)\\"}},\\"id\\":776,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":774,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"6957:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":775,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"6957:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"6942:26:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_WithdrawState_$62_storage\\",\\"typeString\\":\\"struct TomoValidator.WithdrawState storage ref\\"}},\\"id\\":777,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"caps\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":58,\\"src\\":\\"6942:31:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_uint256_$_t_uint256_$\\",\\"typeString\\":\\"mapping(uint256 => uint256)\\"}},\\"id\\":779,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":778,\\"name\\":\\"withdrawBlockNumber\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":766,\\"src\\":\\"6974:19:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":true,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"6942:52:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"Assignment\\",\\"operator\\":\\"=\\",\\"rightHandSide\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"id\\":788,\\"name\\":\\"cap\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":733,\\"src\\":\\"7054:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}],\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":780,\\"name\\":\\"withdrawsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":66,\\"src\\":\\"6997:14:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_WithdrawState_$62_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.WithdrawState storage ref)\\"}},\\"id\\":783,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":781,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"7012:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":782,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"7012:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"6997:26:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_WithdrawState_$62_storage\\",\\"typeString\\":\\"struct TomoValidator.WithdrawState storage ref\\"}},\\"id\\":784,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"caps\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":58,\\"src\\":\\"6997:31:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_uint256_$_t_uint256_$\\",\\"typeString\\":\\"mapping(uint256 => uint256)\\"}},\\"id\\":786,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":785,\\"name\\":\\"withdrawBlockNumber\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":766,\\"src\\":\\"7029:19:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"6997:52:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":787,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"add\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":957,\\"src\\":\\"6997:56:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$\\",\\"typeString\\":\\"function (uint256,uint256) pure returns (uint256)\\"}},\\"id\\":789,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"6997:61:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"src\\":\\"6942:116:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":791,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"6942:116:0\\"},{\\"expression\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"id\\":798,\\"name\\":\\"withdrawBlockNumber\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":766,\\"src\\":\\"7113:19:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}],\\"expression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":792,\\"name\\":\\"withdrawsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":66,\\"src\\":\\"7068:14:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_WithdrawState_$62_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.WithdrawState storage ref)\\"}},\\"id\\":795,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":793,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"7083:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":794,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"7083:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"7068:26:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_WithdrawState_$62_storage\\",\\"typeString\\":\\"struct TomoValidator.WithdrawState storage ref\\"}},\\"id\\":796,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"blockNumbers\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":61,\\"src\\":\\"7068:39:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_uint256_$dyn_storage\\",\\"typeString\\":\\"uint256[] storage ref\\"}},\\"id\\":797,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"push\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"7068:44:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$\\",\\"typeString\\":\\"function (uint256) returns (uint256)\\"}},\\"id\\":799,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"7068:65:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"id\\":800,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"7068:65:0\\"},{\\"eventCall\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":802,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"7155:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":803,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"7155:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},{\\"argumentTypes\\":null,\\"id\\":804,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":683,\\"src\\":\\"7167:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}],\\"id\\":801,\\"name\\":\\"Resign\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":35,\\"src\\":\\"7148:6:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$\\",\\"typeString\\":\\"function (address,address)\\"}},\\"id\\":805,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"7148:30:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_tuple$__$\\",\\"typeString\\":\\"tuple()\\"}},\\"id\\":806,\\"nodeType\\":\\"EmitStatement\\",\\"src\\":\\"7143:35:0\\"}]},\\"documentation\\":null,\\"id\\":808,\\"implemented\\":true,\\"isConstructor\\":false,\\"isDeclaredConst\\":false,\\"modifiers\\":[{\\"arguments\\":[{\\"argumentTypes\\":null,\\"id\\":686,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":683,\\"src\\":\\"6259:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}}],\\"id\\":687,\\"modifierName\\":{\\"argumentTypes\\":null,\\"id\\":685,\\"name\\":\\"onlyOwner\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":116,\\"src\\":\\"6249:9:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_modifier$_t_address_$\\",\\"typeString\\":\\"modifier (address)\\"}},\\"nodeType\\":\\"ModifierInvocation\\",\\"src\\":\\"6249:21:0\\"},{\\"arguments\\":[{\\"argumentTypes\\":null,\\"id\\":689,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":683,\\"src\\":\\"6285:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}}],\\"id\\":690,\\"modifierName\\":{\\"argumentTypes\\":null,\\"id\\":688,\\"name\\":\\"onlyCandidate\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":129,\\"src\\":\\"6271:13:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_modifier$_t_address_$\\",\\"typeString\\":\\"modifier (address)\\"}},\\"nodeType\\":\\"ModifierInvocation\\",\\"src\\":\\"6271:25:0\\"}],\\"name\\":\\"resign\\",\\"nodeType\\":\\"FunctionDefinition\\",\\"parameters\\":{\\"id\\":684,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":683,\\"name\\":\\"_candidate\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":808,\\"src\\":\\"6222:18:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},\\"typeName\\":{\\"id\\":682,\\"name\\":\\"address\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"6222:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"6221:20:0\\"},\\"payable\\":false,\\"returnParameters\\":{\\"id\\":691,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[],\\"src\\":\\"6297:0:0\\"},\\"scope\\":864,\\"src\\":\\"6206:979:0\\",\\"stateMutability\\":\\"nonpayable\\",\\"superFunction\\":null,\\"visibility\\":\\"public\\"},{\\"body\\":{\\"id\\":862,\\"nodeType\\":\\"Block\\",\\"src\\":\\"7291:290:0\\",\\"statements\\":[{\\"assignments\\":[820],\\"declarations\\":[{\\"constant\\":false,\\"id\\":820,\\"name\\":\\"cap\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":863,\\"src\\":\\"7301:11:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":819,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"7301:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"id\\":828,\\"initialValue\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":821,\\"name\\":\\"withdrawsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":66,\\"src\\":\\"7315:14:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_WithdrawState_$62_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.WithdrawState storage ref)\\"}},\\"id\\":824,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":822,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"7330:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":823,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"7330:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"7315:26:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_WithdrawState_$62_storage\\",\\"typeString\\":\\"struct TomoValidator.WithdrawState storage ref\\"}},\\"id\\":825,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"caps\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":58,\\"src\\":\\"7315:31:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_uint256_$_t_uint256_$\\",\\"typeString\\":\\"mapping(uint256 => uint256)\\"}},\\"id\\":827,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":826,\\"name\\":\\"_blockNumber\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":810,\\"src\\":\\"7347:12:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"7315:45:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"nodeType\\":\\"VariableDeclarationStatement\\",\\"src\\":\\"7301:59:0\\"},{\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":836,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"UnaryOperation\\",\\"operator\\":\\"delete\\",\\"prefix\\":true,\\"src\\":\\"7370:52:0\\",\\"subExpression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":829,\\"name\\":\\"withdrawsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":66,\\"src\\":\\"7377:14:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_WithdrawState_$62_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.WithdrawState storage ref)\\"}},\\"id\\":832,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":830,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"7392:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":831,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"7392:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"7377:26:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_WithdrawState_$62_storage\\",\\"typeString\\":\\"struct TomoValidator.WithdrawState storage ref\\"}},\\"id\\":833,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"caps\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":58,\\"src\\":\\"7377:31:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_uint256_$_t_uint256_$\\",\\"typeString\\":\\"mapping(uint256 => uint256)\\"}},\\"id\\":835,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":834,\\"name\\":\\"_blockNumber\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":810,\\"src\\":\\"7409:12:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":true,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"7377:45:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_tuple$__$\\",\\"typeString\\":\\"tuple()\\"}},\\"id\\":837,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"7370:52:0\\"},{\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":845,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"UnaryOperation\\",\\"operator\\":\\"delete\\",\\"prefix\\":true,\\"src\\":\\"7432:54:0\\",\\"subExpression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"baseExpression\\":{\\"argumentTypes\\":null,\\"id\\":838,\\"name\\":\\"withdrawsState\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":66,\\"src\\":\\"7439:14:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_mapping$_t_address_$_t_struct$_WithdrawState_$62_storage_$\\",\\"typeString\\":\\"mapping(address => struct TomoValidator.WithdrawState storage ref)\\"}},\\"id\\":841,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":839,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"7454:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":840,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"7454:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"7439:26:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_struct$_WithdrawState_$62_storage\\",\\"typeString\\":\\"struct TomoValidator.WithdrawState storage ref\\"}},\\"id\\":842,\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"blockNumbers\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":61,\\"src\\":\\"7439:39:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_array$_t_uint256_$dyn_storage\\",\\"typeString\\":\\"uint256[] storage ref\\"}},\\"id\\":844,\\"indexExpression\\":{\\"argumentTypes\\":null,\\"id\\":843,\\"name\\":\\"_index\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":812,\\"src\\":\\"7479:6:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"isConstant\\":false,\\"isLValue\\":true,\\"isPure\\":false,\\"lValueRequested\\":true,\\"nodeType\\":\\"IndexAccess\\",\\"src\\":\\"7439:47:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_tuple$__$\\",\\"typeString\\":\\"tuple()\\"}},\\"id\\":846,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"7432:54:0\\"},{\\"expression\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"id\\":852,\\"name\\":\\"cap\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":820,\\"src\\":\\"7516:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}],\\"expression\\":{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":847,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"7496:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":850,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"7496:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},\\"id\\":851,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"transfer\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"7496:19:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_transfer_nonpayable$_t_uint256_$returns$__$\\",\\"typeString\\":\\"function (uint256)\\"}},\\"id\\":853,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"7496:24:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_tuple$__$\\",\\"typeString\\":\\"tuple()\\"}},\\"id\\":854,\\"nodeType\\":\\"ExpressionStatement\\",\\"src\\":\\"7496:24:0\\"},{\\"eventCall\\":{\\"argumentTypes\\":null,\\"arguments\\":[{\\"argumentTypes\\":null,\\"expression\\":{\\"argumentTypes\\":null,\\"id\\":856,\\"name\\":\\"msg\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":973,\\"src\\":\\"7544:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_magic_message\\",\\"typeString\\":\\"msg\\"}},\\"id\\":857,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"lValueRequested\\":false,\\"memberName\\":\\"sender\\",\\"nodeType\\":\\"MemberAccess\\",\\"referencedDeclaration\\":null,\\"src\\":\\"7544:10:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"}},{\\"argumentTypes\\":null,\\"id\\":858,\\"name\\":\\"_blockNumber\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":810,\\"src\\":\\"7556:12:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},{\\"argumentTypes\\":null,\\"id\\":859,\\"name\\":\\"cap\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":820,\\"src\\":\\"7570:3:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}}],\\"expression\\":{\\"argumentTypes\\":[{\\"typeIdentifier\\":\\"t_address\\",\\"typeString\\":\\"address\\"},{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}],\\"id\\":855,\\"name\\":\\"Withdraw\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":43,\\"src\\":\\"7535:8:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$\\",\\"typeString\\":\\"function (address,uint256,uint256)\\"}},\\"id\\":860,\\"isConstant\\":false,\\"isLValue\\":false,\\"isPure\\":false,\\"kind\\":\\"functionCall\\",\\"lValueRequested\\":false,\\"names\\":[],\\"nodeType\\":\\"FunctionCall\\",\\"src\\":\\"7535:39:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_tuple$__$\\",\\"typeString\\":\\"tuple()\\"}},\\"id\\":861,\\"nodeType\\":\\"EmitStatement\\",\\"src\\":\\"7530:44:0\\"}]},\\"documentation\\":null,\\"id\\":863,\\"implemented\\":true,\\"isConstructor\\":false,\\"isDeclaredConst\\":false,\\"modifiers\\":[{\\"arguments\\":[{\\"argumentTypes\\":null,\\"id\\":815,\\"name\\":\\"_blockNumber\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":810,\\"src\\":\\"7269:12:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},{\\"argumentTypes\\":null,\\"id\\":816,\\"name\\":\\"_index\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":812,\\"src\\":\\"7283:6:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}}],\\"id\\":817,\\"modifierName\\":{\\"argumentTypes\\":null,\\"id\\":814,\\"name\\":\\"onlyValidWithdraw\\",\\"nodeType\\":\\"Identifier\\",\\"overloadedDeclarations\\":[],\\"referencedDeclaration\\":245,\\"src\\":\\"7251:17:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_modifier$_t_uint256_$_t_uint256_$\\",\\"typeString\\":\\"modifier (uint256,uint256)\\"}},\\"nodeType\\":\\"ModifierInvocation\\",\\"src\\":\\"7251:39:0\\"}],\\"name\\":\\"withdraw\\",\\"nodeType\\":\\"FunctionDefinition\\",\\"parameters\\":{\\"id\\":813,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[{\\"constant\\":false,\\"id\\":810,\\"name\\":\\"_blockNumber\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":863,\\"src\\":\\"7209:20:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":809,\\"name\\":\\"uint256\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"7209:7:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"},{\\"constant\\":false,\\"id\\":812,\\"name\\":\\"_index\\",\\"nodeType\\":\\"VariableDeclaration\\",\\"scope\\":863,\\"src\\":\\"7231:11:0\\",\\"stateVariable\\":false,\\"storageLocation\\":\\"default\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"},\\"typeName\\":{\\"id\\":811,\\"name\\":\\"uint\\",\\"nodeType\\":\\"ElementaryTypeName\\",\\"src\\":\\"7231:4:0\\",\\"typeDescriptions\\":{\\"typeIdentifier\\":\\"t_uint256\\",\\"typeString\\":\\"uint256\\"}},\\"value\\":null,\\"visibility\\":\\"internal\\"}],\\"src\\":\\"7208:35:0\\"},\\"payable\\":false,\\"returnParameters\\":{\\"id\\":818,\\"nodeType\\":\\"ParameterList\\",\\"parameters\\":[],\\"src\\":\\"7291:0:0\\"},\\"scope\\":864,\\"src\\":\\"7191:390:0\\",\\"stateMutability\\":\\"nonpayable\\",\\"superFunction\\":null,\\"visibility\\":\\"public\\"}],\\"scope\\":865,\\"src\\":\\"57:7526:0\\"}],\\"src\\":\\"0:7584:0\\"},\\"compiler\\":{\\"name\\":\\"solc\\",\\"version\\":\\"0.4.24+commit.e67f0147.Emscripten.clang\\"},\\"networks\\":{\\"88\\":{\\"events\\":{},\\"links\\":{},\\"address\\":\\"0x0000000000000000000000000000000000000088\\",\\"transactionHash\\":\\"0xcda6ee07183ab947ded92fc0d2ae674e8a42134dd9b577cfbad23f4514b6280d\\"},\\"89\\":{\\"events\\":{},\\"links\\":{},\\"address\\":\\"0x0000000000000000000000000000000000000088\\",\\"transactionHash\\":\\"0xcda6ee07183ab947ded92fc0d2ae674e8a42134dd9b577cfbad23f4514b6280d\\"},\\"90\\":{\\"events\\":{},\\"links\\":{},\\"address\\":\\"0x0000000000000000000000000000000000000088\\",\\"transactionHash\\":\\"0xcda6ee07183ab947ded92fc0d2ae674e8a42134dd9b577cfbad23f4514b6280d\\"},\\"1532931637365\\":{\\"events\\":{},\\"links\\":{},\\"address\\":\\"0xa514fbc7e7563e2ca03fd6a2730c1d65cbdc2f71\\",\\"transactionHash\\":\\"0x66ddb3178d8d8d4d4a4798ed064cf6339fa2cf959a6077b5a9dcc1c21e4653db\\"}},\\"schemaVersion\\":\\"2.0.1\\",\\"updatedAt\\":\\"2018-08-17T07:42:52.077Z\\"}");\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiI1NTAuanMiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///550\n')},552:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./app/components/candidates/View.vue?vue&type=template&id=8a1b64fc&\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',[(!_vm.isCandidate)?_c(\'div\',{staticClass:"row"},[_vm._m(0)]):_c(\'div\',[_c(\'div\',{staticClass:"container section section--candidate"},[_c(\'div\',{staticClass:"row"},[_c(\'div\',{staticClass:"col-12"},[_c(\'div\',{staticClass:"section-title"},[_c(\'i\',{staticClass:"tm-flag color-yellow"}),_vm._v(" "),_c(\'span\',[_vm._v("\\n                            "+_vm._s((_vm.candidate.rank) ? ((_vm.candidate.rank) + ". " + (_vm.candidate.name)) : _vm.candidate.name)+"\\n                        ")]),_vm._v(" "),(_vm.account === _vm.candidate.owner)?_c(\'router-link\',{staticClass:"edit-link",attrs:{"to":\'/candidate/\' + _vm.candidate.address + \'/update\'}},[_c(\'i\',{staticClass:"tm-edit ml-2 mr-0"})]):_vm._e(),_vm._v(" "),_c(\'span\',{staticClass:"text-truncate section-title__description"},[_vm._v(_vm._s(_vm.candidate.address))]),_vm._v(" "),_c(\'ul\',{staticClass:"list-inline social-links"},_vm._l((_vm.candidate.socials),function(value,key){return _c(\'li\',{key:key,staticClass:"list-inline-item social-links__item"},[(value !== \'\')?_c(\'a\',{staticClass:"social-links__link",attrs:{"href":value,"target":"_blank"}},[_c(\'i\',{class:\'social-links__icon tm-\' + key})]):_vm._e()])}),0)],1)])]),_vm._v(" "),_c(\'b-card\',{class:\'tomo-card tomo-card--animated tomo-card--candidate\'\n                + (_vm.loading ? \' tomo-loading\' : \'\')},[_c(\'div\',{staticClass:"row m-md-0"},[_c(\'div\',{staticClass:"col-12 col-sm-6 col-md-4 col-lg-3 col-xl-2 tomo-info text-truncate"},[_c(\'p\',{staticClass:"tomo-info__title"},[_c(\'i\',{staticClass:"tm-dot tomo-info__icon"}),_vm._v(" "),_c(\'span\',{staticClass:"tomo-info__text"},[_vm._v("Owner")])]),_vm._v(" "),_c(\'p\',{staticClass:"tomo-info__description color-cyan"},[_c(\'router-link\',{staticClass:"text-truncate",attrs:{"to":\'/voter/\' + _vm.candidate.owner}},[_vm._v("\\n                                "+_vm._s(_vm.candidate.owner)+"\\n                            ")])],1)]),_vm._v(" "),(_vm.candidate.status !== \'PROPOSED\')?_c(\'div\',{staticClass:"col-12 col-sm-6 col-md-4 col-lg-3 col-xl-2 tomo-info"},[_c(\'p\',{staticClass:"tomo-info__title"},[_c(\'i\',{staticClass:"tm-dot tomo-info__icon"}),_vm._v(" "),_c(\'span\',{staticClass:"tomo-info__text"},[_vm._v("Latest Signed Block")])]),_vm._v(" "),_c(\'p\',{staticClass:"tomo-info__description"},[_c(\'span\',{class:("tomo-status-dot float-left mr-2 tomo-status-dot--" + (_vm.getColor(\n                                _vm.candidate.latestSignedBlock || 0, _vm.currentBlock)))},[_vm._v("\\n                                "+_vm._s(_vm.formatNumber(_vm.candidate.latestSignedBlock))+"\\n                            ")])])]):_vm._e(),_vm._v(" "),_c(\'div\',{staticClass:"col-12 col-sm-6 col-md-4 col-lg-3 col-xl-2 tomo-info"},[_c(\'p\',{staticClass:"tomo-info__title"},[_c(\'i\',{staticClass:"tm-dot tomo-info__icon"}),_vm._v(" "),_c(\'span\',{staticClass:"tomo-info__text"},[_vm._v("Capacity")])]),_vm._v(" "),_c(\'p\',{staticClass:"tomo-info__description",attrs:{"id":"tomo-info__description--cap"}},[_vm._v("\\n                            "+_vm._s(_vm.formatCurrencySymbol(_vm.formatBigNumber(_vm.candidate.cap, 3)))+"\\n                            "),(_vm.checkLongNumber(_vm.candidate.cap))?_c(\'b-tooltip\',{ref:"tooltip",attrs:{"target":"tomo-info__description--cap"}},[_vm._v("\\n                                "+_vm._s(_vm.formatCurrencySymbol(_vm.formatBigNumber(_vm.candidate.cap, 6)))+"\\n                            ")]):_vm._e()],1)]),_vm._v(" "),(_vm.isReady)?_c(\'div\',{staticClass:"col-12 col-sm-6 col-md-4 col-lg-3 col-xl-2 tomo-info"},[_c(\'p\',{staticClass:"tomo-info__title"},[_c(\'i\',{staticClass:"tm-arrow-up tomo-info__icon"}),_vm._v(" "),_c(\'span\',{staticClass:"tomo-info__text"},[_vm._v("You voted")])]),_vm._v(" "),_c(\'p\',{staticClass:"tomo-info__description",attrs:{"id":"tomo-info__description--you-voted"}},[_vm._v("\\n                            "+_vm._s(_vm.formatCurrencySymbol(_vm.formatNumber(_vm.candidate.voted)))+"\\n                            "),(_vm.checkLongNumber(_vm.candidate.voted))?_c(\'b-tooltip\',{ref:"tooltip",attrs:{"target":"tomo-info__description--you-voted"}},[_vm._v("\\n                                "+_vm._s(_vm.formatCurrencySymbol(_vm.formatBigNumber(_vm.candidate.voted, 6)))+"\\n                            ")]):_vm._e()],1)]):_vm._e(),_vm._v(" "),_c(\'div\',{staticClass:"col-12 col-sm-6 col-md-4 col-lg-3 col-xl-2 m-xl-0 tomo-info"},[_c(\'p\',{staticClass:"tomo-info__title"},[_c(\'i\',{staticClass:"tm-dot tomo-info__icon"}),_vm._v(" "),_c(\'span\',{staticClass:"tomo-info__text"},[_vm._v("\\n                                Status\\n                            ")])]),_vm._v(" "),_c(\'p\',{staticClass:"tomo-info__description",class:{ \'color-cyan\': _vm.candidate.status === \'MASTERNODE\',\n                                      \'color-pink\': _vm.candidate.status === \'SLASHED\',\n                                      \'color-pink\': _vm.candidate.status === \'RESIGNED\' }},[_vm._v("\\n                            "+_vm._s(_vm.candidate.status)+"\\n                        ")])]),_vm._v(" "),_c(\'div\',{staticClass:"col-12 col-md-6 col-lg-6 col-xl-4 order-md-1 order-lg-0 m-xl-0 tomo-info"},[_c(\'p\',{staticClass:"tomo-info__title"},[_c(\'i\',{staticClass:"tm-dot tomo-info__icon"}),_vm._v(" "),_c(\'span\',{staticClass:"tomo-info__text"},[_vm._v("Hardware")])]),_vm._v(" "),_c(\'p\',{staticClass:"tomo-info__description"},[_vm._v("\\n                            "+_vm._s(_vm.candidate.hardwareInfo)+"\\n                        ")])]),_vm._v(" "),_vm._l((_vm.candidate.dataCenterInfo),function(value,key){return _c(\'div\',{key:key,staticClass:"col-12 col-sm-6 col-md-4 col-lg-3 col-xl-2 m-xl-0 tomo-info"},[_c(\'p\',{staticClass:"tomo-info__title"},[_c(\'i\',{staticClass:"tm-dot tomo-info__icon"}),_vm._v(" "),_c(\'span\',{staticClass:"tomo-info__text"},[_vm._v(_vm._s(key))])]),_vm._v(" "),_c(\'p\',{staticClass:"tomo-info__description"},[_vm._v("\\n                            "+_vm._s(value)+"\\n                        ")])])}),_vm._v(" "),_c(\'div\',{staticClass:"col-12 col-sm-6 col-md-4 col-lg-3 col-xl-2 tomo-info"},[_c(\'p\',{staticClass:"tomo-info__title"},[_c(\'i\',{staticClass:"tm-dot tomo-info__icon"}),_vm._v(" "),_c(\'span\',{staticClass:"tomo-info__text"},[_vm._v("Est. Staking ROI")])]),_vm._v(" "),_c(\'p\',{staticClass:"tomo-info__description",attrs:{"id":"tomo-info__description--balance"}},[_vm._v("\\n                            "+_vm._s(_vm.voterROI ? _vm.voterROI + \'%\' : \'---\')+"\\n                        ")])]),_vm._v(" "),_c(\'div\',{staticClass:"col-12 col-sm-6 col-md-4 col-lg-3 col-xl-2 tomo-info"},[_c(\'p\',{staticClass:"tomo-info__title"},[_c(\'i\',{staticClass:"tm-dot tomo-info__icon"}),_vm._v(" "),_c(\'span\',{staticClass:"tomo-info__text"},[_vm._v("Est. Owner ROI")])]),_vm._v(" "),_c(\'p\',{staticClass:"tomo-info__description",attrs:{"id":"tomo-info__description--balance"}},[_vm._v("\\n                            "+_vm._s(_vm.mnROI ? _vm.mnROI + \'%\' : \'---\')+"\\n                        ")])])],2)]),_vm._v(" "),_c(\'div\',{staticClass:"buttons text-right"},[(_vm.candidate.owner === _vm.account && _vm.candidate.status !== \'RESIGNED\')?_c(\'b-button\',{attrs:{"to":("/resign/" + (_vm.candidate.address)),"variant":"secondary"}},[_vm._v("Resign")]):_vm._e(),_vm._v(" "),(_vm.candidate.voted > 0)?_c(\'b-button\',{attrs:{"to":("/unvoting/" + (_vm.candidate.address)),"variant":"secondary"}},[_vm._v("Unvote")]):_vm._e(),_vm._v(" "),(_vm.candidate.status !== \'RESIGNED\' && _vm.isTomonet)?_c(\'b-button\',{attrs:{"to":("/voting/" + (_vm.candidate.address)),"variant":"primary"}},[_vm._v("Stake")]):_vm._e()],1)],1),_vm._v(" "),_c(\'div\',{class:\'container section section--mnrewards\'\n            + (_vm.rewardLoading ? \' tomo-loading\' : \'\')},[_c(\'div\',{staticClass:"row candidate-reward-bar"},[_c(\'div\',{staticClass:"col-12"},[_c(\'h3\',{staticClass:"section-title"},[_c(\'i\',{staticClass:"tm-gift color-purple"}),_vm._v(" "),_c(\'span\',[_vm._v("Masternode Rewards")]),_vm._v(" "),_c(\'span\',{staticClass:"text-truncate section-title__description"},[_vm._v("\\n                            Reward/Status for masternode owner")]),_vm._v(" "),(_vm.candidate.slashedTimes)?_c(\'span\',{staticClass:"text-truncate section-title__description"},[_vm._v("\\n                            MN was slashed for "+_vm._s(_vm.candidate.slashedTimes)+"\\n                            "+_vm._s(_vm.candidate.slashedTimes > 1 ? \'epochs\' : \'epoch\')+" over the past week ")]):_vm._e(),_vm._v(" "),_c(\'span\',{staticClass:"text-truncate section-title__description"},[_vm._v("\\n                            Slashing history:\\n                            "),_c(\'a\',{class:_vm.currentTab === \'week\' ? \'tab-active\' : \'\',on:{"click":function($event){return _vm.filterSlash(\'week\')}}},[_vm._v("1 Week")]),_vm._v(" "),_c(\'span\',[_vm._v("|")]),_vm._v(" "),_c(\'a\',{class:_vm.currentTab === \'month\' ? \'tab-active\' : \'\',on:{"click":function($event){return _vm.filterSlash(\'month\')}}},[_vm._v("1 Month")]),_vm._v(" "),_c(\'span\',[_vm._v("|")]),_vm._v(" "),_c(\'a\',{class:_vm.currentTab === \'year\' ? \'tab-active\' : \'\',on:{"click":function($event){return _vm.filterSlash(\'year\')}}},[_vm._v("1 Year")])])])])]),_vm._v(" "),_c(\'b-table\',{class:("tomo-table tomo-table--mnrewards" + (_vm.rewardLoading ? \' loading\' : \'\')),attrs:{"items":_vm.mnRewards,"fields":_vm.mnRewardsFields,"sort-by":_vm.mnRewardsSortBy,"sort-desc":_vm.mnRewardsSortDesc,"per-page":_vm.mnRewardsPerPage,"show-empty":true,"empty-text":("There are no " + ((_vm.currentTab !== \'\' ? \'records\' : \'rewards\')) + " to show"),"stacked":"md"},on:{"update:sortBy":function($event){_vm.mnRewardsSortBy=$event},"update:sort-by":function($event){_vm.mnRewardsSortBy=$event},"update:sortDesc":function($event){_vm.mnRewardsSortDesc=$event},"update:sort-desc":function($event){_vm.mnRewardsSortDesc=$event}},scopedSlots:_vm._u([{key:"checkpoint",fn:function(data){return [_vm._v(_vm._s(data.item.checkpoint)+"\\n                ")]}},{key:"reward",fn:function(data){return [_vm._v("\\n                    "+_vm._s(!isNaN(data.item.reward)\n                    ? _vm.formatCurrencySymbol(_vm.formatNumber(data.item.reward)) : data.item.reward)+"\\n                ")]}},{key:"createdAt",fn:function(data){return [_c(\'span\',{attrs:{"id":("timestamp__" + (data.index))}},[_vm._v(_vm._s(data.item.createdAt))]),_vm._v(" "),_c(\'b-tooltip\',{attrs:{"target":("timestamp__" + (data.index))}},[_vm._v("\\n                        "+_vm._s(data.item.dateTooltip)+"\\n                    ")])]}}])}),_vm._v(" "),(_vm.mnRewardsTotalRows > 0 && _vm.mnRewardsTotalRows > _vm.mnRewardsPerPage)?_c(\'b-pagination\',{staticClass:"tomo-pagination",attrs:{"total-rows":_vm.mnRewardsTotalRows,"per-page":_vm.mnRewardsPerPage,"align":"center"},on:{"change":_vm.rewardPageChange},model:{value:(_vm.mnRewardsCurrentPage),callback:function ($$v) {_vm.mnRewardsCurrentPage=$$v},expression:"mnRewardsCurrentPage"}}):_vm._e()],1),_vm._v(" "),_c(\'div\',{class:\'container section section-voters\'\n            + (_vm.voterLoading ? \' tomo-loading\' : \'\')},[_vm._m(1),_vm._v(" "),_c(\'b-table\',{class:("tomo-table tomo-table--voter" + (_vm.voterLoading ? \' loading\' : \'\')),attrs:{"items":_vm.voters,"fields":_vm.voterFields,"per-page":_vm.voterPerPage,"show-empty":true,"empty-text":"There are no voters to show","stacked":"md"},on:{"sort-changed":_vm.sortingChangeVoters},scopedSlots:_vm._u([{key:"id",fn:function(data){return [_vm._v(_vm._s(data.item.id)+"\\n                ")]}},{key:"address",fn:function(data){return [_c(\'router-link\',{staticClass:"text-truncate",attrs:{"to":\'/voter/\' + data.item.address}},[_vm._v("\\n                        "+_vm._s(data.item.address)+"\\n                    ")])]}},{key:"capacityNumber",fn:function(data){return [_vm._v(_vm._s(_vm.formatCurrencySymbol(_vm.formatNumber(data.item.cap)))+"\\n                ")]}}])}),_vm._v(" "),(_vm.voterTotalRows > 0 && _vm.voterTotalRows > _vm.voterPerPage)?_c(\'b-pagination\',{staticClass:"tomo-pagination",attrs:{"total-rows":_vm.voterTotalRows,"per-page":_vm.voterPerPage,"align":"center"},on:{"change":_vm.voterPageChange},model:{value:(_vm.voterCurrentPage),callback:function ($$v) {_vm.voterCurrentPage=$$v},expression:"voterCurrentPage"}}):_vm._e()],1),_vm._v(" "),_c(\'div\',{class:\'container section section--txs\'\n            + (_vm.txLoading ? \' tomo-loading\' : \'\')},[_vm._m(2),_vm._v(" "),_c(\'b-table\',{class:("tomo-table tomo-table--transactions" + (_vm.txLoading ? \' loading\' : \'\')),attrs:{"items":_vm.transactions,"fields":_vm.txFields,"per-page":_vm.txPerPage,"show-empty":true,"empty-text":"There are no transactions to show","stacked":"md"},on:{"sort-changed":_vm.sortingChangeTxes},scopedSlots:_vm._u([{key:"id",fn:function(data){return [_vm._v(_vm._s(data.item.id)+"\\n                ")]}},{key:"voter",fn:function(data){return [_c(\'router-link\',{staticClass:"text-truncate",attrs:{"to":\'/voter/\' + data.item.voter}},[_vm._v("\\n                        "+_vm._s(data.item.voter)+"\\n                    ")])]}},{key:"event",fn:function(data){return [_c(\'span\',{class:\'fw-600 \' + _vm.getEventClass(data.item.event)},[_vm._v(_vm._s(data.item.event))])]}},{key:"capacity",fn:function(data){return [_vm._v("\\n                    "+_vm._s(isNaN(data.item.cap) ? \'---\' : _vm.formatCurrencySymbol(data.item.cap))+"\\n                ")]}},{key:"createdAt",fn:function(data){return [_c(\'span\',{attrs:{"id":("timestamp__" + (data.index))}},[_vm._v(_vm._s(data.item.createdAt))]),_vm._v(" "),_c(\'b-tooltip\',{attrs:{"target":("timestamp__" + (data.index))}},[_vm._v("\\n                        "+_vm._s(data.item.dateTooltip)+"\\n                    ")])]}},{key:"action",fn:function(data){return [_c(\'a\',{directives:[{name:"b-tooltip",rawName:"v-b-tooltip.hover.right",modifiers:{"hover":true,"right":true}}],attrs:{"href":((_vm.config.explorerUrl) + "/tx/" + (data.item.tx)),"title":"View on DexScan","target":"_blank"}},[_c(\'i\',{staticClass:"tm-eye"}),_vm._v(" "),_c(\'span\',[_vm._v("View on DexScan")])])]}}])}),_vm._v(" "),(_vm.txTotalRows > 0 && _vm.txTotalRows > _vm.txPerPage)?_c(\'b-pagination\',{staticClass:"tomo-pagination",attrs:{"total-rows":_vm.txTotalRows,"per-page":_vm.txPerPage,"align":"center"},on:{"change":_vm.txPageChange},model:{value:(_vm.txCurrentPage),callback:function ($$v) {_vm.txCurrentPage=$$v},expression:"txCurrentPage"}}):_vm._e()],1)])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',{staticClass:"tomo-empty col-12"},[_c(\'i\',{staticClass:"tm-notice tomo-empty__icon"}),_vm._v(" "),_c(\'p\',{staticClass:"tomo-empty__description"},[_vm._v("This is not a candidate")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',{staticClass:"row"},[_c(\'div\',{staticClass:"col-12"},[_c(\'h3\',{staticClass:"section-title"},[_c(\'i\',{staticClass:"tm-arrow-up color-pink"}),_vm._v(" "),_c(\'span\',[_vm._v("stakers")]),_vm._v(" "),_c(\'span\',{staticClass:"text-truncate section-title__description"},[_vm._v("\\n                            People who stake for this masternode")])])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',{staticClass:"row"},[_c(\'div\',{staticClass:"col-12"},[_c(\'h3\',{staticClass:"section-title"},[_c(\'i\',{staticClass:"tm-time color-purple"}),_vm._v(" "),_c(\'span\',[_vm._v("Transactions")]),_vm._v(" "),_c(\'span\',{staticClass:"text-truncate section-title__description"},[_vm._v("\\n                            All transactions of this candidate")])])])])}]\n\n\n// CONCATENATED MODULE: ./app/components/candidates/View.vue?vue&type=template&id=8a1b64fc&\n\n// EXTERNAL MODULE: ./node_modules/axios/index.js\nvar axios = __webpack_require__(5);\nvar axios_default = /*#__PURE__*/__webpack_require__.n(axios);\n\n// EXTERNAL MODULE: ./node_modules/bignumber.js/bignumber.js\nvar bignumber = __webpack_require__(3);\nvar bignumber_default = /*#__PURE__*/__webpack_require__.n(bignumber);\n\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./app/components/Chart.vue?vue&type=template&id=7a2172e5&\nvar Chartvue_type_template_id_7a2172e5_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'highcharts\',{attrs:{"options":_vm.chartOptions}})}\nvar Chartvue_type_template_id_7a2172e5_staticRenderFns = []\n\n\n// CONCATENATED MODULE: ./app/components/Chart.vue?vue&type=template&id=7a2172e5&\n\n// EXTERNAL MODULE: ./node_modules/lodash/get.js\nvar get = __webpack_require__(212);\nvar get_default = /*#__PURE__*/__webpack_require__.n(get);\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./app/components/Chart.vue?vue&type=script&lang=js&\n//\n//\n//\n\n\n\n\n/* harmony default export */ var Chartvue_type_script_lang_js_ = ({\n    props: {\n        host: {\n            type: String,\n            default: \'\'\n        },\n        dataType: {\n            type: String,\n            default: \'\'\n        }\n    },\n    data() {\n        return {\n            config: {},\n            chartOptions: {\n                chart: {\n                    backgroundColor: {\n                        linearGradient: {\n                            x1: \'100%\',\n                            x2: 0,\n                            y2: \'100%\'\n                        },\n                        stops: [[0, \'#2e2e4b\'], [1, \'#323252\']]\n                    },\n                    borderRadius: 8,\n                    resetZoomButton: {\n                        theme: {\n                            fill: \'#678be0\',\n                            stroke: \'#678be0\',\n                            style: {\n                                color: \'#fff\'\n                            },\n                            states: {\n                                hover: {\n                                    fill: \'#739dff\'\n                                }\n                            }\n                        },\n                        relativeTo: \'chart\'\n                    },\n                    spacing: [40, 35, 25, 30],\n                    type: \'areaspline\',\n                    zoomType: \'x\'\n                },\n                credits: {\n                    enabled: false\n                },\n                title: {\n                    text: \'\',\n                    style: {\n                        color: \'#7573a6\'\n                    }\n                },\n                xAxis: {\n                    crosshair: {\n                        color: \'#7270a0\'\n                    },\n                    gridLineColor: \'#4b497a\',\n                    gridLineWidth: 1,\n                    labels: {\n                        style: {\n                            color: \'#7371a2\'\n                        }\n                    },\n                    lineColor: \'#4b497a\',\n                    tickWidth: 0,\n                    type: \'datetime\'\n                },\n                yAxis: {\n                    gridLineColor: \'#4b497a\',\n                    gridLineWidth: 1,\n                    labels: {\n                        style: {\n                            color: \'#7371a2\'\n                        }\n                    },\n                    max: 100,\n                    tickInterval: 20,\n                    title: \'\'\n                },\n                plotOptions: {\n                    areaspline: {\n                        marker: {\n                            radius: 1\n                        },\n                        states: {\n                            hover: {\n                                lineWidth: 3\n                            }\n                        },\n                        lineWidth: 3,\n                        threshold: 0\n                    }\n                },\n                tooltip: {\n                    crosshairs: true,\n                    shared: true\n                },\n                series: []\n            },\n            title: \'\',\n            series: []\n        };\n    },\n    watch: {\n        title(newValue) {\n            this.chartOptions.title.text = newValue;\n        },\n        series(newValue) {\n            this.chartOptions.series = newValue;\n        },\n        host: async function (newValue, oldValue) {\n            this.host = newValue;\n            // rebuild CPUs\n            let query = this.buildQuery();\n\n            let data = await this.fetchData(\'telegraf\', query, \'ms\');\n            this.series = this.bindDataToChart(data, this.colors, this.fillColor);\n        }\n    },\n    mounted: async function () {\n        // console.log(this.host)\n        this.config = await this.appConfig();\n        this.colors = [{\n            linearGradient: {\n                x1: \'50%\',\n                y1: \'50%\',\n                x2: \'100%\',\n                y2: \'0%\'\n            },\n            stops: [[0, \'#ea7587\'], [0.5, \'#e6b888\'], [1, \'#e6b888\']]\n        }, {\n            linearGradient: {\n                x1: \'50%\',\n                y1: \'50%\',\n                x2: \'100%\',\n                y2: \'0%\'\n            },\n            stops: [[0, \'#6362db\'], [0.5, \'#9e4bdd\'], [1, \'#9e4bdd\']]\n        }];\n\n        this.fillColor = {\n            linearGradient: {\n                x1: \'50%\',\n                y1: \'100%\',\n                x2: \'50%\'\n            },\n            stops: [[0, \'rgba(50, 50, 86, .7)\'], [0.63, \'rgba(59, 54, 88, .7)\']]\n\n            // CPUs\n        };let query = this.buildQuery();\n\n        let data = await this.fetchData(\'telegraf\', query, \'ms\');\n        if (data) {\n            if (this.dataType === \'cpu\' && !get_default()(data, [\'0\', \'series\'])) {\n                this.$bus.$emit(\'CPUResult\', false);\n            }\n            if (this.dataType === \'memory\' && !get_default()(data, [\'0\', \'series\'])) {\n                this.$bus.$emit(\'MEMResult\', false);\n            }\n        }\n\n        this.series = this.bindDataToChart(data, this.colors, this.fillColor);\n    },\n    methods: {\n        fetchData: async function (db, query, epoch) {\n            let chartData = [];\n            try {\n                this.chartLoading = true;\n\n                // eslint-disable-next-line max-len\n                let { data } = await axios_default.a.get(`/api/monitor?db=${db}&q=${query}&epoch=${epoch}`);\n\n                this.chartLoading = false;\n                chartData = data;\n            } catch (e) {\n                this.chartLoading = false;\n                if (typeof e.response !== \'undefined\' && e.response.data.error) {\n                    console.log(e.response.data.error);\n                } else {\n                    console.log(e);\n                }\n            }\n\n            return chartData;\n        },\n        bindDataToChart: function (data, colors, fillColor) {\n            let chartSeries = [];\n            if (typeof data.results !== \'undefined\') {\n                let zIndex = 5;\n                data.results.map((r, idx) => {\n                    let series = {};\n                    if (r.series.length) {\n                        let columns = r.series[0].columns;\n                        let data = r.series[0].values;\n\n                        series.name = typeof columns[1] !== \'undefined\' ? columns[1] : \'\';\n                        series.data = data;\n\n                        if (typeof colors[idx] !== \'undefined\') {\n                            series.color = colors[idx];\n                        }\n\n                        series.fillColor = fillColor;\n                        series.zIndex = --zIndex;\n                    }\n\n                    chartSeries.push(series);\n                });\n            }\n\n            return chartSeries;\n        },\n        buildQuery() {\n            let host = this.host;\n            let alias = [];\n            let query = \'\';\n\n            if (this.dataType === \'cpu\') {\n                alias = [`${host}_cpu_user`, `${host}_cpu_idle`];\n                // eslint-disable-next-line max-len\n                query = `SELECT mean("usage_user") AS "${alias[0]}" FROM "cpu" WHERE ("cpu" = \'cpu-total\' AND "host" = \'${host}\') AND time >= now() - 6h GROUP BY time(60s) fill(null);SELECT mean("usage_idle") AS "${alias[1]}"  FROM "cpu" WHERE ("cpu" = \'cpu-total\' AND "host" = \'${host}\') AND time >= now() - 6h GROUP BY time(60s) fill(null)`;\n                query = encodeURI(query).replace(\'=\', \'%3D\').replace(\';\', \'%3B\');\n            }\n\n            if (this.dataType === \'memory\') {\n                alias = `${host}_memory_usage`;\n                // eslint-disable-next-line max-len\n                query = `SELECT mean("used_percent") AS "${alias}" FROM "mem" WHERE ("host" = \'${host}\') AND time >= now() - 6h GROUP BY time(60s) fill(null)`;\n                query = encodeURI(query).replace(\'=\', \'%3D\').replace(\';\', \'%3B\');\n            }\n            return query;\n        }\n    }\n});\n// CONCATENATED MODULE: ./app/components/Chart.vue?vue&type=script&lang=js&\n /* harmony default export */ var components_Chartvue_type_script_lang_js_ = (Chartvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(11);\n\n// CONCATENATED MODULE: ./app/components/Chart.vue\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(componentNormalizer["a" /* default */])(\n  components_Chartvue_type_script_lang_js_,\n  Chartvue_type_template_id_7a2172e5_render,\n  Chartvue_type_template_id_7a2172e5_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var Chart = (component.exports);\n// EXTERNAL MODULE: ./node_modules/moment/moment.js\nvar moment = __webpack_require__(1);\nvar moment_default = /*#__PURE__*/__webpack_require__.n(moment);\n\n// EXTERNAL MODULE: ./node_modules/store/dist/store.legacy.js\nvar store_legacy = __webpack_require__(4);\nvar store_legacy_default = /*#__PURE__*/__webpack_require__.n(store_legacy);\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./app/components/candidates/View.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\n\n\n/* harmony default export */ var Viewvue_type_script_lang_js_ = ({\n    name: \'App\',\n    metaInfo: {\n        title: \'Candidate Details | SdxMaster\',\n        meta: [{ name: \'description\', content: \'Staking SDXChain Masternode to get the reward every epochs. You can use mobile, desktop, hardware wallet - ledger nano, trezor to stake TomoChain\' // eslint-disable-line\n        }]\n    },\n    components: {\n        chart: Chart\n    },\n    data() {\n        return {\n            isReady: false,\n            account: \'\',\n            voteActive: false,\n            voteValue: 1,\n            unvoteValue: 1,\n            recentReward: 0,\n            config: {},\n            voters: [],\n            transactions: [],\n            mnRewards: [],\n            candidate: {\n                address: this.$route.params.address.toLowerCase(),\n                name: \'\',\n                balance: \'\',\n                status: \'\',\n                cap: 0,\n                latestBlock: \'\',\n                latestSignedBlock: 0,\n                rewarded: 0,\n                hardwareInfo: \'\',\n                dataCenterInfo: {},\n                socials: {},\n                voted: 0,\n                slashedTimes: 0,\n                rank: \'\'\n            },\n            mnRewardsFields: [{\n                key: \'epoch\',\n                label: \'Epoch\',\n                sortable: false\n            }, {\n                key: \'name\',\n                label: \'Name\',\n                sortable: false\n            }, {\n                key: \'signNumber\',\n                label: \'Sign Number\',\n                sortable: false\n            }, {\n                key: \'status\',\n                label: \'Status\',\n                sortable: false\n            }, {\n                key: \'reward\',\n                label: \'Reward\',\n                sortable: false\n            }, {\n                key: \'createdAt\',\n                label: \'Age\',\n                sortable: false\n            }],\n            mnRewardsCurrentPage: 1,\n            mnRewardsSortBy: \'epoch\',\n            mnRewardsPerPage: 10,\n            mnRewardsSortDesc: true,\n            mnRewardsTotalRows: 0,\n            voterFields: [{\n                key: \'address\',\n                label: \'Address\',\n                sortable: false\n            }, {\n                key: \'capacityNumber\',\n                label: \'Capacity\',\n                sortable: true\n            }],\n            voterSortBy: \'capacityNumber\',\n            voterSortDesc: true,\n            voterCurrentPage: 1,\n            voterPerPage: 10,\n            voterTotalRows: 0,\n            txFields: [{\n                key: \'voter\',\n                label: \'Staker\',\n                sortable: true\n            }, {\n                key: \'event\',\n                label: \'Event\',\n                sortable: true\n            }, {\n                key: \'capacity\',\n                label: \'Capacity\',\n                sortable: true\n            }, {\n                key: \'createdAt\',\n                label: \'Age\',\n                sortable: false\n            }, {\n                key: \'action\',\n                label: \'\',\n                sortable: false\n            }],\n            txSortBy: \'createdAt\',\n            txSortDesc: true,\n            txCurrentPage: 1,\n            txPerPage: 10,\n            txTotalRows: 0,\n            loading: false,\n            rewardLoading: false,\n            voterLoading: false,\n            txLoading: false,\n            chartLoading: false,\n            cpu0Series: [],\n            isTomonet: false,\n            currentBlock: null,\n            loadedCPU: true,\n            loadedMEM: true,\n            isCandidate: true,\n            currentTab: \'\',\n            voterROI: \'\',\n            mnROI: \'\'\n        };\n    },\n    computed: {\n        sortedVoters: function () {\n            return this.voters.slice().sort(function (a, b) {\n                return b.cap - a.cap;\n            });\n        }\n    },\n    watch: {\n        $route(to, from) {\n            this.candidate.address = to.params.address.toLowerCase();\n            this.getCandidateData().then(() => {\n                this.getCandidateVoters();\n                this.getCandidateTransactions();\n                this.getCandidateRewards();\n            }).catch(error => {\n                console.log(error);\n            });\n        }\n    },\n    created: async function () {\n        let self = this;\n        self.config = store_legacy_default.a.get(\'configMaster\') || (await this.appConfig());\n        self.currentBlock = self.config.blockchain.blockNumber;\n        self.isReady = !!self.web3;\n        try {\n            if (self.isReady) {\n                let contract; // = self.TomoValidator.deployed()\n                contract = self.TomoValidator;\n                self.account = store_legacy_default.a.get(\'address\') || self.$store.state.address || (await self.getAccount());\n                if ((await self.account) && (await contract)) {\n                    self.isTomonet = true;\n                }\n            }\n            this.$bus.$on(\'CPUResult\', function (res) {\n                self.loadedCPU = res;\n            });\n            this.$bus.$on(\'MEMResult\', function (res) {\n                self.loadedMEM = res;\n            });\n        } catch (error) {\n            console.log(error);\n        }\n        self.getCandidateVoters();\n        self.getCandidateTransactions();\n        await self.getCandidateData();\n        self.getCandidateRewards();\n        if (self.candidate.rank) {\n            self.getAnnualReward();\n        }\n    },\n    mounted() {},\n    methods: {\n        getEventClass(event) {\n            let clazz = \'\';\n            if (event === \'Unvote\' || event === \'Resign\') {\n                clazz = \'color-pink\';\n            }\n\n            return clazz;\n        },\n        getDate(date) {\n            return date;\n        },\n        async getCandidateData() {\n            let self = this;\n\n            try {\n                let address = self.candidate.address;\n\n                self.loading = true;\n                const candidatePromise = axios_default.a.get(`/api/candidates/${address}`);\n\n                // Get candidate\'s information\n                let c = await candidatePromise;\n\n                if (c.data) {\n                    let data = c.data;\n                    self.isCandidate = data.candidate;\n                    self.candidate.name = data.name ? data.name : \'Anonymous\';\n                    self.candidate.status = data.status;\n                    self.candidate.nodeId = data.nodeId;\n                    self.candidate.owner = data.owner;\n                    self.candidate.cap = new bignumber_default.a(data.capacity).div(10 ** 18).toNumber();\n                    self.candidate.rewarded = 0;\n                    self.candidate.latestBlock = \'0\';\n                    self.candidate.latestSignedBlock = data.latestSignedBlock;\n                    self.candidate.hardwareInfo = data.hardware || \'N/A\';\n                    self.candidate.dataCenterInfo = {\n                        name: (data.dataCenter || {}).name || \'N/A\',\n                        location: (data.dataCenter || {}).location || \'N/A\'\n                    };\n                    self.candidate.socials = data.socials;\n                    self.candidate.slashedTimes = data.slashedTimes;\n                    self.candidate.rank = data.rank;\n                }\n\n                if (self.web3) {\n                    let youVoted = new bignumber_default.a(0);\n                    self.web3.eth.getBalance(self.candidate.address, function (a, b) {\n                        self.candidate.balance = new bignumber_default.a(b).div(10 ** 18);\n                        if (a) {\n                            console.log(\'got an error\', a);\n                        }\n                    });\n                    if (self.account) {\n                        try {\n                            let contract; // = await self.getTomoValidatorInstance()\n                            contract = self.TomoValidator;\n                            // youVoted = await contract.getVoterCap(address, self.account)\n                            youVoted = await contract.methods.getVoterCap(address, self.account).call();\n                            self.candidate.cap = await contract.methods.getCandidateCap(address).call().div(1e18).toNumber();\n                        } catch (e) {}\n                    }\n\n                    self.candidate.voted = new bignumber_default.a(youVoted).div(10 ** 18).toNumber();\n                }\n\n                self.loading = false;\n            } catch (e) {\n                self.loading = false;\n                console.log(e);\n            }\n        },\n        async getCandidateRewards() {\n            try {\n                const self = this;\n                const address = self.candidate.address;\n                // Masternode reward table\n                self.rewardLoading = true;\n                const params = {\n                    page: self.mnRewardsCurrentPage,\n                    limit: self.mnRewardsPerPage\n                };\n                let mnRewards = await axios_default.a.get(`/api/candidates/${address}/${self.candidate.owner}/getRewards?${self.serializeQuery(params)}`);\n                let items = [];\n\n                mnRewards.data.items.map(r => {\n                    const reward = !isNaN(r.masternodeReward || 0) ? new bignumber_default.a(r.masternodeReward || 0).toFixed(6) : r.masternodeReward;\n                    items.push({\n                        epoch: r.epoch,\n                        signNumber: r.signNumber ? r.signNumber : 0,\n                        reward: reward,\n                        createdAt: r.rewardTime ? moment_default()(r.rewardTime).fromNow() : \'N/A\',\n                        dateTooltip: moment_default()(r.rewardTime).format(\'lll\'),\n                        status: r.status,\n                        name: self.candidate.name || \'Anonymous\'\n                    });\n                });\n                self.mnRewards = items;\n\n                self.mnRewardsTotalRows = mnRewards.data.total;\n                self.rewardLoading = false;\n            } catch (error) {\n                self.rewardLoading = false;\n                console.log(error);\n            }\n        },\n        async getCandidateVoters() {\n            try {\n                const self = this;\n                const address = self.candidate.address;\n                self.voterLoading = true;\n                const params = {\n                    page: self.voterCurrentPage,\n                    limit: self.voterPerPage,\n                    sortBy: self.voterSortBy,\n                    sortDesc: self.voterSortDesc\n                };\n                const voterPromise = axios_default.a.get(`/api/candidates/${address}/voters?${self.serializeQuery(params)}`);\n\n                // Voter table\n                let voters = await voterPromise;\n                let items = [];\n\n                voters.data.items.map((v, idx) => {\n                    items.push({\n                        address: v.voter,\n                        cap: new bignumber_default.a(v.capacity).div(10 ** 18).toNumber()\n                    });\n                });\n\n                self.voters = items;\n                self.voterTotalRows = voters.data.total;\n                self.voterLoading = false;\n            } catch (error) {\n                self.voterLoading = false;\n                console.log(error);\n            }\n        },\n        async getCandidateTransactions() {\n            try {\n                const self = this;\n                const address = self.candidate.address;\n                self.txLoading = true;\n                const params = {\n                    page: self.txCurrentPage,\n                    limit: self.txPerPage,\n                    sortBy: self.txSortBy,\n                    sortDesc: self.txSortDesc\n                };\n\n                const txPromise = axios_default.a.get(`/api/transactions/candidate/${address}?${self.serializeQuery(params)}`);\n                // Get transaction table\n                let txs = await txPromise;\n                let items = [];\n\n                txs.data.items.map((tx, idx) => {\n                    items.push({\n                        tx: tx.tx,\n                        voter: tx.voter,\n                        candidate: tx.candidate,\n                        event: tx.event,\n                        cap: new bignumber_default.a(tx.capacity).div(10 ** 18).toNumber(),\n                        createdAt: moment_default()(tx.createdAt).fromNow(),\n                        dateTooltip: moment_default()(tx.createdAt).format(\'lll\')\n                    });\n                });\n                self.transactions = items;\n\n                self.txTotalRows = txs.data.total;\n                self.txLoading = false;\n            } catch (error) {\n                self.txLoading = false;\n                console.log(error);\n            }\n        },\n        getColor(latestSignedBlock, currentBlock) {\n            let result;\n            switch (true) {\n                case latestSignedBlock >= currentBlock - 100:\n                    result = \'cyan\';\n                    break;\n                case latestSignedBlock < currentBlock - 100 && latestSignedBlock >= currentBlock - 200:\n                    result = \'yellow\';\n                    break;\n                case latestSignedBlock < currentBlock - 200:\n                    result = \'pink\';\n                    break;\n                default:\n                    result = \'\';\n            }\n            return result;\n        },\n        txPageChange(val) {\n            if (this.txCurrentPage !== val) {\n                this.txCurrentPage = val;\n                this.getCandidateTransactions();\n            }\n        },\n        voterPageChange(val) {\n            if (this.voterCurrentPage !== val) {\n                this.voterCurrentPage = val;\n                this.getCandidateVoters();\n            }\n        },\n        rewardPageChange(val) {\n            if (this.mnRewardsCurrentPage !== val) {\n                this.mnRewardsCurrentPage = val;\n                if (this.currentTab !== \'\') {\n                    this.getSlashedData(this.currentTab);\n                } else this.getCandidateRewards();\n            }\n        },\n        sortingChangeVoters(obj) {\n            this.voterSortBy = obj.sortBy;\n            this.voterSortDesc = obj.sortDesc;\n            this.getCandidateVoters();\n        },\n        sortingChangeTxes(obj) {\n            this.txSortBy = obj.sortBy;\n            this.txSortDesc = obj.sortDesc;\n            this.getCandidateTransactions();\n        },\n        filterSlash(filterName) {\n            this.mnRewardsCurrentPage = 1;\n            this.$store.state.mnRewardsCurrentPage = 1;\n            if (this.currentTab !== filterName) {\n                this.currentTab = filterName;\n                this.getSlashedData(filterName);\n            }\n        },\n        async getSlashedData(filterName) {\n            try {\n                const self = this;\n                const address = self.candidate.address;\n\n                self.rewardLoading = true;\n                const params = {\n                    filterBy: filterName,\n                    page: self.mnRewardsCurrentPage,\n                    limit: self.mnRewardsPerPage\n                };\n                let slashedList = await axios_default.a.get(`/api/candidates/${address}/slashedFilter?${self.serializeQuery(params)}`);\n                let items = [];\n\n                slashedList.data.items.map(r => {\n                    const reward = !isNaN(r.masternodeReward || 0) ? new bignumber_default.a(r.masternodeReward || 0).toFixed(6) : r.masternodeReward;\n                    items.push({\n                        epoch: r.epoch,\n                        signNumber: r.signNumber ? r.signNumber : 0,\n                        reward: reward,\n                        createdAt: r.rewardTime ? moment_default()(r.rewardTime).fromNow() : \'N/A\',\n                        dateTooltip: moment_default()(r.rewardTime).format(\'lll\'),\n                        status: r.status\n                    });\n                });\n                self.mnRewards = items;\n\n                self.mnRewardsTotalRows = slashedList.data.total;\n                self.rewardLoading = false;\n            } catch (error) {\n                self.rewardLoading = false;\n                console.log(error);\n            }\n        },\n        async getAnnualReward() {\n            axios_default.a.get(\'/api/voters/annualReward?candidate=\' + this.candidate.address).then(result => {\n                if (result.data && result.data.voterROI) {\n                    this.voterROI = result.data.voterROI.toFixed(2);\n                    this.mnROI = result.data.mnROI.toFixed(2);\n                }\n            }).catch(error => {\n                console.log(error);\n                this.$toasted.show(error, { type: \'error\' });\n            });\n        }\n    }\n});\n// CONCATENATED MODULE: ./app/components/candidates/View.vue?vue&type=script&lang=js&\n /* harmony default export */ var candidates_Viewvue_type_script_lang_js_ = (Viewvue_type_script_lang_js_); \n// CONCATENATED MODULE: ./app/components/candidates/View.vue\n\n\n\n\n\n/* normalize component */\n\nvar View_component = Object(componentNormalizer["a" /* default */])(\n  candidates_Viewvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var View = (View_component.exports);\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./app/components/candidates/List.vue?vue&type=template&id=0f8ad738&\nvar Listvue_type_template_id_0f8ad738_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',[_c(\'div\',{staticClass:"container section section--status"},[_c(\'div\',{staticClass:"row"},[_vm._m(0),_vm._v(" "),_c(\'div\',{staticClass:"col-md-6 col-lg-3"},[_c(\'b-card\',{staticClass:"tomo-card"},[_c(\'h6\',{staticClass:"tomo-card__title"},[_vm._v("Current Block")]),_vm._v(" "),_c(\'p\',{staticClass:"tomo-card__text"},[_vm._v("\\n                        #"+_vm._s(_vm.chainConfig.blockNumber)+"\\n                    ")])])],1),_vm._v(" "),_c(\'div\',{staticClass:"col-md-6 col-lg-3"},[_c(\'b-card\',{staticClass:"tomo-card tomo-card"},[_c(\'h6\',{staticClass:"tomo-card__title"},[_vm._v("Epoch")]),_vm._v(" "),_c(\'p\',{staticClass:"tomo-card__text"},[_vm._v("\\n                        #"+_vm._s(Math.floor(_vm.chainConfig.blockNumber / _vm.chainConfig.epoch) + 1))])])],1),_vm._v(" "),_c(\'div\',{staticClass:"col-md-6 col-lg-3"},[_c(\'b-card\',{staticClass:"tomo-card tomo-card"},[_c(\'h6\',{staticClass:"tomo-card__title"},[_vm._v("Avg. Staking ROI")]),_vm._v(" "),_c(\'p\',{staticClass:"tomo-card__text"},[_vm._v("\\n                        "+_vm._s(_vm.averageStakingROI ? _vm.averageStakingROI + \'%\' : \'---\'))])])],1),_vm._v(" "),_c(\'div\',{staticClass:"col-md-6 col-lg-3"},[_c(\'b-card\',{staticClass:"tomo-card tomo-card"},[_c(\'h6\',{staticClass:"tomo-card__title"},[_vm._v("Avg. Owner ROI")]),_vm._v(" "),_c(\'p\',{staticClass:"tomo-card__text"},[_vm._v("\\n                        "+_vm._s(_vm.averageOwnerROI ? _vm.averageOwnerROI + \'%\' : \'---\'))])])],1)])]),_vm._v(" "),_c(\'div\',{staticClass:"container"},[_c(\'div\',{staticClass:"row"},[_c(\'div\',{staticClass:"col-12"},[_c(\'h3\',{staticClass:"section-title--masternodes"},[_c(\'div\',{staticClass:"masternode-bar"},[_c(\'i\',{staticClass:"tm-flag color-yellow"}),_vm._v(" "),_c(\'span\',[_vm._v("Masternodes")]),_vm._v(" "),_c(\'span\',{staticClass:"text-truncate section-title__description"},[(_vm.activeCandidates !== 0)?_c(\'a\',{class:_vm.currentTable === \'masternodes\' ? \'tab-active\' : \'\',on:{"click":function($event){return _vm.changeTable(\'masternodes\')}}},[_vm._v("Masternodes ("+_vm._s(_vm.activeCandidates)+")")]):_vm._e(),_vm._v(" "),(_vm.slashedMN !== 0)?_c(\'span\',[_vm._v("|")]):_vm._e(),_vm._v(" "),(_vm.slashedMN !== 0)?_c(\'a\',{class:_vm.currentTable === \'slashed\' ? \'tab-active\' : \'\',on:{"click":function($event){return _vm.changeTable(\'slashed\')}}},[_vm._v("Slashed MNs ("+_vm._s(_vm.slashedMN)+")")]):_vm._e(),_vm._v(" "),(_vm.totalProposedNodes !== 0)?_c(\'span\',[_vm._v("|")]):_vm._e(),_vm._v(" "),(_vm.totalProposedNodes !== 0)?_c(\'a\',{class:_vm.currentTable === \'proposed\' ? \'tab-active\' : \'\',on:{"click":function($event){return _vm.changeTable(\'proposed\')}}},[_vm._v("Proposed Nodes ("+_vm._s(_vm.totalProposedNodes)+")")]):_vm._e(),_vm._v(" "),(_vm.resignedMN !== 0)?_c(\'span\',[_vm._v("|")]):_vm._e(),_vm._v(" "),(_vm.resignedMN !== 0)?_c(\'a\',{class:_vm.currentTable === \'resigned\' ? \'tab-active\' : \'\',on:{"click":function($event){return _vm.changeTable(\'resigned\')}}},[_vm._v("Resigned Nodes ("+_vm._s(_vm.resignedMN)+")")]):_vm._e()])])])])])]),_vm._v(" "),(_vm.candidates.length <= 0)?_c(\'div\',{staticClass:"tomo-loading"}):_c(\'div\',{staticClass:"container"},[(_vm.mobileCheck && _vm.totalRows > 0 && _vm.totalRows > _vm.perPage)?_c(\'b-pagination\',{staticClass:"tomo-pagination",staticStyle:{"margin-bottom":"50px !important"},attrs:{"total-rows":_vm.totalRows,"per-page":_vm.perPage,"align":"center"},on:{"change":_vm.pageChange},model:{value:(_vm.currentPage),callback:function ($$v) {_vm.currentPage=$$v},expression:"currentPage"}}):_vm._e(),_vm._v(" "),_c(\'b-table\',{class:\'tomo-table tomo-table--candidates \' + _vm.tableCssClass,attrs:{"items":_vm.candidates,"fields":_vm.fields,"per-page":_vm.perPage,"empty-text":"There are no candidates to show","stacked":"lg"},on:{"sort-changed":_vm.sortingChange},scopedSlots:_vm._u([{key:"address",fn:function(data){return [_c(\'router-link\',{attrs:{"to":\'/candidate/\' + data.item.address}},[_vm._v("\\n                    "+_vm._s(_vm.truncate(data.item.address, 18))+"\\n                ")])]}},{key:"name",fn:function(data){return [_c(\'div\',{staticClass:"text-truncate",attrs:{"id":("name_" + (data.index))}},[_vm._v("\\n                    "+_vm._s(data.item.name)+"\\n                ")]),_vm._v(" "),(data.item.name.length > 20)?_c(\'b-tooltip\',{attrs:{"target":("name_" + (data.index))}},[_vm._v("\\n                    "+_vm._s(data.item.name)+"\\n                ")]):_vm._e()]}},{key:"capacity",fn:function(data){return [_vm._v(_vm._s(_vm.formatCurrencySymbol(_vm.formatBigNumber(data.item.cap, 2)))+"\\n            ")]}},{key:"latestSignedBlock",fn:function(data){return [_c(\'div\',[_c(\'span\',{class:("float-left mr-2 " + ((data.item.status !== \'PROPOSED\')\n                            ? (" tomo-status-dot tomo-status-dot--" + (_vm.getColor(\n                        data.item.latestSignedBlock || \'\', _vm.currentBlock))) : \'\'))},[_vm._v("\\n                        "+_vm._s(data.item.latestSignedBlock)+"\\n                    ")])])]}},{key:"status",fn:function(data){return [_c(\'div\',{staticClass:"mt-2 mt-lg-0"},[_c(\'span\',{class:\'tomo-chip \'\n                            + (data.item.status === \'PROPOSED\' || data.item.status === \'MASTERNODE\' ?\n                        \'tomo-chip--primary\' : \'tomo-chip--accent\')},[_vm._v("\\n                        "+_vm._s(data.item.status.toUpperCase())+"\\n                    ")])])]}},{key:"action",fn:function(data){return [(data.item.status === \'PROPOSED\' || data.item.status === \'MASTERNODE\')?_c(\'b-button\',{staticClass:"mt-3 mt-lg-0 vote-btn",attrs:{"variant":"primary"},on:{"click":function($event){return _vm.onRowClick(data.item.address)}}},[_vm._v("Stake")]):_vm._e()]}}])}),_vm._v(" "),(_vm.totalRows > 0 && _vm.totalRows > _vm.perPage)?_c(\'b-pagination\',{staticClass:"tomo-pagination",attrs:{"total-rows":_vm.totalRows,"per-page":_vm.perPage,"align":"center"},on:{"change":_vm.pageChange},model:{value:(_vm.currentPage),callback:function ($$v) {_vm.currentPage=$$v},expression:"currentPage"}}):_vm._e()],1)])}\nvar Listvue_type_template_id_0f8ad738_staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',{staticClass:"col-12"},[_c(\'h3\',{staticClass:"section-title"},[_c(\'i\',{staticClass:"tm-bolt color-pink"}),_vm._v(" "),_c(\'span\',[_vm._v("Network Information")])])])}]\n\n\n// CONCATENATED MODULE: ./app/components/candidates/List.vue?vue&type=template&id=0f8ad738&\n\n// EXTERNAL MODULE: ./node_modules/web3/src/index.js\nvar src = __webpack_require__(18);\nvar src_default = /*#__PURE__*/__webpack_require__.n(src);\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./app/components/candidates/List.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\n\n/* harmony default export */ var Listvue_type_script_lang_js_ = ({\n    name: \'App\',\n    data() {\n        return {\n            chainConfig: {},\n            fields: [{ key: \'rank\', label: \'Rank\' }, { key: \'address\', label: \'Address\', sortable: false }, { key: \'name\', label: \'Name\', sortable: false }, { key: \'capacity\', label: \'Capacity\', sortable: true }, { key: \'latestSignedBlock\', label: \'Latest Signed Block\', sortable: true }, { key: \'status\', label: \'Status\', sortable: false }, { key: \'action\', label: \'\', sortable: false }],\n            sortBy: \'capacity\',\n            sortDesc: true,\n            isReady: false,\n            account: \'\',\n            voteActive: false,\n            voteValue: 1,\n            candidates: [],\n            currentPage: this.$store.state.currentPage || 1,\n            perPage: 50,\n            totalRows: 0,\n            tableCssClass: \'\',\n            loading: false,\n            hasProposed: false,\n            hasResigned: false,\n            isTomonet: false,\n            activeCandidates: 0,\n            resignedMN: 0,\n            slashedMN: 0,\n            totalProposedNodes: 0,\n            currentTable: \'masternodes\',\n            averageStakingROI: \'\',\n            averageOwnerROI: \'\',\n            currentBlock: \'\'\n        };\n    },\n    computed: {\n        mobileCheck: () => {\n            const isAndroid = navigator.userAgent.match(/Android/i);\n            const isIOS = navigator.userAgent.match(/iPhone|iPad|iPod/i);\n            return isAndroid || isIOS;\n        }\n    },\n    watch: {},\n    updated() {},\n    created: async function () {\n        let self = this;\n        self.isReady = !!self.web3;\n        const config = store_legacy_default.a.get(\'configMaster\') || (await self.appConfig());\n        self.chainConfig = config.blockchain;\n        self.currentBlock = self.chainConfig.blockNumber;\n\n        try {\n            if (self.isReady || window.web3) {\n                if (window.web3 && window.web3.currentProvider && window.web3.currentProvider.isTomoWallet) {\n                    const wjs = new src_default.a(window.web3.currentProvider);\n                    await self.setupProvider(\'tomowalletDapp\', wjs);\n                    self.account = await self.getAccount();\n                    if (self.account) {\n                        self.$store.state.address = self.account;\n                        store_legacy_default.a.set(\'address\', self.account.toLowerCase());\n                        store_legacy_default.a.set(\'network\', \'tomowalletDapp\');\n                        self.$bus.$emit(\'logged\', \'user logged\');\n                    }\n                } else {\n                    self.account = store_legacy_default.a.get(\'address\') || self.$store.state.address || (await self.getAccount());\n                }\n                let contract;\n                contract = self.TomoValidator;\n                if (self.account && contract) {\n                    self.isTomonet = true;\n                }\n            }\n        } catch (error) {\n            console.log(error);\n        }\n        self.getDataFromApi();\n        self.averageroi();\n    },\n    mounted() {},\n    methods: {\n        watch: async function () {\n            let contract = await self.getTomoValidatorInstance();\n            contract = self.TomoValidator;\n            const allEvents = contract.allEvents({\n                fromBlock: self.blockNumber,\n                toBlock: \'latest\'\n            });\n\n            allEvents.watch((err, res) => {\n                if (err || !(res || {}).args) {\n                    console.error(err, res);\n                } else {\n                    console.log(res);\n                }\n            });\n        },\n        getTableCssClass: function () {\n            let cssClass = \'\';\n\n            if (!this.candidates.length) {\n                cssClass += \' tomo-table--candidates-empty\';\n            }\n\n            cssClass += this.loading ? \' tomo-table--loading\' : \'\';\n\n            this.tableCssClass = cssClass;\n        },\n        onRowClick(address) {\n            if (this.isTomonet) {\n                this.$router.push({ path: `/voting/${address}` });\n            } else {\n                const toastMessage = \'You can not vote at the moment. Please log in first.\';\n                this.$toasted.show(toastMessage, {\n                    type: \'info\',\n                    delay: \'5000\'\n                });\n            }\n        },\n        getColor(latestSignedBlock, currentBlock) {\n            let result;\n            switch (true) {\n                case latestSignedBlock >= currentBlock - 100:\n                    result = \'cyan\';\n                    break;\n                case latestSignedBlock < currentBlock - 100 && latestSignedBlock >= currentBlock - 200:\n                    result = \'yellow\';\n                    break;\n                case latestSignedBlock < currentBlock - 200:\n                    result = \'pink\';\n                    break;\n                default:\n                    result = \'\';\n            }\n            return result;\n        },\n        async getDataFromApi() {\n            const self = this;\n            try {\n                self.loading = true;\n                const params = {\n                    page: self.currentPage,\n                    limit: self.perPage,\n                    sortBy: self.sortBy,\n                    sortDesc: self.sortDesc\n                };\n                const query = self.serializeQuery(params);\n\n                let candidates = await axios_default.a.get(\'/api/candidates/masternodes\' + \'?\' + query);\n                let items = [];\n\n                candidates.data.items.map(async (candidate, index) => {\n                    items.push({\n                        address: candidate.candidate,\n                        owner: candidate.owner.toLowerCase(),\n                        status: candidate.status,\n                        isMasternode: candidate.isMasternode,\n                        isPenalty: candidate.isPenalty,\n                        name: candidate.name || \'Anonymous\',\n                        cap: new bignumber_default.a(candidate.capacity).div(10 ** 18).toNumber(),\n                        latestSignedBlock: candidate.latestSignedBlock || 0,\n                        rank: candidate.rank\n                    });\n                });\n                self.candidates = items;\n\n                self.activeCandidates = candidates.data.activeCandidates;\n                self.totalRows = candidates.data.activeCandidates;\n                self.resignedMN = candidates.data.totalResigned;\n                self.totalProposedNodes = candidates.data.totalProposed;\n                self.slashedMN = candidates.data.totalSlashed;\n\n                self.loading = false;\n                self.getTableCssClass();\n            } catch (e) {\n                self.loading = false;\n                console.log(e);\n            }\n        },\n        pageChange(page) {\n            this.$store.state.currentPage = page;\n            this.currentPage = page;\n            this.loadDataTables(this.currentTable);\n            window.scrollTo(0, 320);\n        },\n        sortingChange(obj) {\n            this.sortBy = obj.sortBy;\n            this.sortDesc = obj.sortDesc;\n            this.loadDataTables(this.currentTable);\n        },\n        async getSlashedMNs() {\n            const self = this;\n            try {\n                self.loading = true;\n                const params = {\n                    page: self.currentPage,\n                    limit: self.perPage,\n                    sortBy: self.sortBy,\n                    sortDesc: self.sortDesc\n                };\n                const query = self.serializeQuery(params);\n\n                let candidates = await axios_default.a.get(\'/api/candidates/slashedMNs\' + \'?\' + query);\n                let items = [];\n                candidates.data.items.map(async (candidate, index) => {\n                    items.push({\n                        address: candidate.candidate,\n                        owner: candidate.owner.toLowerCase(),\n                        status: candidate.status,\n                        isMasternode: candidate.isMasternode,\n                        isPenalty: candidate.isPenalty,\n                        name: candidate.name || \'Anonymous\',\n                        cap: new bignumber_default.a(candidate.capacity).div(10 ** 18).toNumber(),\n                        latestSignedBlock: candidate.latestSignedBlock || 0\n                    });\n                });\n                self.candidates = items;\n\n                self.totalRows = candidates.data.total;\n\n                self.loading = false;\n                self.getTableCssClass();\n            } catch (e) {\n                self.loading = false;\n                console.log(e);\n            }\n        },\n        async getProposedMNs() {\n            const self = this;\n            try {\n                self.loading = true;\n\n                const params = {\n                    page: self.currentPage,\n                    limit: self.perPage,\n                    sortBy: self.sortBy,\n                    sortDesc: self.sortDesc\n                };\n                const query = self.serializeQuery(params);\n\n                let candidates = await axios_default.a.get(\'/api/candidates/proposedMNs\' + \'?\' + query);\n                let items = [];\n                candidates.data.items.map(async (candidate, index) => {\n                    items.push({\n                        address: candidate.candidate,\n                        owner: candidate.owner.toLowerCase(),\n                        status: candidate.status,\n                        isMasternode: candidate.isMasternode,\n                        isPenalty: candidate.isPenalty,\n                        name: candidate.name || \'Anonymous\',\n                        cap: new bignumber_default.a(candidate.capacity).div(10 ** 18).toNumber(),\n                        latestSignedBlock: \'---\' // candidate.latestSignedBlock\n                    });\n                });\n                self.candidates = items;\n\n                self.totalRows = candidates.data.total;\n\n                self.loading = false;\n                self.getTableCssClass();\n            } catch (e) {\n                self.loading = false;\n                console.log(e);\n            }\n        },\n        async getResignedMNs() {\n            const self = this;\n            try {\n                self.loading = true;\n                const params = {\n                    page: self.currentPage,\n                    limit: self.perPage,\n                    sortBy: self.sortBy,\n                    sortDesc: self.sortDesc\n                };\n                const query = self.serializeQuery(params);\n\n                let candidates = await axios_default.a.get(\'/api/candidates/resignedMNs\' + \'?\' + query);\n                let items = [];\n                candidates.data.items.map(async (candidate, index) => {\n                    items.push({\n                        address: candidate.candidate,\n                        owner: candidate.owner.toLowerCase(),\n                        status: candidate.status,\n                        isMasternode: candidate.isMasternode,\n                        isPenalty: candidate.isPenalty,\n                        name: candidate.name || \'Anonymous\',\n                        cap: new bignumber_default.a(candidate.capacity).div(10 ** 18).toNumber(),\n                        latestSignedBlock: candidate.latestSignedBlock || 0\n                    });\n                });\n                self.candidates = items;\n\n                self.totalRows = candidates.data.total;\n\n                self.loading = false;\n                self.getTableCssClass();\n            } catch (e) {\n                self.loading = false;\n                console.log(e);\n            }\n        },\n        changeTable(tableName) {\n            this.currentPage = 1;\n            this.$store.state.currentPage = 1;\n            if (this.currentTable !== tableName) {\n                this.currentTable = tableName;\n                this.loadDataTables(tableName);\n            }\n        },\n        loadDataTables(tableName) {\n            switch (tableName) {\n                case \'masternodes\':\n                    this.getDataFromApi();\n                    break;\n                case \'slashed\':\n                    this.getSlashedMNs();\n                    break;\n                case \'proposed\':\n                    this.getProposedMNs();\n                    break;\n                case \'resigned\':\n                    this.getResignedMNs();\n                    break;\n                default:\n                    this.getDataFromApi();\n                    break;\n            }\n        },\n        async averageroi() {\n            axios_default.a.get(\'/api/voters/averageroi\').then(result => {\n                if (result.data && result.data.averageStakingROI) {\n                    this.averageStakingROI = result.data.averageStakingROI.toFixed(2);\n                    this.averageOwnerROI = result.data.averageOwnerROI.toFixed(2);\n                }\n            }).catch(error => {\n                console.log(error);\n                this.$toasted.show(error, { type: \'error\' });\n            });\n        }\n    }\n});\n// CONCATENATED MODULE: ./app/components/candidates/List.vue?vue&type=script&lang=js&\n /* harmony default export */ var candidates_Listvue_type_script_lang_js_ = (Listvue_type_script_lang_js_); \n// CONCATENATED MODULE: ./app/components/candidates/List.vue\n\n\n\n\n\n/* normalize component */\n\nvar List_component = Object(componentNormalizer["a" /* default */])(\n  candidates_Listvue_type_script_lang_js_,\n  Listvue_type_template_id_0f8ad738_render,\n  Listvue_type_template_id_0f8ad738_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var List = (List_component.exports);\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./app/components/candidates/Apply.vue?vue&type=template&id=6e050af0&\nvar Applyvue_type_template_id_6e050af0_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',{staticClass:"container"},[_c(\'b-row\',{staticClass:"m-0",attrs:{"align-v":"center","align-h":"center"}},[_c(\'b-card\',{class:\'col-12 col-md-8 col-lg-6 tomo-card tomo-card--lighter p-0\'\n            + (_vm.loading ? \' tomo-loading\' : \'\')},[_c(\'h4\',{staticClass:"color-white tomo-card__title tomo-card__title--big"},[_vm._v("Register a Masternode")]),_vm._v(" "),_c(\'ul\',{staticClass:"tomo-list list-unstyled"},[_c(\'li\',{staticClass:"tomo-list__item"},[_c(\'i\',{staticClass:"tm-tomo2 tomo-list__icon"}),_vm._v(" "),_c(\'span\',{staticClass:"tomo-list__text"},[_vm._v("You have to deposit at least 10,000 SDX")])]),_vm._v(" "),_c(\'li\',{staticClass:"tomo-list__item"},[_c(\'i\',{staticClass:"tm-lock tomo-list__icon"}),_vm._v(" "),_c(\'span\',{staticClass:"tomo-list__text"},[_vm._v("Your deposit will be locked")])])]),_vm._v(" "),_c(\'b-form\',{staticClass:"tomo-form tomo-form--apply",attrs:{"novalidate":""},on:{"submit":function($event){$event.preventDefault();return _vm.validate()}}},[_c(\'b-form-group\',{attrs:{"description":("How much SDX do you want to deposit? TX fee: " + _vm.txFee + " SDX"),"label":"Stake","label-for":"apply-value"}},[_c(\'b-input-group\',[_c(\'number-input\',{class:_vm.getValidationClass(\'applyValue\'),attrs:{"min":0.1,"step":0.1,"name":"apply-value"},model:{value:(_vm.applyValue),callback:function ($$v) {_vm.applyValue=$$v},expression:"applyValue"}}),_vm._v(" "),_c(\'b-input-group-append\',[_c(\'i\',{staticClass:"tm-tomo2"})]),_vm._v(" "),(_vm.$v.applyValue.$dirty && !_vm.$v.applyValue.required)?_c(\'span\',{staticClass:"text-danger"},[_vm._v("Required field")]):(_vm.$v.applyValue.$dirty && !_vm.$v.applyValue.minValue)?_c(\'span\',{staticClass:"text-danger"},[_vm._v("Must be greater than 10,000 SDX")]):_vm._e()],1)],1),_vm._v(" "),_c(\'b-form-group\',{attrs:{"label":"SDX Masternode Address","label-for":"coinbase","description":"What is your node server account address?"}},[_c(\'b-form-input\',{class:_vm.getValidationClass(\'coinbase\'),attrs:{"name":"coinbase","autocomplete":"off","type":"text"},model:{value:(_vm.coinbase),callback:function ($$v) {_vm.coinbase=$$v},expression:"coinbase"}}),_vm._v(" "),(_vm.$v.coinbase.$dirty && !_vm.$v.coinbase.required)?_c(\'span\',{staticClass:"text-danger"},[_vm._v("Required field")]):(_vm.$v.coinbase.$dirty && !_vm.$v.coinbase.coinbaseAddress)?_c(\'span\',{staticClass:"text-danger"},[_vm._v("Wrong SDX Masternode address format")]):(_vm.coinbaseError)?_c(\'span\',{staticClass:"text-danger"},[_vm._v("\\n                        The masternode account should be different from the depositing account.\\n                    ")]):(_vm.candidateError)?_c(\'span\',{staticClass:"text-danger"},[_vm._v("\\n                        This SDX Masternode address is already a Masternode\\n                    ")]):_vm._e()],1),_vm._v(" "),_c(\'div\',{staticClass:"buttons text-right"},[_c(\'b-button\',{attrs:{"type":"button","variant":"secondary"},on:{"click":function($event){return _vm.$router.go(-1)}}},[_vm._v("Cancel")]),_vm._v(" "),_c(\'b-button\',{attrs:{"type":"submit","variant":"primary"}},[_vm._v("Apply")])],1)],1)],1)],1),_vm._v(" "),_c(\'b-modal\',{ref:"applyModal",staticClass:"tomo-modal",attrs:{"centered":"","title":"Scan this QR code by TomoWallet","hide-footer":""}},[(_vm.provider === \'tomowallet\')?_c(\'div\',{staticStyle:{"text-align":"center"}},[_c(\'vue-qrcode\',{staticClass:"img-fluid text-center text-lg-right",attrs:{"value":_vm.qrCode,"options":{size: 200 }}})],1):_vm._e(),_vm._v(" "),_c(\'b-btn\',{staticClass:"mt-3",attrs:{"variant":"outline-danger","block":""},on:{"click":_vm.hideModal}},[_vm._v("Close")])],1)],1)}\nvar Applyvue_type_template_id_6e050af0_staticRenderFns = []\n\n\n// CONCATENATED MODULE: ./app/components/candidates/Apply.vue?vue&type=template&id=6e050af0&\n\n// EXTERNAL MODULE: ./node_modules/vuelidate/lib/index.js\nvar lib = __webpack_require__(44);\n\n// EXTERNAL MODULE: ./node_modules/vuelidate/lib/validators/index.js\nvar validators = __webpack_require__(16);\n\n// EXTERNAL MODULE: ./validators/coinbaseAddress.js\nvar coinbaseAddress = __webpack_require__(544);\nvar coinbaseAddress_default = /*#__PURE__*/__webpack_require__.n(coinbaseAddress);\n\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./app/components/NumberInput.vue?vue&type=template&id=c89a03b2&\nvar NumberInputvue_type_template_id_c89a03b2_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',{staticClass:"number-input"},[_c(\'input\',{directives:[{name:"model",rawName:"v-model",value:(_vm.currentValue),expression:"currentValue"}],staticClass:"form-control",attrs:{"disabled":_vm.inputDisabled,"min":_vm.min,"max":_vm.max,"step":_vm.step,"type":"text"},domProps:{"value":(_vm.currentValue)},on:{"blur":_vm.blur,"keydown":[function($event){if(!$event.type.indexOf(\'key\')&&_vm._k($event.keyCode,"esc",27,$event.key,["Esc","Escape"])){ return null; }return _vm.blur($event)},function($event){if(!$event.type.indexOf(\'key\')&&_vm._k($event.keyCode,"enter",13,$event.key,"Enter")){ return null; }return _vm.blur($event)},function($event){if(!$event.type.indexOf(\'key\')&&_vm._k($event.keyCode,"up",38,$event.key,["Up","ArrowUp"])){ return null; }$event.preventDefault();return _vm.increment($event)},function($event){if(!$event.type.indexOf(\'key\')&&_vm._k($event.keyCode,"down",40,$event.key,["Down","ArrowDown"])){ return null; }$event.preventDefault();return _vm.decrement($event)}],"input":function($event){if($event.target.composing){ return; }_vm.currentValue=$event.target.value}}}),_vm._v(" "),_c(\'button\',{staticClass:"decrement-button",attrs:{"disabled":_vm.decrementDisabled,"type":"button"},on:{"click":_vm.decrement}},[_vm._v("−")]),_vm._v(" "),_c(\'button\',{staticClass:"increment-button",attrs:{"disabled":_vm.incrementDisabled,"type":"button"},on:{"click":_vm.increment}},[_vm._v("+")])])}\nvar NumberInputvue_type_template_id_c89a03b2_staticRenderFns = []\n\n\n// CONCATENATED MODULE: ./app/components/NumberInput.vue?vue&type=template&id=c89a03b2&\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./app/components/NumberInput.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n/* harmony default export */ var NumberInputvue_type_script_lang_js_ = ({\n    props: {\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        max: {\n            type: Number,\n            default: Infinity\n        },\n        min: {\n            type: Number,\n            default: -Infinity\n        },\n        value: {\n            type: String,\n            required: true\n        },\n        step: {\n            type: Number,\n            default: 1\n        }\n    },\n\n    data() {\n        return {\n            currentValue: this.value ? this.value.replace(/,/g, \'\') : \'\',\n            decrementDisabled: false,\n            incrementDisabled: false,\n            inputDisabled: false\n        };\n    },\n\n    watch: {\n        value(val) {\n            this.currentValue = val;\n        }\n    },\n\n    mounted() {\n        if (new bignumber_default.a(this.value) === this.min) {\n            this.decrementDisabled = true;\n        }\n    },\n\n    methods: {\n        increment() {\n            if (this.disabled || this.incrementDisabled) {\n                return;\n            }\n\n            let val = new bignumber_default.a(this.currentValue);\n            let newVal = val.plus(this.step);\n            this.decrementDisabled = false;\n\n            this._updateValue(newVal.toString());\n        },\n        decrement() {\n            if (this.disabled || this.decrementDisabled) {\n                return;\n            }\n\n            let val = new bignumber_default.a(this.currentValue);\n            let newVal = val.minus(this.step);\n            this.incrementDisabled = false;\n\n            this._updateValue(newVal.toString());\n        },\n        blur() {\n            this.$emit(\'input\', this.currentValue);\n        },\n        _updateValue(newVal) {\n            const oldVal = new bignumber_default.a(this.currentValue);\n\n            if (oldVal === newVal) {\n                return;\n            }\n            if (newVal <= this.min) {\n                newVal = this.min;\n                this.decrementDisabled = true;\n            }\n            if (newVal >= this.max) {\n                newVal = this.max;\n                this.incrementDisabled = true;\n            }\n            this.currentValue = newVal.toString();\n            this.$emit(\'input\', this.currentValue);\n        }\n    }\n});\n// CONCATENATED MODULE: ./app/components/NumberInput.vue?vue&type=script&lang=js&\n /* harmony default export */ var components_NumberInputvue_type_script_lang_js_ = (NumberInputvue_type_script_lang_js_); \n// CONCATENATED MODULE: ./app/components/NumberInput.vue\n\n\n\n\n\n/* normalize component */\n\nvar NumberInput_component = Object(componentNormalizer["a" /* default */])(\n  components_NumberInputvue_type_script_lang_js_,\n  NumberInputvue_type_template_id_c89a03b2_render,\n  NumberInputvue_type_template_id_c89a03b2_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var NumberInput = (NumberInput_component.exports);\n// EXTERNAL MODULE: ./node_modules/@chenfengyuan/vue-qrcode/dist/vue-qrcode.js\nvar vue_qrcode = __webpack_require__(32);\nvar vue_qrcode_default = /*#__PURE__*/__webpack_require__.n(vue_qrcode);\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./app/components/candidates/Apply.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n// import nodeUrl from \'../../../validators/nodeUrl.js\'\n\n\n\n\n\n\n/* harmony default export */ var Applyvue_type_script_lang_js_ = ({\n    name: \'App\',\n    components: {\n        NumberInput: NumberInput,\n        VueQrcode: vue_qrcode_default.a\n    },\n    mixins: [lib["validationMixin"]],\n    data() {\n        return {\n            account: \'\',\n            isReady: !!this.web3,\n            applyValue: \'10000\',\n            coinbase: \'\',\n            // nodeUrl: \'\',\n            loading: false,\n            coinbaseError: false,\n            provider: this.NetworkProvider || store_legacy_default.a.get(\'network\') || null,\n            showQR: true,\n            qrCode: \'text\',\n            interval: null,\n            candidateError: false,\n            balance: 0,\n            txFee: 0,\n            gasPrice: null,\n            transactionHash: \'\',\n            toastMessage: \'You have successfully applied!\',\n            toastMessageError: \'An error occurred while applying, please try again\'\n        };\n    },\n    validations: {\n        applyValue: {\n            required: validators["required"],\n            minValue: Object(validators["minValue"])(10000)\n        },\n        coinbase: {\n            required: validators["required"],\n            coinbaseAddress: coinbaseAddress_default.a\n            /*\n            nodeUrl: {\n                required,\n                nodeUrl\n            },\n            */\n        } },\n    computed: {},\n    watch: {},\n    updated() {},\n    beforeDestroy() {\n        if (this.interval) {\n            clearInterval(this.interval);\n        }\n    },\n    created: async function () {\n        const self = this;\n        self.config = store_legacy_default.a.get(\'configMaster\') || (await self.appConfig());\n        self.chainConfig = self.config.blockchain || {};\n        try {\n            self.isReady = !!self.web3;\n            self.gasPrice = await self.web3.eth.getGasPrice();\n            self.txFee = new bignumber_default.a(this.chainConfig.gas * self.gasPrice).div(10 ** 18).toString(10);\n            if (!self.web3 && self.NetworkProvider === \'metamask\') {\n                throw Error(\'Web3 is not properly detected. Have you installed MetaMask extension?\');\n            }\n            self.account = store_legacy_default.a.get(\'address\') || self.$store.state.address || (await self.getAccount());\n        } catch (e) {\n            self.$toasted.show(`You need login your account before voting`, {\n                type: \'default\',\n                duration: 5000,\n                action: [{\n                    text: \'Login\',\n                    onClick: (e, toastObject) => {\n                        self.$router.push({ path: \'/setting\' });\n                    }\n                }]\n            });\n            console.log(e);\n        }\n    },\n    mounted() {},\n    methods: {\n        getValidationClass: function (fieldName) {\n            const field = this.$v[fieldName];\n\n            if (field) {\n                return {\n                    \'is-invalid\': field.$error\n                };\n            }\n        },\n        validate: async function () {\n            this.$v.$touch();\n            this.coinbaseError = false;\n\n            if (!this.$v.$invalid) {\n                if (this.coinbase.toLowerCase() === this.account.toLowerCase()) {\n                    this.coinbaseError = true;\n                } else {\n                    // Check balance\n                    const balanc = await this.web3.eth.getBalance(this.account);\n                    this.balance = new bignumber_default.a(balanc).div(10 ** 18);\n                    const convertedAmount = new bignumber_default.a(this.applyValue);\n\n                    if (this.balance.isLessThan(convertedAmount)) {\n                        this.$toasted.show(`Not enough SDX`, {\n                            type: \'error\'\n                        });\n                        return false;\n                    }\n                    const { data } = await axios_default.a.get(\'/api/candidates/\' + this.coinbase + \'/isCandidate\');\n                    if (data) {\n                        this.candidateError = true;\n                    } else {\n                        this.candidateError = false;\n                        if (this.provider !== \'tomowallet\') {\n                            await this.apply();\n                        } else {\n                            if (this.interval) {\n                                clearInterval(this.interval);\n                            }\n                            await this.generateQR();\n                            this.$refs.applyModal.show();\n                        }\n                    }\n                }\n            }\n        },\n        apply: async function () {\n            let self = this;\n            let value = this.applyValue;\n            let coinbase = this.coinbase.toLowerCase();\n            // let nodeUrl = this.nodeUrl\n\n            try {\n                if (!self.isReady) {\n                    self.$router.push({ path: \'/setting\' });\n                    throw Error(\'Web3 is not properly detected.\');\n                }\n\n                self.loading = true;\n\n                let contract; // = await self.getTomoValidatorInstance()\n                contract = self.TomoValidator;\n                const account = ((await self.getAccount()) || \'\').toLowerCase();\n                let txParams = {\n                    from: account,\n                    value: self.web3.utils.toHex(new bignumber_default.a(value).multipliedBy(10 ** 18).toString(10)),\n                    gasPrice: self.web3.utils.toHex(self.gasPrice),\n                    gas: self.web3.utils.toHex(self.chainConfig.gas),\n                    gasLimit: self.web3.utils.toHex(self.chainConfig.gas),\n                    chainId: self.chainConfig.networkId\n                };\n                if (self.NetworkProvider === \'ledger\' || self.NetworkProvider === \'trezor\') {\n                    let nonce = await self.web3.eth.getTransactionCount(account);\n                    // let dataTx = contract.propose.request(coinbase).params[0]\n                    const data = await contract.methods.propose(coinbase).encodeABI();\n                    const dataTx = {\n                        data,\n                        to: self.chainConfig.validatorAddress\n                    };\n                    Object.assign(dataTx, dataTx, txParams, {\n                        nonce: self.web3.utils.toHex(nonce)\n                    });\n                    let signature = await self.signTransaction(dataTx);\n                    const txHash = await self.sendSignedTransaction(dataTx, signature);\n                    if (txHash) {\n                        self.transactionHash = txHash;\n                        let check = true;\n                        while (check) {\n                            const receipt = await self.web3.eth.getTransactionReceipt(txHash);\n                            if (receipt) {\n                                check = false;\n                                self.$toasted.show(self.toastMessage);\n                                setTimeout(() => {\n                                    self.loading = false;\n                                    if (self.transactionHash) {\n                                        self.$router.push({ path: `/candidate/${coinbase}` });\n                                    }\n                                }, 2000);\n                            }\n                        }\n                    }\n                } else {\n                    // rs = await contract.propose(coinbase, txParams)\n                    contract.methods.propose(coinbase).send(txParams).on(\'transactionHash\', async txHash => {\n                        self.transactionHash = txHash;\n                        let check = true;\n                        while (check) {\n                            const receipt = await self.web3.eth.getTransactionReceipt(txHash);\n                            if (receipt) {\n                                check = false;\n                                self.$toasted.show(self.toastMessage);\n                                setTimeout(() => {\n                                    self.loading = false;\n                                    if (self.transactionHash) {\n                                        self.$router.push({ path: `/candidate/${coinbase}` });\n                                    }\n                                }, 2000);\n                            }\n                        }\n                    }).catch(e => {\n                        console.log(e);\n                        self.loading = false;\n                        self.$toasted.show(self.toastMessageError + e, { type: \'error\' });\n                    });\n                }\n            } catch (e) {\n                self.loading = false;\n                self.$toasted.show(`An error occurred while applying, please fix it and try again: ${String(e)}`, {\n                    type: \'error\'\n                });\n                console.log(e);\n                if (self.interval) {\n                    clearInterval(self.interval);\n                }\n            }\n        },\n        hideModal() {\n            this.$refs.applyModal.hide();\n        },\n        async generateQR() {\n            const self = this;\n            const coinbase = self.coinbase.toLowerCase();\n\n            if (self.interval) {\n                clearInterval(self.interval);\n            }\n\n            try {\n                const amount = new bignumber_default.a(self.applyValue).toString(10);\n                const body = {\n                    action: \'propose\',\n                    voter: self.account.toLowerCase(),\n                    candidate: coinbase,\n                    amount\n                    // call api to generate qr code\n                };const { data } = await axios_default.a.post(`/api/voters/generateQR`, body);\n\n                self.message = data.message;\n                self.id = data.id;\n                self.qrCode = encodeURI(\'tomochain:propose?amount=\' + amount + \'&candidate=\' + coinbase + \'&submitURL=\' + data.url);\n\n                // set interval\n                self.interval = setInterval(async () => {\n                    self.verifyScannedQR();\n                }, 3000);\n            } catch (e) {\n                console.log(e);\n            }\n        },\n        async verifyScannedQR() {\n            let self = this;\n            let coinbase = this.coinbase.toLowerCase();\n            try {\n                let { data } = await axios_default.a.get(\'/api/voters/getScanningResult?action=propose&id=\' + self.id);\n\n                if (!data.error) {\n                    self.hideModal();\n                    self.loading = true;\n                    if (data.tx) {\n                        clearInterval(self.interval);\n                        let toastMessage = data.tx ? \'You have successfully applied!\' : \'An error occurred while applying, please try again\';\n                        self.$toasted.show(toastMessage);\n                        setTimeout(() => {\n                            if (data.tx) {\n                                self.loading = false;\n                                self.$router.push({ path: `/candidate/${coinbase}` });\n                            }\n                        }, 3000);\n                    }\n                }\n            } catch (e) {\n                console.log(e);\n                self.$toasted.show(`An error occurred while excuting. ${String(e)}`, {\n                    type: \'error\'\n                });\n                clearInterval(self.interval);\n            }\n        }\n    }\n});\n// CONCATENATED MODULE: ./app/components/candidates/Apply.vue?vue&type=script&lang=js&\n /* harmony default export */ var candidates_Applyvue_type_script_lang_js_ = (Applyvue_type_script_lang_js_); \n// CONCATENATED MODULE: ./app/components/candidates/Apply.vue\n\n\n\n\n\n/* normalize component */\n\nvar Apply_component = Object(componentNormalizer["a" /* default */])(\n  candidates_Applyvue_type_script_lang_js_,\n  Applyvue_type_template_id_6e050af0_render,\n  Applyvue_type_template_id_6e050af0_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var Apply = (Apply_component.exports);\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./app/components/candidates/Resign.vue?vue&type=template&id=16a4880e&\nvar Resignvue_type_template_id_16a4880e_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',[_c(\'div\',{staticClass:"container"},[_c(\'b-row\',{staticClass:"m-0",attrs:{"align-v":"center","align-h":"center"}},[_c(\'b-card\',{class:\'col-12 col-md-8 col-lg-6 tomo-card tomo-card--animated p-0\'\n                + (_vm.loading ? \' tomo-loading\' : \'\')},[_c(\'h4\',{staticClass:" color-white tomo-card__title tomo-card__title--big"},[_vm._v("Resign")]),_vm._v(" "),_c(\'ul\',{staticClass:"tomo-list list-unstyled"},[_c(\'li\',{staticClass:"tomo-list__item"},[_c(\'i\',{staticClass:"tm-wallet tomo-list__icon"}),_vm._v(" "),_c(\'p\',{staticClass:"tomo-list__text"},[_c(\'span\',[_vm._v(_vm._s(_vm.coinbase))]),_vm._v(" "),_c(\'span\',[_vm._v("SDX Masternode Address")])])])]),_vm._v(" "),_c(\'b-card-footer\',{staticClass:"text-right"},[(_vm.owner !== _vm.account)?_c(\'p\',[_c(\'i\',{staticClass:"tm-notice"}),_vm._v("\\n                        You are not an owner of this Masternode.\\n                    ")]):_vm._e(),_vm._v(" "),(_vm.owner === _vm.account)?_c(\'b-button\',{directives:[{name:"b-modal",rawName:"v-b-modal.confirmResignModal",modifiers:{"confirmResignModal":true}}],attrs:{"disabled":_vm.loading || _vm.owner !== _vm.account,"variant":"secondary"},on:{"click":function($event){_vm.resignActive = true;}}},[_vm._v("Resign")]):_vm._e()],1)],1)],1)],1),_vm._v(" "),_c(\'b-modal\',{staticClass:"tomo-modal",attrs:{"id":"confirmResignModal","centered":"","title":"Do you want to resign?","ok-title":"Yes","cancel-title":"No"},on:{"ok":function($event){return _vm.resignValidation()}}},[_c(\'p\',[_vm._v("If you resign, you will be able to withdraw all your deposit after around 30 days.")])]),_vm._v(" "),_c(\'b-modal\',{ref:"resignModal",staticClass:"tomo-modal",attrs:{"centered":"","title":"Scan this QR code by TomoWallet","hide-footer":""}},[(_vm.provider === \'tomowallet\')?_c(\'div\',{staticStyle:{"text-align":"center"}},[_c(\'vue-qrcode\',{staticClass:"img-fluid text-center text-lg-right",attrs:{"value":_vm.qrCode,"options":{size: 200 }}})],1):_vm._e(),_vm._v(" "),_c(\'b-btn\',{staticClass:"mt-3",attrs:{"variant":"outline-danger","block":""},on:{"click":_vm.hideModal}},[_vm._v("Close")])],1)],1)}\nvar Resignvue_type_template_id_16a4880e_staticRenderFns = []\n\n\n// CONCATENATED MODULE: ./app/components/candidates/Resign.vue?vue&type=template&id=16a4880e&\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./app/components/candidates/Resign.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n/* harmony default export */ var Resignvue_type_script_lang_js_ = ({\n    name: \'App\',\n    components: {\n        VueQrcode: vue_qrcode_default.a\n    },\n    data() {\n        return {\n            isReady: !!this.web3,\n            account: \'\',\n            owner: \'\',\n            resignActive: false,\n            loading: false,\n            coinbase: this.$route.params.address,\n            provider: this.NetworkProvider || store_legacy_default.a.get(\'network\') || null,\n            qrCode: \'text\',\n            interval: null,\n            gasPrice: null,\n            transactionHash: \'\',\n            toastMessage: \'You have successfully resigned!\',\n            toastMessageError: \'An error occurred while retiring, please try again\'\n        };\n    },\n    computed: {},\n    watch: {},\n    updated() {},\n    created: async function () {\n        let self = this;\n        self.config = store_legacy_default.a.get(\'configMaster\') || (await self.appConfig());\n        self.chainConfig = self.config.blockchain || {};\n        self.isReady = !!self.web3;\n        self.gasPrice = await self.web3.eth.getGasPrice();\n        try {\n            if (self.isReady) {\n                self.account = store_legacy_default.a.get(\'address\') || self.$store.state.address || (await self.getAccount());\n            }\n\n            let candidate = await axios_default.a.get(`/api/candidates/${self.coinbase}`);\n            self.owner = (candidate.data.owner || \'\').toLowerCase();\n        } catch (e) {\n            console.log(e);\n        }\n    },\n    mounted() {},\n    methods: {\n        resign: async function () {\n            let self = this;\n            try {\n                if (!self.isReady) {\n                    self.$router.push({ path: \'/setting\' });\n                }\n\n                self.loading = true;\n\n                const account = ((await self.getAccount()) || \'\').toLowerCase();\n                let contract; // = await self.getTomoValidatorInstance()\n                contract = self.TomoValidator;\n                let coinbase = self.coinbase;\n                let txParams = {\n                    from: account,\n                    gasPrice: self.web3.utils.toHex(self.gasPrice),\n                    gas: self.web3.utils.toHex(self.chainConfig.gas),\n                    gasLimit: self.web3.utils.toHex(self.chainConfig.gas),\n                    chainId: self.chainConfig.networkId\n                };\n                if (self.NetworkProvider === \'ledger\' || self.NetworkProvider === \'trezor\') {\n                    let nonce = await self.web3.eth.getTransactionCount(account);\n                    // let dataTx = contract.resign.request(coinbase).params[0]\n                    let data = await contract.methods.resign(coinbase).encodeABI();\n\n                    const dataTx = {\n                        data,\n                        to: self.chainConfig.validatorAddress\n                    };\n\n                    if (self.NetworkProvider === \'trezor\') {\n                        txParams.value = self.web3.utils.toHex(0);\n                    }\n                    Object.assign(dataTx, dataTx, txParams, {\n                        nonce: self.web3.utils.toHex(nonce)\n                    });\n                    let signature = await self.signTransaction(dataTx);\n                    const txHash = await self.sendSignedTransaction(dataTx, signature);\n                    if (txHash) {\n                        self.transactionHash = txHash;\n                        let check = true;\n                        while (check) {\n                            const receipt = await self.web3.eth.getTransactionReceipt(txHash);\n                            if (receipt) {\n                                check = false;\n                                self.$toasted.show(self.toastMessage);\n                                setTimeout(() => {\n                                    self.loading = false;\n                                    if (self.transactionHash) {\n                                        self.$router.push({ path: \'/\' });\n                                    }\n                                }, 2000);\n                            }\n                        }\n                    }\n                } else {\n                    // rs = await contract.resign(coinbase, txParams)\n                    contract.methods.resign(coinbase).send(txParams).on(\'transactionHash\', async txHash => {\n                        self.transactionHash = txHash;\n                        let check = true;\n                        while (check) {\n                            const receipt = await self.web3.eth.getTransactionReceipt(txHash);\n                            if (receipt) {\n                                check = false;\n                                self.$toasted.show(self.toastMessage);\n                                setTimeout(() => {\n                                    self.loading = false;\n                                    if (self.transactionHash) {\n                                        self.$router.push({ path: \'/\' });\n                                    }\n                                }, 2000);\n                            }\n                        }\n                    }).catch(e => {\n                        console.log(e);\n                        self.loading = false;\n                        self.$toasted.show(self.toastMessageError + e, { type: \'error\' });\n                    });\n                }\n            } catch (e) {\n                self.loading = false;\n                self.$toasted.show(\'An error occurred while retiring, please try again\', {\n                    type: \'error\'\n                });\n                console.log(e);\n            }\n        },\n        hideModal() {\n            this.$refs.resignModal.hide();\n        },\n        async resignValidation() {\n            const self = this;\n            try {\n                if (self.provider === \'tomowallet\') {\n                    if (self.interval) {\n                        clearInterval(self.interval);\n                    }\n                    const data = {\n                        voter: self.account,\n                        candidate: self.coinbase,\n                        amount: self.voteValue || 0,\n                        action: \'resign\'\n                        // call api to generate qr code\n                    };const generatedMess = await axios_default.a.post(`/api/voters/generateQR`, data);\n\n                    self.id = generatedMess.data.id;\n\n                    self.qrCode = encodeURI(\'tomochain:resign?candidate=\' + self.coinbase + \'&submitURL=\' + generatedMess.data.url);\n                    self.$refs.resignModal.show();\n                    // set interval\n                    self.interval = setInterval(async () => {\n                        self.verifyScannedQR();\n                    }, 3000);\n                } else {\n                    await self.resign();\n                }\n            } catch (error) {\n                console.log(error);\n                self.$toasted.show(\'An error occurred while retiring, please try again\', {\n                    type: \'error\'\n                });\n            }\n        },\n        async verifyScannedQR() {\n            let self = this;\n            let { data } = await axios_default.a.get(\'/api/voters/getScanningResult?action=resign&id=\' + self.id);\n\n            if (!data.error) {\n                self.hideModal();\n                self.loading = true;\n                if (data.tx) {\n                    clearInterval(self.interval);\n                    let toastMessage = data.tx && data.status ? \'You have successfully resigned!\' : \'An error occurred while voting, please try again\';\n                    self.$toasted.show(toastMessage);\n                    setTimeout(() => {\n                        self.loading = false;\n                        if (data.tx) {\n                            self.$router.push({ path: \'/\' });\n                        }\n                    }, 2000);\n                }\n            }\n        }\n    }\n});\n// CONCATENATED MODULE: ./app/components/candidates/Resign.vue?vue&type=script&lang=js&\n /* harmony default export */ var candidates_Resignvue_type_script_lang_js_ = (Resignvue_type_script_lang_js_); \n// CONCATENATED MODULE: ./app/components/candidates/Resign.vue\n\n\n\n\n\n/* normalize component */\n\nvar Resign_component = Object(componentNormalizer["a" /* default */])(\n  candidates_Resignvue_type_script_lang_js_,\n  Resignvue_type_template_id_16a4880e_render,\n  Resignvue_type_template_id_16a4880e_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var Resign = (Resign_component.exports);\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./app/components/candidates/Withdraw.vue?vue&type=template&id=8484caa6&\nvar Withdrawvue_type_template_id_8484caa6_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',[_c(\'div\',{staticClass:"container"},[_c(\'div\',[_c(\'b-row\',{staticClass:"m-0",attrs:{"align-v":"center","align-h":"center"}},[_c(\'b-card\',{class:\'col-12 col-md-8 col-lg-6 tomo-card tomo-card--animated p-0\'\n                    + (_vm.loading ? \' tomo-loading\' : \'\')},[_c(\'h4\',{staticClass:" color-white tomo-card__title tomo-card__title--big"},[_vm._v("Withdrawal Confirmation")]),_vm._v(" "),_c(\'ul\',{staticClass:"tomo-list list-unstyled"},[_c(\'li\',{staticClass:"tomo-list__item"},[_c(\'i\',{staticClass:"tm-wallet tomo-list__icon"}),_vm._v(" "),_c(\'p\',{staticClass:"tomo-list__text"},[_c(\'span\',[_vm._v(_vm._s(_vm.coinbase))]),_vm._v(" "),_c(\'span\',[_vm._v("SDX Masternode Address")])])]),_vm._v(" "),_c(\'li\',{staticClass:"tomo-list__item"},[_c(\'i\',{staticClass:"tm-tomo2 tomo-list__icon"}),_vm._v(" "),_c(\'p\',{staticClass:"tomo-list__text"},[_c(\'span\',[_vm._v(" "+_vm._s(_vm.formatCurrencySymbol(_vm.formatNumber(_vm.capacity))))]),_vm._v(" "),_c(\'span\',[_vm._v("Capacity")])])]),_vm._v(" "),_c(\'li\',{staticClass:"tomo-list__item"},[_c(\'i\',{staticClass:"tm-tomo2 tomo-list__icon"}),_vm._v(" "),_c(\'p\',{staticClass:"tomo-list__text"},[_c(\'span\',[_vm._v(" "+_vm._s(_vm.blockNumber))]),_vm._v(" "),_c(\'span\',[_vm._v("Block Number")])])])]),_vm._v(" "),_c(\'div\',{staticStyle:{"margin-top":"20px"}},[_c(\'div\',{staticClass:"wrapper"},[_c(\'div\',[_c(\'div\',{staticClass:"pull-right",staticStyle:{"margin-right":"-7px","float":"right"}})]),_vm._v(" "),_c(\'div\',[(_vm.provider === \'tomowallet\')?_c(\'div\',{staticStyle:{"text-align":"center","margin-top":"10px"}},[_c(\'vue-qrcode\',{staticClass:"img-fluid text-center text-lg-right",attrs:{"value":_vm.qrCode,"options":{size: 250 }}})],1):_vm._e()])])]),_vm._v(" "),_c(\'b-card-footer\',{staticClass:"mt-3 text-right"},[_c(\'b-button\',{attrs:{"disabled":_vm.loading,"to":\'/setting\',"variant":"secondary"}},[_vm._v("Back")]),_vm._v(" "),(_vm.provider !== \'tomowallet\')?_c(\'button\',{staticClass:"btn btn-primary",attrs:{"variant":"primary"},on:{"click":function($event){return _vm.withdraw(_vm.blockNumber, _vm.index)}}},[_vm._v("Withdraw")]):_vm._e()],1)],1)],1)],1)]),_vm._v(" "),_c(\'b-modal\',{staticClass:"tomo-modal",attrs:{"id":"resignModal","centered":"","title":"Do you want to withdraw?","ok-title":"Yes","cancel-title":"No"},on:{"ok":function($event){return _vm.withdraw()}}},[_c(\'p\',[_vm._v("If you withdraw, you will receive all your deposit.")])])],1)}\nvar Withdrawvue_type_template_id_8484caa6_staticRenderFns = []\n\n\n// CONCATENATED MODULE: ./app/components/candidates/Withdraw.vue?vue&type=template&id=8484caa6&\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./app/components/candidates/Withdraw.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\n/* harmony default export */ var Withdrawvue_type_script_lang_js_ = ({\n    name: \'App\',\n    components: {\n        VueQrcode: vue_qrcode_default.a\n    },\n    data() {\n        return {\n            isReady: !!this.web3,\n            withdrawActive: false,\n            coinbase: this.$route.params.address,\n            blockNumber: this.$route.params.blockNumber,\n            capacity: this.$route.params.capacity || 0,\n            loading: false,\n            index: this.$route.params.index,\n            interval: null,\n            qrCode: \'text\',\n            processing: true,\n            id: \'\',\n            provider: this.Networkprovider || store_legacy_default.a.get(\'network\') || null,\n            gasPrice: null,\n            transactionHash: \'\',\n            toastMessage: \'You have successfully withdrawn!\',\n            toastMessageError: \'An error occurred while withdrawing, please try again\'\n        };\n    },\n    computed: {},\n    watch: {},\n    async updated() {\n        if (!this.coinbase) {\n            if (this.interval) {\n                clearInterval(this.interval);\n            }\n            self.$router.push({ path: \'/\' });\n        }\n    },\n    created: function () {},\n    beforeDestroy() {\n        if (this.interval) {\n            clearInterval(this.interval);\n        }\n    },\n    destroyed() {},\n    async mounted() {\n        const self = this;\n        self.config = store_legacy_default.a.get(\'configMaster\') || (await self.appConfig());\n        self.chainConfig = self.config.blockchain || {};\n        self.isReady = !!this.web3;\n        if (!self.coinbase) {\n            self.$router.push({ path: \'/\' });\n        } else {\n            self.gasPrice = await self.web3.eth.getGasPrice();\n            let amount = new bignumber_default.a(self.capacity.replace(/,/g, \'\')).toString(10);\n            const data = {\n                action: \'withdraw\',\n                amount,\n                voter: self.coinbase,\n                candidate: \'no-candidate\'\n                // call api to generate qr code\n            };const generatedMess = await axios_default.a.post(`/api/voters/generateQR`, data);\n\n            self.id = generatedMess.data.id;\n\n            self.qrCode = encodeURI(\'tomochain:withdraw?amount=\' + amount + \'&\' + \'block=\' + self.blockNumber + \'&index=\' + self.index + \'&submitURL=\' + generatedMess.data.url);\n\n            if (self.processing && generatedMess.data && self.provider === \'tomowallet\') {\n                self.interval = setInterval(async () => {\n                    await this.verifyScannedQR();\n                }, 3000);\n            }\n        }\n    },\n    methods: {\n        withdraw: async function (blockNumber, index) {\n            let self = this;\n            let contract; // = await self.getTomoValidatorInstance()\n            contract = self.TomoValidator;\n            const account = ((await self.getAccount()) || \'\').toLowerCase();\n            self.loading = true;\n            try {\n                // console.log(\'==>\', blockNumber, index)\n                let txParams = {\n                    from: account,\n                    gasPrice: self.web3.utils.toHex(self.gasPrice),\n                    gas: self.web3.utils.toHex(self.chainConfig.gas),\n                    gasLimit: self.web3.utils.toHex(self.chainConfig.gas),\n                    chainId: self.chainConfig.networkId\n                };\n                if (self.NetworkProvider === \'ledger\' || self.NetworkProvider === \'trezor\') {\n                    let nonce = await self.web3.eth.getTransactionCount(account);\n                    // let dataTx = contract.withdraw.request(String(blockNumber), String(index)).params[0]\n                    const data = await contract.methods.withdraw(blockNumber, index).encodeABI();\n                    const dataTx = {\n                        data,\n                        to: self.chainConfig.validatorAddress\n                    };\n                    if (self.NetworkProvider === \'trezor\') {\n                        txParams.value = self.web3.utils.toHex(0);\n                    }\n                    Object.assign(dataTx, dataTx, txParams, {\n                        nonce: self.web3.utils.toHex(nonce)\n                    });\n                    let signature = await self.signTransaction(dataTx);\n                    const txHash = await self.sendSignedTransaction(dataTx, signature);\n                    if (txHash) {\n                        self.transactionHash = txHash;\n                        let check = true;\n                        while (check) {\n                            const receipt = await self.web3.eth.getTransactionReceipt(txHash);\n                            if (receipt && receipt.status) {\n                                check = false;\n                                self.$toasted.show(self.toastMessage);\n                                setTimeout(() => {\n                                    self.loading = false;\n                                    if (self.transactionHash) {\n                                        self.$router.push({ path: `/setting` });\n                                    }\n                                }, 2000);\n                            }\n                        }\n                    }\n                } else {\n                    // wd = await contract.withdraw(String(blockNumber), String(index), txParams)\n                    contract.methods.withdraw(blockNumber, index).send(txParams).on(\'transactionHash\', async txHash => {\n                        self.transactionHash = txHash;\n                        let check = true;\n                        while (check) {\n                            const receipt = await self.web3.eth.getTransactionReceipt(txHash);\n                            if (receipt) {\n                                check = false;\n                                self.$toasted.show(self.toastMessage);\n                                setTimeout(() => {\n                                    self.loading = false;\n                                    if (self.transactionHash) {\n                                        self.$router.push({ path: `/setting` });\n                                    }\n                                }, 2000);\n                            }\n                        }\n                    }).catch(e => {\n                        console.log(e);\n                        self.loading = false;\n                        self.$toasted.show(self.toastMessageError + e, { type: \'error\' });\n                    });\n                }\n            } catch (e) {\n                console.log(e);\n                self.loading = false;\n                self.$toasted.show(\'An error occurred while withdrawing, please try again\', {\n                    type: \'error\'\n                });\n            }\n        },\n        onChangeWithdraw(event) {\n            const checking = event.target.checked;\n            if (checking) {\n                this.interval = setInterval(async () => {\n                    await this.verifyScannedQR();\n                }, 3000);\n            } else {\n                if (this.interval) {\n                    clearInterval(this.interval);\n                }\n            }\n        },\n        async verifyScannedQR() {\n            let self = this;\n            let { data } = await axios_default.a.get(\'/api/voters/getScanningResult?action=withdraw&id=\' + self.id);\n\n            if (!data.error) {\n                self.loading = true;\n                if (data.tx) {\n                    clearInterval(self.interval);\n                    let toastMessage = data.tx && data.status ? \'You have successfully withdrawn!\' : \'An error occurred while voting, please try again\';\n                    self.$toasted.show(toastMessage);\n                    setTimeout(() => {\n                        if (data.tx) {\n                            self.loading = false;\n                            self.processing = false;\n                            self.$router.push({ path: `/setting` });\n                        }\n                    }, 3000);\n                }\n            }\n        }\n    }\n});\n// CONCATENATED MODULE: ./app/components/candidates/Withdraw.vue?vue&type=script&lang=js&\n /* harmony default export */ var candidates_Withdrawvue_type_script_lang_js_ = (Withdrawvue_type_script_lang_js_); \n// CONCATENATED MODULE: ./app/components/candidates/Withdraw.vue\n\n\n\n\n\n/* normalize component */\n\nvar Withdraw_component = Object(componentNormalizer["a" /* default */])(\n  candidates_Withdrawvue_type_script_lang_js_,\n  Withdrawvue_type_template_id_8484caa6_render,\n  Withdrawvue_type_template_id_8484caa6_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var Withdraw = (Withdraw_component.exports);\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./app/components/candidates/Update.vue?vue&type=template&id=4bad20c0&\nvar Updatevue_type_template_id_4bad20c0_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',{staticClass:"container"},[(_vm.step === 1)?_c(\'b-row\',{staticClass:"m-0",attrs:{"align-v":"center","align-h":"center"}},[_c(\'b-card\',{class:\'col-12 col-md-8 col-lg-6 tomo-card tomo-card--lighter p-0\'\n            + (_vm.loading ? \' tomo-loading\' : \'\')},[_c(\'h4\',{staticClass:" color-white tomo-card__title tomo-card__title--big"},[_vm._v("Update Masternode Information")]),_vm._v(" "),_c(\'b-form\',{staticClass:"tomo-form tomo-form--vote",attrs:{"novalidate":""},on:{"submit":function($event){$event.preventDefault();return _vm.validate()}}},[_c(\'b-form-group\',{attrs:{"label":"Name","label-for":"name-value"}},[_c(\'b-form-input\',{attrs:{"name":"name-value"},model:{value:(_vm.name),callback:function ($$v) {_vm.name=$$v},expression:"name"}}),_vm._v(" "),(_vm.$v.name.$dirty && !_vm.$v.name.required)?_c(\'span\',{staticClass:"text-danger"},[_vm._v("Name is required")]):_vm._e(),_vm._v(" "),(_vm.$v.name.$dirty && (!_vm.$v.name.minLength || !_vm.$v.name.maxLength))?_c(\'span\',{staticClass:"text-danger"},[_vm._v("Name must be 3 - 30 chars long")]):_vm._e()],1),_vm._v(" "),_c(\'b-form-group\',{attrs:{"label":"Hardware","label-for":"hardware-value"}},[_c(\'b-form-input\',{attrs:{"name":"hardware-value"},model:{value:(_vm.hardware),callback:function ($$v) {_vm.hardware=$$v},expression:"hardware"}}),_vm._v(" "),(_vm.$v.hardware.$dirty && (!_vm.$v.hardware.minLength || !_vm.$v.hardware.maxLength))?_c(\'span\',{staticClass:"text-danger"},[_vm._v("Hardware must be 3 - 30 chars long")]):_vm._e()],1),_vm._v(" "),_c(\'div\',{staticClass:"row"},[_c(\'b-form-group\',{staticClass:"col-md-6",attrs:{"label":"Data Center Name","label-for":"dcName-value"}},[_c(\'b-form-input\',{attrs:{"name":"dcName-value"},model:{value:(_vm.dcName),callback:function ($$v) {_vm.dcName=$$v},expression:"dcName"}}),_vm._v(" "),(_vm.$v.dcName.$dirty && (!_vm.$v.dcName.minLength || !_vm.$v.dcName.maxLength))?_c(\'span\',{staticClass:"text-danger"},[_vm._v("Data Center Name must be 2 - 30 chars long")]):_vm._e()],1),_vm._v(" "),_c(\'b-form-group\',{staticClass:"col-md-6",attrs:{"label":"Data Center Location","label-for":"dcLocation-value"}},[_c(\'b-form-input\',{attrs:{"name":"dcLocation-value"},model:{value:(_vm.dcLocation),callback:function ($$v) {_vm.dcLocation=$$v},expression:"dcLocation"}}),_vm._v(" "),(_vm.$v.dcLocation.$dirty && (!_vm.$v.dcLocation.minLength || !_vm.$v.dcLocation.maxLength))?_c(\'span\',{staticClass:"text-danger"},[_vm._v("Data Canter Location must be 2 - 30 chars long")]):_vm._e()],1)],1),_vm._v(" "),_c(\'div\',{staticClass:"row"},[_c(\'b-form-group\',{staticClass:"col-md-6",attrs:{"label":"Website","label-for":"website-value"}},[_c(\'b-form-input\',{attrs:{"name":"website-value","placeholder":"https://example.com"},model:{value:(_vm.website),callback:function ($$v) {_vm.website=$$v},expression:"website"}}),_vm._v(" "),(_vm.$v.website.$dirty && !_vm.$v.website.url)?_c(\'span\',{staticClass:"text-danger"},[_vm._v("Not a url")]):_vm._e()],1),_vm._v(" "),_c(\'b-form-group\',{staticClass:"col-md-6",attrs:{"label":"Telegram","label-for":"telegram-value"}},[_c(\'b-form-input\',{attrs:{"name":"telegram-value","placeholder":"https://t.me/example"},model:{value:(_vm.telegram),callback:function ($$v) {_vm.telegram=$$v},expression:"telegram"}}),_vm._v(" "),(_vm.$v.telegram.$dirty && !_vm.$v.telegram.url)?_c(\'span\',{staticClass:"text-danger"},[_vm._v("Not a url")]):_vm._e()],1)],1),_vm._v(" "),_c(\'div\',{staticClass:"buttons text-right"},[_c(\'b-button\',{attrs:{"type":"button","variant":"secondary"},on:{"click":function($event){return _vm.$router.go(-1)}}},[_vm._v("Cancel")]),_vm._v(" "),_c(\'b-button\',{attrs:{"type":"submit","variant":"primary"}},[_vm._v("Next")])],1)],1)],1)],1):_vm._e(),_vm._v(" "),(_vm.step === 2)?_c(\'b-row\',{staticClass:"m-0",attrs:{"align-v":"center","align-h":"center"}},[_c(\'b-card\',{class:\'col-12 col-md-8 col-lg-6 tomo-card tomo-card--lighter p-0\'\n            + (_vm.loading ? \' tomo-loading\' : \'\')},[_c(\'h4\',{staticClass:" color-white tomo-card__title tomo-card__title--big"},[_vm._v("Confirmation")]),_vm._v(" "),_c(\'div\',[_c(\'div\',{staticClass:"wrapper"},[_c(\'div\',{attrs:{"id":"one"}},[_c(\'div\',[_c(\'textarea\',{staticClass:"sign-message",staticStyle:{"width":"100%"},attrs:{"type":"text","readonly":"","cols":"100","rows":"6"},domProps:{"value":_vm.candidateNewInfor}})])]),_vm._v(" "),_c(\'div\',{staticStyle:{"margin-top":"20px"}},[(_vm.provider === \'tomowallet\')?_c(\'div\',{staticStyle:{"text-align":"center"}},[_c(\'vue-qrcode\',{staticClass:"img-fluid text-center text-lg-right",attrs:{"value":_vm.qrCode,"options":{size: 200 },"tag":"img"}}),_vm._v(" "),_c(\'div\',{staticClass:"mt-1"},[_c(\'span\',{staticClass:"text-danger"},[_c(\'b\',[_vm._v(_vm._s(_vm.signHashError))])])])],1):_vm._e()])]),_vm._v(" "),_c(\'div\',{staticClass:"buttons text-right",staticStyle:{"margin-top":"10px"}},[_c(\'b-button\',{attrs:{"type":"button","variant":"secondary"},on:{"click":_vm.backStep}},[_vm._v("Back")]),_vm._v(" "),(_vm.provider !== \'tomowallet\')?_c(\'button\',{staticClass:"btn btn-primary",attrs:{"variant":"primary"},on:{"click":_vm.update}},[_vm._v("Submit")]):_vm._e()],1)])])],1):_vm._e()],1)}\nvar Updatevue_type_template_id_4bad20c0_staticRenderFns = []\n\n\n// CONCATENATED MODULE: ./app/components/candidates/Update.vue?vue&type=template&id=4bad20c0&\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./app/components/candidates/Update.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// import Web3 from \'web3\'\n\n\n\n\n\n/* harmony default export */ var Updatevue_type_script_lang_js_ = ({\n    name: \'App\',\n    components: {\n        VueQrcode: vue_qrcode_default.a\n    },\n    mixins: [lib["validationMixin"]],\n    data() {\n        return {\n            isReady: !!this.web3,\n            address: this.$route.params.address.toLowerCase(),\n            name: \'\',\n            hardware: \'\',\n            dcName: \'\',\n            dcLocation: \'\',\n            loading: false,\n            step: 1,\n            provider: this.NetworkProvider || store_legacy_default.a.get(\'network\') || null,\n            qrCode: \'text\',\n            message: \'\',\n            signHash: \'\',\n            signHashError: \'\',\n            id: \'\',\n            interval: null,\n            account: \'\',\n            website: \'\',\n            telegram: \'\'\n        };\n    },\n    validations: {\n        name: {\n            required: validators["required"],\n            maxLength: Object(validators["maxLength"])(30),\n            minLength: Object(validators["minLength"])(3)\n        },\n        hardware: {\n            maxLength: Object(validators["maxLength"])(30),\n            minLength: Object(validators["minLength"])(3)\n        },\n        dcName: {\n            maxLength: Object(validators["maxLength"])(30),\n            minLength: Object(validators["minLength"])(2)\n        },\n        dcLocation: {\n            maxLength: Object(validators["maxLength"])(30),\n            minLength: Object(validators["minLength"])(2)\n        },\n        website: { url: validators["url"] },\n        telegram: { url: validators["url"] }\n    },\n    beforeDestroy() {\n        if (this.interval) {\n            clearInterval(this.interval);\n        }\n    },\n    async created() {\n        let self = this;\n        self.isReady = !!self.web3;\n        try {\n            if (!self.isReady) {\n                self.$router.push({ path: \'/setting\' });\n                throw Error(\'Web3 is not properly detected.\');\n            }\n            self.account = store_legacy_default.a.get(\'address\') || self.$store.state.address || (await self.getAccount());\n            const { data } = await axios_default.a.get(`/api/candidates/${self.address}`);\n            if (data) {\n                if (data.owner !== self.account) {\n                    self.$toasted.show(`You need log the owner of masternode account in before updating`);\n                    setTimeout(() => {\n                        self.$router.push({ path: \'/setting\' });\n                    }, 1000);\n                } else {\n                    self.name = data.name ? data.name : \'Anonymous\';\n                    self.hardware = data.hardware || \'N/A\';\n                    self.dcName = (data.dataCenter || {}).name || \'N/A\';\n                    self.dcLocation = (data.dataCenter || {}).location || \'N/A\';\n                    self.website = (data.socials || {}).website || \'\';\n                    self.telegram = (data.socials || {}).telegram || \'\';\n                }\n            }\n        } catch (e) {\n            console.log(e);\n            self.$toasted.show(e, {\n                type: \'error\'\n            });\n        }\n    },\n    methods: {\n        getValidationClass: function (fieldName) {\n            const field = this.$v[fieldName];\n\n            if (field) {\n                return {\n                    \'is-invalid\': field.$error\n                };\n            }\n        },\n        validate: function () {\n            this.$v.$touch();\n\n            if (!this.$v.$invalid) {\n                this.nextStep();\n                // this.update()\n            }\n        },\n        update: async function () {\n            let self = this;\n            try {\n                self.loading = true;\n                switch (self.provider) {\n                    case \'custom\':\n                        self.signHash = await self.web3.eth.sign(self.message, self.account);\n                        break;\n                    case \'metamask\':\n                    case \'pantograph\':\n                        self.signHash = await self.web3.eth.personal.sign(self.message, self.account, \'\');\n                        break;\n                    case \'trezor\':\n                    case \'ledger\':\n                        self.signHash = await self.signMessage(self.message);\n                        break;\n                    default:\n                        self.loading = false;\n                        self.$toasted.show(`An error occurred while updating.`, {\n                            type: \'error\'\n                        });\n                        break;\n                }\n                // calling update api\n                await self.updateCandidateInfo();\n            } catch (e) {\n                console.log(e);\n                self.loading = false;\n                self.$toasted.show(`An error occurred while updating.`, {\n                    type: \'error\'\n                });\n            }\n        },\n        async nextStep() {\n            const self = this;\n            self.candidateNewInfor = \'Name: \' + self.name + \'\\nHardware: \' + self.hardware + \'\\nData Center Name: \' + self.dcName + \'\\nData Center Location: \' + self.dcLocation + \'\\nWebsite: \' + self.website + \'\\nTelegram: \' + self.telegram;\n            if (self.provider !== \'custom\') {\n                const { data } = await axios_default.a.post(\'/api/candidates/\' + self.address + \'/generateMessage\', {\n                    account: self.account\n                });\n\n                self.message = data.message;\n                self.id = data.id;\n                self.qrCode = encodeURI(\'tomochain:sign?message=\' + self.message + \'&submitURL=\' + data.url);\n            }\n            self.step++;\n            if (self.step === 2 && self.provider === \'tomowallet\') {\n                self.interval = setInterval(async () => {\n                    await this.verifyScannedQR();\n                }, 3000);\n            }\n        },\n        backStep() {\n            this.step--;\n        },\n        copyTextArea() {\n            this.$refs.text.select();\n            document.execCommand(\'copy\');\n        },\n        async updateCandidateInfo() {\n            let self = this;\n            // calling update api\n            try {\n                const body = {\n                    candidate: self.address,\n                    name: self.name,\n                    message: self.message,\n                    signedMessage: self.signHash\n                };\n                body.hardware = self.hardware || \'\';\n                if (self.dcName !== \'\') {\n                    body.dcName = self.dcName;\n                }\n                if (self.dcLocation !== \'\') {\n                    body.dcLocation = self.dcLocation;\n                }\n\n                body.website = self.website;\n                body.telegram = self.telegram;\n\n                const { data } = await axios_default.a.put(\'/api/candidates/update\', body);\n                if (!data.error) {\n                    self.loading = true;\n                    setTimeout(() => {\n                        self.loading = false;\n                        self.signHashError = \'\';\n                        self.signHash = \'\';\n                        self.$router.push({ path: `/candidate/${self.address}` }, () => {\n                            self.$toasted.show(\'Masternode information updated successfully \');\n                        });\n                    }, 3000);\n                } else {\n                    self.loading = false;\n                    self.signHashError = \'\';\n                    self.signHash = \'\';\n                    if (self.provider === \'tomowallet\') {\n                        self.signHashError = data.error.message;\n                        return false;\n                    } else {\n                        self.signHashError = \'\';\n                        self.$toasted.show(data.error.message, {\n                            type: \'error\'\n                        });\n                    }\n                }\n            } catch (e) {\n                console.log(e);\n                self.loading = false;\n                self.$toasted.show(`An error occurred while updating.`, {\n                    type: \'error\'\n                });\n            }\n        },\n        async verifyScannedQR() {\n            const self = this;\n            try {\n                // 1. Get msg, signature\n                const signData = await axios_default.a.get(\'/api/candidates/\' + self.address + \'/getSignature?id=\' + self.id);\n                if (!signData.data.error) {\n                    clearInterval(self.interval);\n                    self.signHash = signData.data.signature;\n                    // 2. Then call update func\n                    await self.updateCandidateInfo();\n                }\n            } catch (e) {\n                console.log(e);\n                self.$toasted.show(`An error occurred while updating.`, {\n                    type: \'error\'\n                });\n            }\n        }\n    }\n});\n// CONCATENATED MODULE: ./app/components/candidates/Update.vue?vue&type=script&lang=js&\n /* harmony default export */ var candidates_Updatevue_type_script_lang_js_ = (Updatevue_type_script_lang_js_); \n// CONCATENATED MODULE: ./app/components/candidates/Update.vue\n\n\n\n\n\n/* normalize component */\n\nvar Update_component = Object(componentNormalizer["a" /* default */])(\n  candidates_Updatevue_type_script_lang_js_,\n  Updatevue_type_template_id_4bad20c0_render,\n  Updatevue_type_template_id_4bad20c0_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var Update = (Update_component.exports);\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./app/components/voters/View.vue?vue&type=template&id=54e8eeb7&\nvar Viewvue_type_template_id_54e8eeb7_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',[_c(\'div\',{staticClass:"container section section--voter"},[_c(\'div\',{staticClass:"row"},[_c(\'div\',{staticClass:"col-12"},[_c(\'div\',{staticClass:"section-title"},[_c(\'i\',{staticClass:"tm-arrow-up color-pink"}),_vm._v(" "),_c(\'span\',[_vm._v("Holder")]),_vm._v(" "),_c(\'span\',{staticClass:"text-truncate section-title__description"},[_vm._v(_vm._s(_vm.voter))])])])]),_vm._v(" "),_c(\'div\',{staticClass:"row row-grid"},[(_vm.isReady)?_c(\'div\',{staticClass:"col-12 tomo-info"},[_vm._m(0),_vm._v(" "),_c(\'p\',{staticClass:"tomo-info__description",attrs:{"id":"tomo-info__description--balance"}},[_vm._v("\\n                    "+_vm._s(_vm.formatCurrencySymbol(_vm.formatBigNumber(_vm.balance, 3)))+"\\n                    "),(_vm.checkLongNumber(_vm.balance))?_c(\'b-tooltip\',{ref:"tooltip",attrs:{"target":"tomo-info__description--balance"}},[_vm._v("\\n                        "+_vm._s(_vm.formatCurrencySymbol(_vm.formatBigNumber(_vm.balance, 6)))+"\\n                    ")]):_vm._e()],1)]):_vm._e(),_vm._v(" "),_c(\'div\',{staticClass:"col-12 tomo-info"},[_vm._m(1),_vm._v(" "),_c(\'p\',{staticClass:"tomo-info__description",attrs:{"id":"tomo-info__description--voted"}},[_vm._v("\\n                    "+_vm._s(_vm.formatCurrencySymbol(_vm.formatNumber(_vm.totalVoted)))+"\\n                    "),(_vm.checkLongNumber(_vm.totalVoted))?_c(\'b-tooltip\',{ref:"tooltip",attrs:{"target":"tomo-info__description--voted"}},[_vm._v("\\n                        "+_vm._s(_vm.formatCurrencySymbol(_vm.formatBigNumber(_vm.totalVoted, 6)))+"\\n                    ")]):_vm._e()],1)])])]),_vm._v(" "),_c(\'div\',{class:\'container section section--candiates mt-5\'\n        + (_vm.loading ? \' tomo-loading\' : \'\')},[_vm._m(2),_vm._v(" "),_c(\'b-table\',{class:("tomo-table tomo-table--voted" + (_vm.loading ? \' loading\' : \'\')),attrs:{"items":_vm.candidates,"fields":_vm.candidateFields,"per-page":_vm.perPage,"sort-by":_vm.sortBy,"sort-desc":_vm.sortDesc,"show-empty":true,"empty-text":"There are no masternodes to show","stacked":"md"},on:{"update:sortBy":function($event){_vm.sortBy=$event},"update:sort-by":function($event){_vm.sortBy=$event},"update:sortDesc":function($event){_vm.sortDesc=$event},"update:sort-desc":function($event){_vm.sortDesc=$event},"sort-changed":_vm.sortingChangeCandidate},scopedSlots:_vm._u([{key:"index",fn:function(data){return [_vm._v(_vm._s(data.index + 1)+"\\n            ")]}},{key:"address",fn:function(data){return [_c(\'router-link\',{staticClass:"text-truncate",attrs:{"to":\'/candidate/\' + data.item.address}},[_vm._v("\\n                    "+_vm._s(data.item.address)+"\\n                ")])]}},{key:"capacity",fn:function(data){return [_vm._v("\\n                "+_vm._s(isNaN(data.item.capacity) ? \'---\' : _vm.formatCurrencySymbol(data.item.capacity))+"\\n                "),(data.item.owner == _vm.voter)?_c(\'span\',{attrs:{"id":("mnowner__" + (data.index))}},[_vm._v("*")]):_vm._e(),_vm._v(" "),_c(\'b-tooltip\',{attrs:{"target":("mnowner__" + (data.index))}},[_vm._v("\\n                    This Staker owns this node\\n                ")])]}},{key:"totalCapacity",fn:function(data){return [_vm._v(_vm._s(_vm.formatCurrencySymbol(_vm.formatBigNumber(data.item.totalCapacity, 3)))+"\\n            ")]}}])}),_vm._v(" "),(_vm.totalRows > 0 && _vm.totalRows > _vm.perPage)?_c(\'b-pagination\',{staticClass:"tomo-pagination",attrs:{"total-rows":_vm.totalRows,"per-page":_vm.perPage,"align":"center"},on:{"change":_vm.candidatePageChange},model:{value:(_vm.currentPage),callback:function ($$v) {_vm.currentPage=$$v},expression:"currentPage"}}):_vm._e()],1),_vm._v(" "),_c(\'div\',{class:\'container section section--voterrewards\'\n        + (_vm.rewardLoading ? \' tomo-loading\' : \'\')},[_vm._m(3),_vm._v(" "),_c(\'b-table\',{class:("tomo-table tomo-table--voterrewards" + (_vm.rewardLoading ? \' loading\' : \'\')),attrs:{"items":_vm.voterRewards,"fields":_vm.voterRewardsFields,"sort-by":_vm.voterRewardsSortBy,"sort-desc":_vm.voterRewardsSortDesc,"per-page":_vm.voterRewardsPerPage,"show-empty":true,"empty-text":"There are no rewards to show","stacked":"md"},on:{"update:sortBy":function($event){_vm.voterRewardsSortBy=$event},"update:sort-by":function($event){_vm.voterRewardsSortBy=$event},"update:sortDesc":function($event){_vm.voterRewardsSortDesc=$event},"update:sort-desc":function($event){_vm.voterRewardsSortDesc=$event}},scopedSlots:_vm._u([{key:"id",fn:function(data){return [_vm._v(_vm._s(data.index + 1)+"\\n            ")]}},{key:"checkpoint",fn:function(data){return [_vm._v(_vm._s(data.item.checkpoint)+"\\n            ")]}},{key:"reward",fn:function(data){return [_vm._v("\\n                "+_vm._s(_vm.formatCurrencySymbol(_vm.formatNumber(data.item.reward)))+"\\n            ")]}},{key:"candidateName",fn:function(data){return [_c(\'router-link\',{staticClass:"text-truncate",attrs:{"to":\'/candidate/\' + data.item.candidate}},[_vm._v("\\n                    "+_vm._s(data.item.candidateName)+"\\n                ")])]}},{key:"createdAt",fn:function(data){return [_c(\'span\',{attrs:{"id":("timestamp__" + (data.index))}},[_vm._v(_vm._s(data.item.createdAt))]),_vm._v(" "),_c(\'b-tooltip\',{attrs:{"target":("timestamp__" + (data.index))}},[_vm._v("\\n                    "+_vm._s(data.item.dateTooltip)+"\\n                ")])]}}])}),_vm._v(" "),(_vm.voterRewardsTotalRows > 0 && _vm.voterRewardsTotalRows > _vm.voterRewardsPerPage)?_c(\'b-pagination\',{staticClass:"tomo-pagination",attrs:{"total-rows":_vm.voterRewardsTotalRows,"per-page":_vm.voterRewardsPerPage,"align":"center"},on:{"change":_vm.rewardPageChange},model:{value:(_vm.voterRewardsCurrentPage),callback:function ($$v) {_vm.voterRewardsCurrentPage=$$v},expression:"voterRewardsCurrentPage"}}):_vm._e()],1),_vm._v(" "),_c(\'div\',{class:\'container section section--txs\'\n        + (_vm.txLoading ? \' tomo-loading\' : \'\')},[_vm._m(4),_vm._v(" "),_c(\'b-table\',{class:("tomo-table tomo-table--transactions-voter" + (_vm.txLoading ? \' loading\' : \'\')),attrs:{"items":_vm.transactions,"fields":_vm.txFields,"per-page":_vm.txPerPage,"show-empty":true,"empty-text":"There are no transactions to show","stacked":"md"},on:{"sort-changed":_vm.sortingChangeTxes},scopedSlots:_vm._u([{key:"id",fn:function(data){return [_vm._v(_vm._s(data.item.id)+"\\n            ")]}},{key:"candidate",fn:function(data){return [_c(\'router-link\',{attrs:{"to":\'/candidate/\' + data.item.candidate}},[_vm._v("\\n                    "+_vm._s(_vm.truncate(data.item.candidate, 20))+"\\n                ")])]}},{key:"event",fn:function(data){return [_c(\'span\',{class:\'fw-600 \' + _vm.getEventClass(data.item.event)},[_vm._v(_vm._s(data.item.event))])]}},{key:"capacity",fn:function(data){return [_vm._v("\\n                "+_vm._s(isNaN(data.item.cap) ? \'---\' : _vm.formatCurrencySymbol(data.item.cap))+"\\n            ")]}},{key:"candidateCap",fn:function(data){return [_vm._v("\\n                "+_vm._s(isNaN(data.item.candidateCap) ? \'---\' : _vm.formatCurrencySymbol(data.item.candidateCap))+"\\n            ")]}},{key:"tx",fn:function(data){return [_c(\'a\',{directives:[{name:"b-tooltip",rawName:"v-b-tooltip.hover.right",modifiers:{"hover":true,"right":true}}],attrs:{"href":((_vm.config.explorerUrl) + "/tx/" + (data.item.tx)),"title":"View on DexScan","target":"_blank"}},[_c(\'i\',{staticClass:"tm-eye"}),_vm._v(" "),_c(\'span\',[_vm._v("View on DexScan")])])]}}])}),_vm._v(" "),(_vm.txTotalRows > 0 && _vm.txTotalRows > _vm.txPerPage)?_c(\'b-pagination\',{staticClass:"tomo-pagination",attrs:{"total-rows":_vm.txTotalRows,"per-page":_vm.txPerPage,"align":"center"},on:{"change":_vm.txPageChange},model:{value:(_vm.txCurrentPage),callback:function ($$v) {_vm.txCurrentPage=$$v},expression:"txCurrentPage"}}):_vm._e()],1)])}\nvar Viewvue_type_template_id_54e8eeb7_staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',{staticClass:"tomo-info__title"},[_c(\'i\',{staticClass:"tm-dot tomo-info__icon"}),_vm._v(" "),_c(\'span\',{staticClass:"tomo-info__text"},[_vm._v("Balance")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',{staticClass:"tomo-info__title"},[_c(\'i\',{staticClass:"tm-dot tomo-info__icon"}),_vm._v(" "),_c(\'span\',{staticClass:"tomo-info__text"},[_vm._v("Total voted")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',{staticClass:"row"},[_c(\'div\',{staticClass:"col-12"},[_c(\'div\',{staticClass:"section-title"},[_c(\'i\',{staticClass:"tm-flag color-yellow"}),_vm._v(" "),_c(\'span\',[_vm._v("Masternodes")]),_vm._v(" "),_c(\'span\',{staticClass:"text-truncate section-title__description"},[_vm._v("\\n                        Masternodes this holder is staked in")])])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',{staticClass:"row"},[_c(\'div\',{staticClass:"col-12"},[_c(\'h3\',{staticClass:"section-title"},[_c(\'i\',{staticClass:"tm-gift color-purple"}),_vm._v(" "),_c(\'span\',[_vm._v("Staker Rewards")]),_vm._v(" "),_c(\'span\',{staticClass:"text-truncate section-title__description"},[_vm._v("\\n                        All Reward for Staker")])])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',{staticClass:"row"},[_c(\'div\',{staticClass:"col-12"},[_c(\'h3\',{staticClass:"section-title"},[_c(\'i\',{staticClass:"tm-time color-purple"}),_vm._v(" "),_c(\'span\',[_vm._v("Transactions")]),_vm._v(" "),_c(\'span\',{staticClass:"text-truncate section-title__description"},[_vm._v("\\n                        All transactions of this holder")])])])])}]\n\n\n// CONCATENATED MODULE: ./app/components/voters/View.vue?vue&type=template&id=54e8eeb7&\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./app/components/voters/View.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\n\n/* harmony default export */ var voters_Viewvue_type_script_lang_js_ = ({\n    name: \'App\',\n    metaInfo: {\n        title: \'Staker Details | SdxMaster\',\n        meta: [{ name: \'description\', content: \'Staking history, Reward history, Masternode list, Transaction list. You can use mobile, desktop, hardware wallet - ledger nano, trezor to stake TomoChain\' // eslint-disable-line\n        }]\n    },\n    data() {\n        return {\n            candidateFields: [{\n                key: \'address\',\n                label: \'Address\',\n                sortable: false\n            }, {\n                key: \'name\',\n                label: \'Name\',\n                sortable: false\n            }, {\n                key: \'status\',\n                label: \'Status\',\n                sortable: false\n            }, {\n                key: \'status\',\n                label: \'Status\',\n                sortable: false\n            }, {\n                key: \'capacity\',\n                label: \'Amount Staked\',\n                sortable: true\n            }, {\n                key: \'totalCapacity\',\n                label: \'Capacity\',\n                sortable: true\n            }],\n            sortBy: \'capacity\',\n            sortDesc: true,\n            isReady: !!this.web3,\n            voter: this.$route.params.address.toLowerCase(),\n            candidates: [],\n            balance: 0,\n            totalVoted: 0,\n            currentPage: 1,\n            perPage: 10,\n            totalRows: 0,\n            voterRewards: [],\n            voterRewardsFields: [{\n                key: \'epoch\',\n                label: \'Epoch\',\n                sortable: false\n            }, {\n                key: \'candidateName\',\n                label: \'Masternode\',\n                sortable: false\n            }, {\n                key: \'signNumber\',\n                label: \'Sign No.\',\n                sortable: false\n            }, {\n                key: \'reward\',\n                label: \'Reward\',\n                sortable: false\n            }, {\n                key: \'createdAt\',\n                label: \'Age\',\n                sortable: false\n            }],\n            voterRewardsCurrentPage: 1,\n            voterRewardsSortBy: \'epoch\',\n            voterRewardsPerPage: 10,\n            voterRewardsSortDesc: true,\n            voterRewardsTotalRows: 0,\n            loading: false,\n            rewardLoading: false,\n            txLoading: false,\n            txFields: [{\n                key: \'candidate\',\n                label: \'Address\',\n                sortable: false\n            }, {\n                key: \'name\',\n                label: \'Name\',\n                sortable: false\n            }, {\n                key: \'event\',\n                label: \'Event\',\n                sortable: true\n            }, {\n                key: \'capacity\',\n                label: \'Amount\',\n                sortable: true\n            }, {\n                key: \'candidateCap\',\n                label: \'Capacity\',\n                sortable: true\n            }, {\n                key: \'createdAt\',\n                label: \'Age\',\n                sortable: false\n            }, {\n                key: \'tx\',\n                label: \'\',\n                sortable: false\n            }],\n            transactions: [],\n            txCurrentPage: 1,\n            txPerPage: 10,\n            txTotalRows: 0,\n            txSortBy: \'createdAt\',\n            txSortDesc: true\n        };\n    },\n    computed: {},\n    watch: {\n        $route(to, from) {\n            this.voter = to.params.address.toLowerCase();\n            this.getCandidates();\n            this.getTransactions();\n            this.getRewards();\n        }\n    },\n    update() {},\n    created: async function () {\n        let self = this;\n        self.config = store_legacy_default.a.get(\'configMaster\') || (await self.appConfig());\n\n        self.getCandidates();\n        self.getRewards();\n        self.getTransactions();\n    },\n    methods: {\n        getEventClass(event) {\n            let clazz = \'\';\n            if (event === \'Unvote\' || event === \'Resign\') {\n                clazz = \'color-pink\';\n            }\n\n            return clazz;\n        },\n        async getCandidates() {\n            let self = this;\n            try {\n                let voter = self.$route.params.address;\n\n                self.loading = true;\n                const params = {\n                    page: self.currentPage,\n                    limit: self.perPage,\n                    sortBy: self.sortBy,\n                    sortDesc: self.sortDesc\n                };\n                const candiatePromise = axios_default.a.get(`/api/voters/${voter}/candidates?${self.serializeQuery(params)}`);\n\n                // Candidate table\n                let candidates = await candiatePromise;\n                let items = [];\n\n                candidates.data.items.map(async c => {\n                    items.push({\n                        address: c.candidate,\n                        name: c.candidateName,\n                        status: c.status,\n                        owner: c.owner,\n                        capacity: new bignumber_default.a(c.capacity).div(10 ** 18).toNumber(),\n                        totalCapacity: new bignumber_default.a(c.totalCapacity).div(10 ** 18).toNumber()\n                    });\n                });\n\n                self.totalVoted = candidates.data.totalVoted;\n                self.candidates = items;\n\n                self.totalRows = candidates.data.total;\n\n                if (typeof self.web3 !== \'undefined\') {\n                    self.web3.eth.getBalance(voter, function (a, b) {\n                        self.balance = new bignumber_default.a(b).div(10 ** 18).toNumber();\n                        if (a) {\n                            throw Error(a);\n                        }\n                    });\n                }\n\n                self.loading = false;\n            } catch (e) {\n                self.loading = false;\n                console.log(e);\n            }\n        },\n        async getTransactions() {\n            try {\n                const self = this;\n                const voter = self.$route.params.address;\n                self.txLoading = true;\n                const params = {\n                    page: self.txCurrentPage,\n                    limit: self.txPerPage,\n                    sortBy: self.txSortBy,\n                    sortDesc: self.txSortDesc\n                };\n\n                const txPromise = axios_default.a.get(`/api/transactions/voter/${voter}?${self.serializeQuery(params)}`);\n\n                // transaction table\n                let txs = await txPromise;\n                let items = [];\n\n                txs.data.items.map((tx, idx) => {\n                    items.push({\n                        tx: tx.tx,\n                        voter: tx.voter,\n                        candidate: tx.candidate,\n                        event: tx.event,\n                        cap: new bignumber_default.a(tx.capacity).div(10 ** 18).toNumber(),\n                        createdAt: moment_default()(tx.createdAt).fromNow(),\n                        name: tx.name || \'---\',\n                        candidateCap: new bignumber_default.a(tx.currentCandidateCap).div(10 ** 18).toNumber() || \'---\'\n                    });\n                });\n                self.transactions = items;\n\n                self.txTotalRows = txs.data.total;\n                self.txLoading = false;\n            } catch (error) {\n                self.txLoading = false;\n                console.log(error);\n            }\n        },\n        async getRewards() {\n            try {\n                const self = this;\n                const voter = self.$route.params.address;\n                self.rewardLoading = true;\n\n                const params = {\n                    page: self.voterRewardsCurrentPage,\n                    limit: self.voterRewardsPerPage\n                };\n\n                const rewardPromise = axios_default.a.get(`/api/voters/${voter}/rewards?${self.serializeQuery(params)}`);\n\n                // voter reward table\n                let voterRewards = await rewardPromise;\n                let items = [];\n\n                voterRewards.data.items.map(r => {\n                    items.push({\n                        epoch: r.epoch,\n                        candidate: r.validator,\n                        candidateName: r.candidateName,\n                        startBlockNumber: r.startBlockNumber,\n                        endBlockNumber: r.endBlockNumber,\n                        signNumber: r.signNumber,\n                        reward: new bignumber_default.a(r.reward).toFixed(6),\n                        createdAt: moment_default()(r.rewardTime).fromNow(),\n                        dateTooltip: moment_default()(r.rewardTime).format(\'lll\')\n                    });\n                });\n                self.voterRewards = items;\n\n                self.voterRewardsTotalRows = voterRewards.data.total;\n                self.rewardLoading = false;\n            } catch (error) {\n                self.rewardLoading = false;\n                console.log(error);\n            }\n        },\n        txPageChange(val) {\n            if (this.txCurrentPage !== val) {\n                this.txCurrentPage = val;\n                this.getTransactions();\n            }\n        },\n        rewardPageChange(val) {\n            if (this.voterRewardsCurrentPage !== val) {\n                this.voterRewardsCurrentPage = val;\n                this.getRewards();\n            }\n        },\n        candidatePageChange(val) {\n            if (this.currentPage !== val) {\n                this.currentPage = val;\n                this.getCandidates();\n            }\n        },\n        sortingChangeCandidate(obj) {\n            if (obj.sortBy === \'totalCapacity\') {\n                return this.candidates.slice().sort(function (a, b) {\n                    return b.totalCapacity - a.totaCapacity;\n                });\n            }\n            this.sortBy = obj.sortBy;\n            this.sortDesc = obj.sortDesc;\n            this.getCandidates();\n        },\n        sortingChangeTxes(obj) {\n            this.txSortBy = obj.sortBy;\n            this.txSortDesc = obj.sortDesc;\n            this.getTransactions();\n        }\n    }\n});\n// CONCATENATED MODULE: ./app/components/voters/View.vue?vue&type=script&lang=js&\n /* harmony default export */ var components_voters_Viewvue_type_script_lang_js_ = (voters_Viewvue_type_script_lang_js_); \n// CONCATENATED MODULE: ./app/components/voters/View.vue\n\n\n\n\n\n/* normalize component */\n\nvar voters_View_component = Object(componentNormalizer["a" /* default */])(\n  components_voters_Viewvue_type_script_lang_js_,\n  Viewvue_type_template_id_54e8eeb7_render,\n  Viewvue_type_template_id_54e8eeb7_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var voters_View = (voters_View_component.exports);\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./app/components/voters/Voting.vue?vue&type=template&id=c8182b14&\nvar Votingvue_type_template_id_c8182b14_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',{staticClass:"container"},[(_vm.step === 1)?_c(\'div\',[_c(\'b-row\',{staticClass:"m-0",attrs:{"align-v":"center","align-h":"center"}},[_c(\'b-card\',{class:\'col-12 col-md-8 col-lg-6 tomo-card tomo-card--lighter p-0\'\n                + (_vm.loading ? \' tomo-loading\' : \'\')},[_c(\'h4\',{staticClass:" color-white tomo-card__title tomo-card__title--big"},[_vm._v("Vote")]),_vm._v(" "),_c(\'ul\',{staticClass:"tomo-list list-unstyled"},[_c(\'li\',{staticClass:"tomo-list__item"},[_c(\'i\',{staticClass:"tm-tomo2 tomo-list__icon"}),_vm._v(" "),_c(\'p\',{staticClass:"tomo-list__text"},[_c(\'span\',[_c(\'router-link\',{attrs:{"to":("/voter/" + _vm.voter)}},[_vm._v(_vm._s(_vm.voter))])],1),_vm._v(" "),_c(\'span\',[_vm._v("Voter")])])]),_vm._v(" "),_c(\'li\',{staticClass:"tomo-list__item"},[_c(\'i\',{staticClass:"tm-profile tomo-list__icon"}),_vm._v(" "),_c(\'p\',{staticClass:"tomo-list__text"},[_c(\'span\',[_c(\'router-link\',{attrs:{"to":("/candidate/" + _vm.candidate)}},[_vm._v(_vm._s(_vm.candidate))])],1),_vm._v(" "),_c(\'span\',[_vm._v("Candidate")])])]),_vm._v(" "),_c(\'li\',{staticClass:"tomo-list__item"},[_c(\'i\',{staticClass:"tm-tomo2 tomo-list__icon"}),_vm._v(" "),_c(\'p\',{staticClass:"tomo-list__text"},[_c(\'span\',[_vm._v(" "+_vm._s(_vm.formatCurrencySymbol(_vm.formatNumber(_vm.balance))))]),_vm._v(" "),_c(\'span\',[_vm._v("Balance")])])])]),_vm._v(" "),_c(\'b-form\',{staticClass:"tomo-form tomo-form--vote",attrs:{"novalidate":""},on:{"submit":function($event){$event.preventDefault();return _vm.validate()}}},[_c(\'b-form-group\',{attrs:{"description":("How much SDX would you like to vote for this candidate?\\n                        TX fee: " + _vm.txFee + " SDX"),"label":"Vote","label-for":"vote-value"}},[_c(\'b-input-group\',[_c(\'number-input\',{class:_vm.getValidationClass(\'voteValue\'),attrs:{"min":10,"step":10,"name":"vote-value"},model:{value:(_vm.voteValue),callback:function ($$v) {_vm.voteValue=$$v},expression:"voteValue"}}),_vm._v(" "),_c(\'b-input-group-append\',[_c(\'i\',{staticClass:"tm-tomo2"})]),_vm._v(" "),(_vm.$v.voteValue.$dirty && !_vm.$v.voteValue.required)?_c(\'span\',{staticClass:"text-danger"},[_vm._v("Required field")]):(_vm.$v.voteValue.$dirty && !_vm.$v.voteValue.minValue)?_c(\'span\',{staticClass:"text-danger"},[_vm._v("Minimum of voting is 100 SDX")]):(_vm.votingError)?_c(\'span\',{staticClass:"text-danger"},[_vm._v("Not enough SDX")]):_vm._e()],1)],1),_vm._v(" "),_c(\'div\',[_c(\'div\',{staticClass:"row float-left col-12 mb-2"},[_c(\'estimate-reward\',{staticClass:"estimate-reward",attrs:{"value":_vm.voteValue,"candidate":_vm.candidate}})],1),_vm._v(" "),_c(\'div\',{staticClass:"buttons text-right"},[_c(\'b-button\',{attrs:{"type":"button","variant":"secondary"},on:{"click":function($event){return _vm.$router.go(-1)}}},[_vm._v("Cancel")]),_vm._v(" "),_c(\'b-button\',{attrs:{"type":"submit","variant":"primary"}},[_vm._v("Next")])],1)])],1)],1)],1)],1):_vm._e(),_vm._v(" "),(_vm.step === 2)?_c(\'div\',[_c(\'b-row\',{attrs:{"align-v":"center","align-h":"center"}},[_c(\'b-card\',{class:\'col-12 col-md-8 col-lg-6 tomo-card tomo-card--lighter p-0\'\n                + (_vm.loading ? \' tomo-loading\' : \'\')},[_c(\'h4\',{staticClass:" color-white tomo-card__title tomo-card__title--big"},[_vm._v("Confirmation")]),_vm._v(" "),_c(\'div\',{staticStyle:{"margin-top":"20px"}},[_c(\'div\',{staticClass:"wrapper"},[_c(\'div\',{attrs:{"id":"one"}},[_c(\'label\',[_c(\'b\',[_vm._v("Voting information")])]),_vm._v(" "),_c(\'label\',{staticStyle:{"margin-top":"5px"}},[_c(\'textarea\',{staticClass:"sign-message",staticStyle:{"width":"100%"},attrs:{"type":"text","disabled":"","cols":"100","rows":"4"},domProps:{"value":_vm.message}})])]),_vm._v(" "),_c(\'div\',[_c(\'div\',{staticClass:"pull-right",staticStyle:{"margin-right":"-7px","float":"right"}})]),_vm._v(" "),_c(\'div\',[(_vm.provider === \'tomowallet\')?_c(\'div\',{staticStyle:{"text-align":"center","margin-top":"10px"}},[_c(\'vue-qrcode\',{staticClass:"img-fluid text-center text-lg-right",attrs:{"value":_vm.qrCode,"options":{size: 250 }}})],1):_vm._e()])]),_vm._v(" "),_c(\'div\',{staticClass:"buttons text-right",staticStyle:{"margin-top":"5px"}},[_c(\'b-button\',{attrs:{"type":"button","variant":"secondary"},on:{"click":_vm.backStep}},[_vm._v("Back")]),_vm._v(" "),(_vm.provider !== \'tomowallet\')?_c(\'button\',{staticClass:"btn btn-primary",attrs:{"variant":"primary"},on:{"click":_vm.vote}},[_vm._v("Submit")]):_vm._e()],1)])])],1)],1):_vm._e()])}\nvar Votingvue_type_template_id_c8182b14_staticRenderFns = []\n\n\n// CONCATENATED MODULE: ./app/components/voters/Voting.vue?vue&type=template&id=c8182b14&\n\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./app/components/voters/EstimateReward.vue?vue&type=template&id=0b4b2c42&\nvar EstimateRewardvue_type_template_id_0b4b2c42_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.estimatedReward !== \'N/A\')?_c(\'div\',{staticClass:"float-left"},[_vm._v("\\n    Est. Daily Reward: "+_vm._s(_vm.estimatedReward)+" SDX\\n")]):_vm._e()}\nvar EstimateRewardvue_type_template_id_0b4b2c42_staticRenderFns = []\n\n\n// CONCATENATED MODULE: ./app/components/voters/EstimateReward.vue?vue&type=template&id=0b4b2c42&\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./app/components/voters/EstimateReward.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n\n\n/* harmony default export */ var EstimateRewardvue_type_script_lang_js_ = ({\n    props: {\n        value: {\n            type: String,\n            default: \'\'\n        },\n        candidate: {\n            type: String,\n            default: \'\'\n        }\n    },\n    data: () => {\n        return {\n            estimatedReward: \'N/A\'\n        };\n    },\n    watch: {\n        value: async function (newVal, oldVal) {\n            if (newVal !== oldVal) {\n                await this.calculateRewards();\n            }\n        }\n    },\n    async created() {\n        await this.calculateRewards();\n    },\n    methods: {\n        async calculateRewards() {\n            const self = this;\n            const params = {\n                candidate: self.candidate,\n                amount: self.value\n            };\n            const query = self.serializeQuery(params);\n            const { data } = await axios_default.a.get(\'/api/voters/calculatingReward1Day\' + \'?\' + query);\n\n            self.estimatedReward = data !== \'N/A\' ? data.toFixed(3) : data;\n        }\n    }\n});\n// CONCATENATED MODULE: ./app/components/voters/EstimateReward.vue?vue&type=script&lang=js&\n /* harmony default export */ var voters_EstimateRewardvue_type_script_lang_js_ = (EstimateRewardvue_type_script_lang_js_); \n// CONCATENATED MODULE: ./app/components/voters/EstimateReward.vue\n\n\n\n\n\n/* normalize component */\n\nvar EstimateReward_component = Object(componentNormalizer["a" /* default */])(\n  voters_EstimateRewardvue_type_script_lang_js_,\n  EstimateRewardvue_type_template_id_0b4b2c42_render,\n  EstimateRewardvue_type_template_id_0b4b2c42_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var EstimateReward = (EstimateReward_component.exports);\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./app/components/voters/Voting.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\n\n\n\n\n\n/* harmony default export */ var Votingvue_type_script_lang_js_ = ({\n    name: \'App\',\n    components: {\n        NumberInput: NumberInput,\n        VueQrcode: vue_qrcode_default.a,\n        EstimateReward: EstimateReward\n    },\n    mixins: [lib["validationMixin"]],\n    data() {\n        return {\n            isReady: !!this.web3,\n            voter: \'Unknown\',\n            candidate: this.$route.params.candidate,\n            voteValue: \'100\',\n            loading: false,\n            step: 1,\n            message: \'\',\n            qrCode: \'\',\n            processing: true,\n            id: \'\',\n            interval: null,\n            balance: 0,\n            provider: this.NetworkProvider || store_legacy_default.a.get(\'network\') || null,\n            votingError: false,\n            txFee: 0,\n            gasPrice: null,\n            transactionHash: \'\',\n            toastMessageError: \'An error occurred while staking, please try again\',\n            toastMessage: \'You have successfully staked!\'\n        };\n    },\n    validations: {\n        voteValue: {\n            required: validators["required"],\n            minValue: Object(validators["minValue"])(100)\n        }\n    },\n    computed: {\n        estimatedReward: function () {\n            return this.voteValue;\n        }\n    },\n    watch: {},\n    updated() {},\n    created: async function () {\n        let self = this;\n        self.config = store_legacy_default.a.get(\'configMaster\') || (await self.appConfig());\n        self.chainConfig = self.config.blockchain || {};\n        self.isReady = !!self.web3;\n        self.gasPrice = await self.web3.eth.getGasPrice();\n        self.txFee = new bignumber_default.a(this.chainConfig.gas * self.gasPrice).div(10 ** 18).toString(10);\n        try {\n            if (!self.isReady && self.NetworkProvider === \'metamask\') {\n                throw Error(\'Web3 is not properly detected. Have you installed MetaMask extension?\');\n            }\n            self.voter = store_legacy_default.a.get(\'address\') || self.$store.state.address || (await self.getAccount());\n            self.web3.eth.getBalance(self.voter, function (a, b) {\n                self.balance = new bignumber_default.a(b).div(10 ** 18);\n                if (a) {\n                    console.log(\'got an error\', a);\n                }\n            });\n        } catch (e) {\n            self.$toasted.show(`You need login your account before voting`, {\n                type: \'default\',\n                duration: 5000,\n                action: [{\n                    text: \'Login\',\n                    onClick: (e, toastObject) => {\n                        self.$router.push({ path: \'/setting\' });\n                    }\n                }]\n            });\n            console.log(e);\n        }\n    },\n    destroyed() {\n        if (this.interval) {\n            clearInterval(this.interval);\n        }\n    },\n    async mounted() {},\n    methods: {\n        getValidationClass: function (fieldName) {\n            const field = this.$v[fieldName];\n\n            if (field) {\n                return {\n                    \'is-invalid\': field.$error\n                };\n            }\n        },\n        validate: function () {\n            this.voteValue = this.voteValue.replace(/,/g, \'\');\n            this.$v.$touch();\n\n            if (!this.$v.$invalid) {\n                if (new bignumber_default.a(this.voteValue).isGreaterThanOrEqualTo(this.balance)) {\n                    this.votingError = true;\n                } else {\n                    this.votingError = false;\n                    this.nextStep();\n                }\n            }\n        },\n        vote: async function () {\n            let self = this;\n\n            try {\n                if (!self.isReady) {\n                    self.$router.push({ path: \'/setting\' });\n                    throw Error(\'Web3 is not properly detected.\');\n                }\n                self.loading = true;\n                const account = ((await self.getAccount()) || \'\').toLowerCase();\n                let contract; // = await self.getTomoValidatorInstance()\n                contract = self.TomoValidator;\n                let txParams = {\n                    from: account,\n                    value: self.web3.utils.toHex(new bignumber_default.a(this.voteValue).multipliedBy(10 ** 18).toString(10)),\n                    gasPrice: self.web3.utils.toHex(self.gasPrice),\n                    gas: self.web3.utils.toHex(self.chainConfig.gas),\n                    gasLimit: self.web3.utils.toHex(self.chainConfig.gas),\n                    chainId: self.chainConfig.networkId\n                };\n                if (self.NetworkProvider === \'ledger\' || self.NetworkProvider === \'trezor\') {\n                    // check if network provider is hardware wallet\n                    // sign transaction using hardwarewallet before sending to chain\n\n                    // https://bit.ly/2KEXzQe\n                    // signing and sending processes\n                    //\n                    //\n                    // login device\n                    // sign transaction with function and parameter to get signature\n                    // attach txParams and signature then sendSignedTransaction\n                    let nonce = await self.web3.eth.getTransactionCount(account);\n                    // let dataTx = contract.vote.request(self.candidate).params[0]\n                    let data = await contract.methods.vote(self.candidate).encodeABI();\n                    const dataTx = {\n                        data,\n                        to: self.chainConfig.validatorAddress\n                    };\n                    Object.assign(dataTx, dataTx, txParams, {\n                        nonce: self.web3.utils.toHex(nonce)\n                    });\n                    let signature = await self.signTransaction(dataTx);\n                    const txHash = await self.sendSignedTransaction(dataTx, signature);\n                    if (txHash) {\n                        self.transactionHash = txHash;\n                        let check = true;\n                        while (check) {\n                            const receipt = await self.web3.eth.getTransactionReceipt(txHash);\n                            if (receipt) {\n                                check = false;\n                                self.$toasted.show(self.toastMessage);\n                                setTimeout(() => {\n                                    self.loading = false;\n                                    if (self.transactionHash) {\n                                        self.$router.push({ path: `/confirm/${self.transactionHash}` });\n                                    }\n                                }, 2000);\n                            }\n                        }\n                    }\n                } else {\n                    // rs = await contract.vote(self.candidate, txParams)\n                    contract.methods.vote(self.candidate).send(txParams).on(\'transactionHash\', async txHash => {\n                        self.transactionHash = txHash;\n                        let check = true;\n                        while (check) {\n                            const receipt = await self.web3.eth.getTransactionReceipt(txHash);\n                            if (receipt) {\n                                check = false;\n                                self.$toasted.show(self.toastMessage);\n                                setTimeout(() => {\n                                    self.loading = false;\n                                    if (self.transactionHash) {\n                                        self.$router.push({ path: `/confirm/${self.transactionHash}` });\n                                    }\n                                }, 2000);\n                            }\n                        }\n                    }).catch(e => {\n                        console.log(e);\n                        self.loading = false;\n                        self.$toasted.show(self.toastMessageError + e, { type: \'error\' });\n                    });\n                }\n            } catch (e) {\n                self.loading = false;\n                self.$toasted.show(`An error occurred while voting. ${String(e)}`, {\n                    type: \'error\'\n                });\n                console.log(e);\n            }\n        },\n        onSuccess() {\n            this.$toasted.show(\'Copied\');\n        },\n        async nextStep() {\n            const self = this;\n            const amount = new bignumber_default.a(self.voteValue).toString(10);\n            const data = {\n                voter: self.voter,\n                candidate: self.candidate,\n                amount,\n                action: \'vote\'\n                // call api to generate qr code\n            };const generatedMess = await axios_default.a.post(`/api/voters/generateQR`, data);\n\n            self.message = generatedMess.data.message;\n            self.id = generatedMess.data.id;\n\n            self.qrCode = encodeURI(\'tomochain:vote?amount=\' + amount + \'&\' + \'candidate=\' + self.candidate + \'&name=\' + generatedMess.data.candidateName + \'&submitURL=\' + generatedMess.data.url);\n            self.step++;\n\n            if (self.step === 2 && self.processing && self.provider === \'tomowallet\') {\n                self.interval = setInterval(async () => {\n                    await this.verifyScannedQR();\n                }, 3000);\n            }\n        },\n        backStep() {\n            if (this.interval) {\n                clearInterval(this.interval);\n            }\n            this.step--;\n        },\n        async verifyScannedQR() {\n            let self = this;\n            let { data } = await axios_default.a.get(\'/api/voters/getScanningResult?action=vote&id=\' + self.id);\n\n            if (!data.error) {\n                self.loading = true;\n                if (data.tx) {\n                    clearInterval(self.interval);\n                    let toastMessage = data.tx && data.status ? \'You have successfully voted!\' : \'An error occurred while voting, please try again\';\n                    self.$toasted.show(toastMessage);\n                    setTimeout(() => {\n                        if (data.tx) {\n                            self.loading = false;\n                            self.processing = false;\n                            self.step = 0;\n                            self.$router.push({ path: `/confirm/${data.tx}` });\n                        }\n                    }, 2000);\n                }\n            }\n        },\n        onChangeVoting(event) {\n            const checking = event.target.checked;\n            if (checking) {\n                this.interval = setInterval(async () => {\n                    await this.verifyScannedQR();\n                }, 3000);\n            } else {\n                if (this.interval) {\n                    clearInterval(this.interval);\n                }\n            }\n        }\n    }\n});\n// CONCATENATED MODULE: ./app/components/voters/Voting.vue?vue&type=script&lang=js&\n /* harmony default export */ var voters_Votingvue_type_script_lang_js_ = (Votingvue_type_script_lang_js_); \n// CONCATENATED MODULE: ./app/components/voters/Voting.vue\n\n\n\n\n\n/* normalize component */\n\nvar Voting_component = Object(componentNormalizer["a" /* default */])(\n  voters_Votingvue_type_script_lang_js_,\n  Votingvue_type_template_id_c8182b14_render,\n  Votingvue_type_template_id_c8182b14_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var Voting = (Voting_component.exports);\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./app/components/voters/Unvoting.vue?vue&type=template&id=5256d1cc&\nvar Unvotingvue_type_template_id_5256d1cc_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.loadingPage)?_c(\'div\',{staticClass:"tomo-loading"}):_c(\'div\',[_c(\'div\',{staticClass:"container"},[(_vm.voted === 0)?_c(\'div\',{staticClass:"row"},[_c(\'div\',{staticClass:"tomo-empty col-12"},[_c(\'i\',{staticClass:"tm-notice tomo-empty__icon"}),_vm._v(" "),_c(\'p\',{staticClass:"tomo-empty__description"},[_vm._v("You have not staked for this candidate, so you can\'t unstake.")]),_vm._v(" "),_c(\'b-button\',{attrs:{"to":("/voting/" + _vm.candidate),"variant":"primary"}},[_vm._v("Stake")])],1)]):_c(\'div\',[(_vm.step === 1)?_c(\'div\',[(_vm.voted)?_c(\'b-row\',{staticClass:"m-0",attrs:{"align-v":"center","align-h":"center"}},[_c(\'b-card\',{class:\'col-12 col-md-8 col-lg-6 tomo-card tomo-card--lighter p-0\'\n                        + (_vm.loading ? \' tomo-loading\' : \'\')},[_c(\'h4\',{staticClass:" color-white tomo-card__title tomo-card__title--big"},[_vm._v("Unvote\\n                            "),_c(\'span\',{staticClass:"tomo-card__subtitle"},[_vm._v("\\n                                Your SDX will be locked in a duration after unstaking")])]),_vm._v(" "),_c(\'ul\',{staticClass:"tomo-list list-unstyled"},[_c(\'li\',{staticClass:"tomo-list__item"},[_c(\'i\',{staticClass:"tm-wallet tomo-list__icon"}),_vm._v(" "),_c(\'p\',{staticClass:"tomo-list__text"},[_c(\'span\',[_c(\'router-link\',{attrs:{"to":("/voter/" + _vm.voter)}},[_vm._v(_vm._s(_vm.voter))])],1),_vm._v(" "),_c(\'span\',[_vm._v("Staker")])])]),_vm._v(" "),_c(\'li\',{staticClass:"tomo-list__item"},[_c(\'i\',{staticClass:"tm-profile tomo-list__icon"}),_vm._v(" "),_c(\'p\',{staticClass:"tomo-list__text"},[_c(\'span\',[_c(\'router-link\',{attrs:{"to":("/candidate/" + _vm.candidate)}},[_vm._v("\\n                                            "+_vm._s(_vm.candidate)+"\\n                                        ")])],1),_vm._v(" "),_c(\'span\',[_vm._v("Candidate")])])]),_vm._v(" "),_c(\'li\',{staticClass:"tomo-list__item"},[_c(\'i\',{staticClass:"tm-tomo2 tomo-list__icon"}),_vm._v(" "),_c(\'p\',{staticClass:"tomo-list__text"},[_c(\'span\',[_vm._v(" "+_vm._s(_vm.formatCurrencySymbol(_vm.formatNumber(_vm.voted)))+"\\n                                        - "),_c(\'a\',{attrs:{"href":"javascript:"},on:{"click":_vm.unvoteAll}},[_vm._v("All")])]),_vm._v(" "),_c(\'span\',[_vm._v("You staked")])])])]),_vm._v(" "),_c(\'b-form\',{staticClass:"tomo-form tomo-form--unvote",attrs:{"novalidate":""},on:{"submit":function($event){$event.preventDefault();return _vm.validate()}}},[_c(\'b-form-group\',{attrs:{"description":("The amount of SDX to unstake. TX fee: " + _vm.txFee + " SDX"),"label":"Amount","label-for":"unvote-value"}},[_c(\'b-input-group\',[_c(\'number-input\',{class:_vm.getValidationClass(\'unvoteValue\'),attrs:{"min":10,"step":10,"name":"vote-value"},on:{"input":_vm.onChange},model:{value:(_vm.unvoteValue),callback:function ($$v) {_vm.unvoteValue=$$v},expression:"unvoteValue"}}),_vm._v(" "),_c(\'b-input-group-append\',[_c(\'i\',{staticClass:"tm-tomo2"})]),_vm._v(" "),(_vm.$v.unvoteValue.$dirty && !_vm.$v.unvoteValue.required)?_c(\'span\',{staticClass:"text-danger"},[_vm._v("Required field ")]):(!_vm.isNumeric)?_c(\'span\',{staticClass:"text-danger"},[_vm._v("Must be number ")]):(_vm.isMax)?_c(\'span\',{staticClass:"text-danger"},[_vm._v("\\n                                        Must be less than "+_vm._s(_vm.limitedUnvote)+" SDX ")]):(!_vm.isEnoughTomo)?_c(\'span\',{staticClass:"text-danger"},[_vm._v("Staked amount left should not less than 100 SDX ")]):_vm._e()],1)],1),_vm._v(" "),_c(\'div\',{staticClass:"buttons text-right"},[_c(\'b-button\',{attrs:{"type":"button","variant":"secondary"},on:{"click":function($event){return _vm.$router.go(-1)}}},[_vm._v("Cancel")]),_vm._v(" "),_c(\'b-button\',{attrs:{"id":"nextBtn","type":"submit","variant":"primary"}},[_vm._v("Next")])],1)],1)],1)],1):_vm._e()],1):_vm._e(),_vm._v(" "),(_vm.step === 2)?_c(\'div\',[_c(\'b-row\',{attrs:{"align-v":"center","align-h":"center"}},[_c(\'b-card\',{class:\'col-12 col-md-8 col-lg-6 tomo-card tomo-card--lighter p-0\'\n                        + (_vm.loading ? \' tomo-loading\' : \'\')},[_c(\'h4\',{staticClass:" color-white tomo-card__title tomo-card__title--big"},[_vm._v("Confirmation")]),_vm._v(" "),_c(\'div\',{staticStyle:{"margin-top":"20px"}},[_c(\'div\',{staticClass:"wrapper"},[_c(\'div\',{attrs:{"id":"one"}},[_c(\'label\',[_c(\'b\',[_vm._v("Unvoting information")])]),_vm._v(" "),_c(\'label\',{staticStyle:{"margin-top":"5px"}},[_c(\'textarea\',{staticClass:"sign-message",staticStyle:{"width":"100%"},attrs:{"type":"text","disabled":"","cols":"100","rows":"4"},domProps:{"value":_vm.message}})])]),_vm._v(" "),_c(\'div\',[_c(\'div\',{staticClass:"pull-right",staticStyle:{"margin-right":"-7px","float":"right"}})]),_vm._v(" "),_c(\'div\',[(_vm.provider === \'tomowallet\')?_c(\'div\',{staticStyle:{"text-align":"center","margin-top":"10px"}},[_c(\'vue-qrcode\',{staticClass:"img-fluid text-center text-lg-right",attrs:{"value":_vm.qrCode,"options":{size: 250 }}})],1):_vm._e()])]),_vm._v(" "),_c(\'div\',{staticClass:"buttons text-right",staticStyle:{"margin-top":"5px"}},[_c(\'b-button\',{attrs:{"type":"button","variant":"secondary"},on:{"click":_vm.backStep}},[_vm._v("Back")]),_vm._v(" "),(_vm.provider !== \'tomowallet\')?_c(\'button\',{staticClass:"btn btn-primary",attrs:{"variant":"primary"},on:{"click":_vm.unvote}},[_vm._v("Submit")]):_vm._e()],1)])])],1)],1):_vm._e()])])])}\nvar Unvotingvue_type_template_id_5256d1cc_staticRenderFns = []\n\n\n// CONCATENATED MODULE: ./app/components/voters/Unvoting.vue?vue&type=template&id=5256d1cc&\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./app/components/voters/Unvoting.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\n\n\n\n/* harmony default export */ var Unvotingvue_type_script_lang_js_ = ({\n    name: \'App\',\n    components: {\n        NumberInput: NumberInput,\n        VueQrcode: vue_qrcode_default.a\n    },\n    mixins: [lib["validationMixin"]],\n    data() {\n        return {\n            isReady: !!this.web3,\n            voter: \'\',\n            candidate: this.$route.params.candidate,\n            voted: 0,\n            unvoteValue: \'100\',\n            loading: false,\n            loadingPage: false,\n            step: 1,\n            interval: null,\n            processing: true,\n            provider: this.NeworkProvider || store_legacy_default.a.get(\'network\') || null,\n            isMin: false,\n            isMax: false,\n            isNumeric: true,\n            isEnoughTomo: true,\n            minValue: new bignumber_default.a(100),\n            maxValue: new bignumber_default.a(this.voted),\n            converted: null,\n            txFee: 0,\n            gasPrice: null,\n            isOwner: false,\n            limitedUnvote: 0,\n            transactionHash: \'\',\n            toastMessage: \'You have successfully unstaked!\',\n            toastMessageError: \'An error occurred while unstaking, please try again\'\n        };\n    },\n    validations() {\n        return {\n            unvoteValue: {\n                required: validators["required"]\n                // minValue: minValue(10 ** -18),\n                // maxValue: maxValue(this.voted)\n            }\n        };\n    },\n    watch: {},\n    updated() {},\n    destroyed() {\n        if (this.interval) {\n            clearInterval(this.interval);\n        }\n    },\n    created: async function () {\n        let self = this;\n        let candidate = self.candidate;\n        self.loadingPage = true;\n        self.config = store_legacy_default.a.get(\'configMaster\') || (await self.appConfig());\n        self.chainConfig = self.config.blockchain || {};\n        self.gasPrice = await self.web3.eth.getGasPrice();\n        self.txFee = new bignumber_default.a(this.chainConfig.gas * self.gasPrice).div(10 ** 18).toString(10);\n\n        try {\n            self.isReady = !!self.web3;\n            self.voter = store_legacy_default.a.get(\'address\') || self.$store.state.address || (await self.getAccount());\n\n            const isOwnerPromise = axios_default.a.get(`/api/candidates/${candidate}/${self.voter}/isOwner`);\n\n            let contract; // = await self.getTomoValidatorInstance()\n            contract = self.TomoValidator;\n            // let votedCap = await contract.getVoterCap(candidate, account)\n            let votedCap = await contract.methods.getVoterCap(candidate, self.voter).call();\n\n            self.voted = new bignumber_default.a(votedCap).div(10 ** 18).toString(10);\n            const isOwner = (await isOwnerPromise).data || false;\n            self.isOwner = Boolean(isOwner);\n            self.loadingPage = false;\n        } catch (e) {\n            console.log(e);\n        }\n    },\n    mounted() {},\n    methods: {\n        getValidationClass: function (fieldName) {\n            const field = this.$v[fieldName];\n\n            if (field) {\n                return {\n                    \'is-invalid\': field.$error\n                };\n            }\n        },\n        validate: function () {\n            this.unvoteValue = this.unvoteValue.replace(/,/g, \'\');\n            // check minValue\n            // this.isMin = this.validateMinAmount(this.unvoteValue)\n            // check maxValue\n            this.isMax = this.validateMaxAmount(this.unvoteValue);\n            // check numeric\n            this.isNumeric = this.validateNumeric(this.unvoteValue);\n            // check voted amount left\n            this.isEnoughTomo = this.validateTomoLeft(this.unvoteValue);\n\n            if (this.isNumeric && !this.isMax && this.isEnoughTomo) {\n                this.$v.$touch();\n                if (!this.$v.$invalid) {\n                    this.nextStep();\n                }\n            }\n        },\n        unvote: async function () {\n            let self = this;\n            let candidate = this.candidate;\n            let value = this.unvoteValue;\n\n            try {\n                if (!self.isReady) {\n                    self.$router.push({ path: \'/setting\' });\n                }\n\n                self.loading = true;\n                let unvoteValue = new bignumber_default.a(value).multipliedBy(1e+18).toString(10);\n                const account = ((await self.getAccount()) || \'\').toLowerCase();\n                let contract; // = await self.getTomoValidatorInstance()\n                contract = self.TomoValidator;\n                let txParams = {\n                    from: account,\n                    gasPrice: self.web3.utils.toHex(self.gasPrice),\n                    gas: self.web3.utils.toHex(self.chainConfig.gas),\n                    gasLimit: self.web3.utils.toHex(self.chainConfig.gas),\n                    chainId: self.chainConfig.networkId\n                };\n                if (self.NetworkProvider === \'ledger\' || self.NetworkProvider === \'trezor\') {\n                    // check if network provider is hardware wallet\n                    // sign transaction using hardwarewallet before sending to chain\n\n                    // https://bit.ly/2KEXzQe\n                    // signing and sending processes\n                    //\n                    //\n                    // login device\n                    // sign transaction with function and parameter to get signature\n                    // attach txParams and signature then sendSignedTransaction\n                    let nonce = await self.web3.eth.getTransactionCount(account);\n                    // let dataTx = contract.unvote.request(candidate, unvoteValue).params[0]\n                    let data = await contract.methods.unvote(candidate, unvoteValue).encodeABI();\n                    const dataTx = {\n                        data,\n                        to: self.chainConfig.validatorAddress\n                    };\n                    if (self.NetworkProvider === \'trezor\') {\n                        txParams.value = self.web3.utils.toHex(0);\n                    }\n                    Object.assign(dataTx, dataTx, txParams, {\n                        nonce: self.web3.utils.toHex(nonce)\n                    });\n                    let signature = await self.signTransaction(dataTx);\n                    const txHash = await self.sendSignedTransaction(dataTx, signature);\n                    if (txHash) {\n                        self.transactionHash = txHash;\n                        let check = true;\n                        while (check) {\n                            const receipt = await self.web3.eth.getTransactionReceipt(txHash);\n                            if (receipt) {\n                                check = false;\n                                self.$toasted.show(self.toastMessage);\n                                setTimeout(() => {\n                                    self.loading = false;\n                                    if (self.transactionHash) {\n                                        self.$router.push({ path: `/confirm/${self.transactionHash}` });\n                                    }\n                                }, 2000);\n                            }\n                        }\n                    }\n                } else {\n                    contract.methods.unvote(candidate, unvoteValue).send(txParams).on(\'transactionHash\', async txHash => {\n                        self.transactionHash = txHash;\n                        let check = true;\n                        while (check) {\n                            const receipt = await self.web3.eth.getTransactionReceipt(txHash);\n                            if (receipt) {\n                                check = false;\n                                self.$toasted.show(self.toastMessage);\n                                setTimeout(() => {\n                                    self.loading = false;\n                                    if (self.transactionHash) {\n                                        self.$router.push({ path: `/confirm/${self.transactionHash}` });\n                                    }\n                                }, 2000);\n                            }\n                        }\n                    }).catch(e => {\n                        console.log(e);\n                        self.loading = false;\n                        self.$toasted.show(self.toastMessageError + e, { type: \'error\' });\n                    });\n                }\n            } catch (e) {\n                self.loading = false;\n                self.$toasted.show(\'An error occurred while unvoting, please try again\', {\n                    type: \'error\'\n                });\n                console.log(e);\n            }\n        },\n        async nextStep() {\n            const self = this;\n            const amount = new bignumber_default.a(self.unvoteValue).toString(10);\n            const data = {\n                action: \'unvote\',\n                voter: self.voter,\n                candidate: self.candidate,\n                amount\n                // call api to generate qr code\n            };const generatedMess = await axios_default.a.post(`/api/voters/generateQR`, data);\n\n            self.message = generatedMess.data.message;\n            self.id = generatedMess.data.id;\n\n            self.qrCode = encodeURI(\'tomochain:unvote?amount=\' + amount + \'&\' + \'candidate=\' + self.candidate + \'&name=\' + generatedMess.data.candidateName + \'&submitURL=\' + generatedMess.data.url);\n            this.step++;\n            if (self.step === 2 && self.provider === \'tomowallet\') {\n                self.interval = setInterval(async () => {\n                    await this.verifyScannedQR();\n                }, 3000);\n            }\n        },\n        backStep() {\n            if (this.interval) {\n                clearInterval(this.interval);\n            }\n            this.step--;\n        },\n        async verifyScannedQR() {\n            let self = this;\n            let { data } = await axios_default.a.get(\'/api/voters/getScanningResult?action=unvote&id=\' + self.id);\n\n            if (!data.error) {\n                self.loading = true;\n                if (data.tx) {\n                    clearInterval(self.interval);\n                    let toastMessage = data.tx && data.status ? \'You have successfully unstaked!\' : \'An error occurred while staking, please try again\';\n                    self.$toasted.show(toastMessage);\n                    setTimeout(() => {\n                        if (data.tx) {\n                            self.loading = false;\n                            self.processing = false;\n                            self.step = 0;\n                            self.$router.push({ path: `/confirm/${data.tx}` });\n                        }\n                    }, 2000);\n                }\n            }\n        },\n        validateMinAmount(value) {\n            this.converted = new bignumber_default.a(value);\n            this.maxValue = new bignumber_default.a(this.voted);\n            if (this.converted.isLessThan(this.minValue) && this.converted.isGreaterThanOrEqualTo(this.minValue)) {\n                return true;\n            }\n            return false;\n        },\n        validateMaxAmount(value) {\n            this.converted = new bignumber_default.a(value);\n            const votedValue = new bignumber_default.a(this.voted);\n            this.maxValue = this.isOwner ? votedValue.minus(new bignumber_default.a(10000)) : votedValue;\n            this.limitedUnvote = this.maxValue.toString(10);\n            if (this.converted.isGreaterThan(this.maxValue)) {\n                return true;\n            }\n            return false;\n        },\n        validateNumeric(value) {\n            this.converted = new bignumber_default.a(value).toNumber();\n            // check numeric\n            if (isNaN(this.converted)) {\n                return false;\n            }\n            return true;\n        },\n        validateTomoLeft(value) {\n            this.converted = new bignumber_default.a(value); // unvote value\n            this.maxValue = new bignumber_default.a(this.voted);\n            const acceptedValue = this.maxValue.isGreaterThanOrEqualTo(this.converted);\n            const votedValueLeft = this.maxValue.minus(this.converted).isGreaterThanOrEqualTo(this.minValue);\n            const isUnvoteAll = this.converted.isEqualTo(this.maxValue);\n            if (acceptedValue && (votedValueLeft || isUnvoteAll)) {\n                return true;\n            }\n            return false;\n        },\n        async unvoteAll() {\n            if (this.isOwner) {\n                let voted = new bignumber_default.a(this.voted);\n                if (voted.isGreaterThan(new bignumber_default.a(10000))) {\n                    this.unvoteValue = voted.minus(new bignumber_default.a(10000)).toString(10);\n                }\n            } else this.unvoteValue = this.voted.toString(10);\n        },\n        onChange(unvoteValue) {\n            // reset\n            this.isMin = false;\n            this.isMax = false;\n            this.isNumeric = true;\n            this.isEnoughTomo = true;\n            // check maxValue\n            this.isMax = this.validateMaxAmount(unvoteValue);\n            // check numeric\n            this.isNumeric = this.validateNumeric(unvoteValue);\n            // check voted amount left\n            this.isEnoughTomo = this.validateTomoLeft(unvoteValue);\n            const btn = document.getElementById(\'nextBtn\');\n\n            if (!this.isNumeric || this.isMax || !this.isEnoughTomo) {\n                btn.disabled = true;\n            } else {\n                btn.disabled = false;\n            }\n        }\n    }\n});\n// CONCATENATED MODULE: ./app/components/voters/Unvoting.vue?vue&type=script&lang=js&\n /* harmony default export */ var voters_Unvotingvue_type_script_lang_js_ = (Unvotingvue_type_script_lang_js_); \n// CONCATENATED MODULE: ./app/components/voters/Unvoting.vue\n\n\n\n\n\n/* normalize component */\n\nvar Unvoting_component = Object(componentNormalizer["a" /* default */])(\n  voters_Unvotingvue_type_script_lang_js_,\n  Unvotingvue_type_template_id_5256d1cc_render,\n  Unvotingvue_type_template_id_5256d1cc_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var Unvoting = (Unvoting_component.exports);\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./app/components/voters/Confirm.vue?vue&type=template&id=2c83ab76&\nvar Confirmvue_type_template_id_2c83ab76_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',{staticClass:"container"},[_c(\'b-row\',{staticClass:"m-0",attrs:{"align-v":"center","align-h":"center"}},[_c(\'b-card\',{staticClass:"col-12 col-md-8 col-lg-6 tomo-card tomo-card--animated p-0"},[_c(\'h4\',{staticClass:" color-white tomo-card__title tomo-card__title--big"},[_c(\'i\',{class:("tm-" + _vm.icon)}),_vm._v("\\n                "+_vm._s(_vm.title)+"\\n            ")]),_vm._v(" "),_c(\'p\',{staticClass:"md-content"},[_vm._v("\\n                You have "+_vm._s(_vm.event)+"\\n                "),_c(\'span\',{staticClass:"color-white"},[_vm._v(_vm._s(_vm.amount)+" SDX")]),_vm._v(" for candidate\\n                "),_c(\'router-link\',{attrs:{"to":("/candidate/" + _vm.candidate)}},[_vm._v("\\n                "+_vm._s(_vm.truncate(_vm.candidate, 20)))]),_vm._v(" successfully.\\n                "),_c(\'br\'),_c(\'br\'),_vm._v("\\n                Transaction Hash:\\n                "),_c(\'a\',{attrs:{"href":_vm.txUrl,"target":"_blank"}},[_vm._v(_vm._s(_vm.truncate(_vm.tx, 30)))])],1),_vm._v(" "),_c(\'p\',{staticClass:"md-content",domProps:{"innerHTML":_vm._s(_vm.description)}}),_vm._v(" "),_c(\'div\',{staticClass:"buttons text-right"},[_c(\'b-button\',{attrs:{"to":"/","type":"button","variant":"primary"}},[_vm._v(_vm._s(_vm.buttonText))])],1)])],1)],1)}\nvar Confirmvue_type_template_id_2c83ab76_staticRenderFns = []\n\n\n// CONCATENATED MODULE: ./app/components/voters/Confirm.vue?vue&type=template&id=2c83ab76&\n\n// EXTERNAL MODULE: ./node_modules/url-join/lib/url-join.js\nvar url_join = __webpack_require__(545);\nvar url_join_default = /*#__PURE__*/__webpack_require__.n(url_join);\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./app/components/voters/Confirm.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\n/* harmony default export */ var Confirmvue_type_script_lang_js_ = ({\n    name: \'App\',\n    data() {\n        return {\n            config: {},\n            tx: this.$route.params.transaction,\n            status: \'fail\',\n            icon: \'\',\n            title: \'\',\n            description: \'\',\n            buttonText: \'\',\n            event: \'\',\n            amount: \'\',\n            candidate: \'\',\n            txUrl: \'\'\n        };\n    },\n    computed: {},\n    watch: {},\n    updated() {},\n    created: async function () {\n        let self = this;\n        self.config = store_legacy_default.a.get(\'configMaster\') || (await self.appConfig());\n\n        axios_default.a.get(`/api/transactions/${self.tx}`).then(function (response) {\n            if (response.data == null) {\n                self.$router.push({ path: \'/\' });\n            } else {\n                let transaction = response.data;\n\n                self.web3.eth.getTransaction(self.tx, function (err, result) {\n                    if (!err) {\n                        self.status = result == null ? \'fail\' : \'success\';\n                    } else {\n                        self.status = \'fail\';\n                        console.log(err);\n                    }\n\n                    if (self.status === \'success\') {\n                        self.amount = new bignumber_default.a(transaction.capacity).div(10 ** 18).toString(10);\n                        self.icon = \'checkmark\';\n                        self.title = \'Success\';\n                        self.event = transaction.event === \'Vote\' ? \'staked\' : \'unstaked\';\n                        self.candidate = transaction.candidate;\n                        self.txUrl = url_join_default()(self.config.explorerUrl, `/txs/${self.tx}`);\n                        // self.description = `You have ${event}\n                        // <span class="color-white">${amount} SDX</span> for candidate\n                        // <router-link to="/candidate/${transaction.candidate}">${transaction.candidate}</router-link>\n                        // successfully.\n                        // <br/><br/>\n                        // Transaction Hash: <a href="${self.config.explorerUrl}/txs/${self.tx}"\n                        // target="_blank">${self.tx}</a>`\n                        self.buttonText = \'View all Masternodes\';\n                    } else {\n                        self.icon = \'notice\';\n                        self.title = \'Transaction Failed\';\n                        self.description = \'You have staked unsuccessfully\';\n                        self.buttonText = \'Try Again\';\n                    }\n                });\n            }\n        }).catch(e => {\n            console.log(e);\n        });\n    },\n    mounted() {},\n    methods: {}\n});\n// CONCATENATED MODULE: ./app/components/voters/Confirm.vue?vue&type=script&lang=js&\n /* harmony default export */ var voters_Confirmvue_type_script_lang_js_ = (Confirmvue_type_script_lang_js_); \n// CONCATENATED MODULE: ./app/components/voters/Confirm.vue\n\n\n\n\n\n/* normalize component */\n\nvar Confirm_component = Object(componentNormalizer["a" /* default */])(\n  voters_Confirmvue_type_script_lang_js_,\n  Confirmvue_type_template_id_2c83ab76_render,\n  Confirmvue_type_template_id_2c83ab76_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var Confirm = (Confirm_component.exports);\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./app/components/Setting.vue?vue&type=template&id=dba217f2&\nvar Settingvue_type_template_id_dba217f2_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',{staticClass:"container"},[_c(\'b-row\',{staticClass:"m-0",attrs:{"align-v":"center","align-h":"center"}},[(!_vm.address)?_c(\'b-card\',{class:\'col-12 col-md-8 col-lg-7 tomo-card tomo-card--lighter p-0\'\n            + (_vm.loading ? \' tomo-loading\' : \'\')},[_c(\'h4\',{staticClass:"color-white tomo-card__title tomo-card__title--big"},[_vm._v("Login")]),_vm._v(" "),_c(\'b-form\',{staticClass:"tomo-form tomo-form--setting",attrs:{"novalidate":""},on:{"submit":function($event){$event.preventDefault();return _vm.validate()}}},[_c(\'b-form-group\',{staticClass:"mb-4",attrs:{"label":"Network Provider","label-for":"provider"}},[_c(\'b-input-group\',[_c(\'b-form-select\',{staticClass:"form-control",attrs:{"id":"provider"},on:{"change":_vm.onChangeSelect},model:{value:(_vm.provider),callback:function ($$v) {_vm.provider=$$v},expression:"provider"}},[(!_vm.isElectron)?_c(\'option\',{attrs:{"value":"metamask"}},[_vm._v("Metamask/DApp Wallets (Recommended)")]):_vm._e(),_vm._v(" "),_c(\'option\',{attrs:{"value":"custom"}},[_vm._v("PrivateKey/MNEMONIC")]),_vm._v(" "),_c(\'option\',{attrs:{"value":"ledger"}},[_vm._v("Ledger Wallet")]),_vm._v(" "),_c(\'option\',{attrs:{"value":"trezor"}},[_vm._v("Trezor Wallet")]),_vm._v(" "),(!_vm.isElectron)?_c(\'option\',{attrs:{"value":"pantograph"}},[_vm._v("Pantograph")]):_vm._e()]),_vm._v(" "),(_vm.provider !== \'metamask\' && _vm.provider !== \'pantograph\')?_c(\'small\',{staticClass:"form-text text-muted"},[_vm._v("Using node at "+_vm._s(_vm.chainConfig.rpc)+".")]):_vm._e()],1)],1),_vm._v(" "),(_vm.provider === \'custom\')?_c(\'b-form-group\',{staticClass:"mb-4",attrs:{"label":"Privatekey/MNEMONIC","label-for":"mnemonic"}},[_c(\'b-form-input\',{class:_vm.getValidationClass(\'mnemonic\'),attrs:{"autocomplete":"off","type":"text"},model:{value:(_vm.mnemonic),callback:function ($$v) {_vm.mnemonic=$$v},expression:"mnemonic"}}),_vm._v(" "),(_vm.$v.mnemonic.$dirty && !_vm.$v.mnemonic.required)?_c(\'span\',{staticClass:"text-danger"},[_vm._v("Required field")]):_vm._e()],1):_vm._e(),_vm._v(" "),(_vm.provider === \'custom\')?_c(\'b-form-group\',{staticClass:"mb-4",attrs:{"label":"Select HD derivation path(MNEMONIC)","label-for":"hdPath"}},[_c(\'b-form-input\',{class:_vm.getValidationClass(\'hdPath\'),attrs:{"value":_vm.hdPath,"type":"text"},model:{value:(_vm.hdPath),callback:function ($$v) {_vm.hdPath=$$v},expression:"hdPath"}}),_vm._v(" "),(_vm.$v.hdPath.$dirty && !_vm.$v.hdPath.required)?_c(\'span\',{staticClass:"text-danger"},[_vm._v("Required field")]):_vm._e(),_vm._v(" "),_c(\'small\',{staticClass:"form-text text-muted"},[_vm._v("To unlock the wallet, try paths\\n                        "),_c(\'code\',{staticClass:"hd-path",on:{"click":function($event){return _vm.changePath("m/44\'/60\'/0\'/0")}}},[_vm._v("m/44\'/60\'/0\'/0")]),_vm._v(" or\\n                        "),_c(\'code\',{staticClass:"hd-path",on:{"click":function($event){return _vm.changePath("m/44\'/60\'/0\'")}}},[_vm._v("m/44\'/60\'/0\'")]),_vm._v(" or\\n                        "),_c(\'code\',{staticClass:"hd-path",on:{"click":function($event){return _vm.changePath("m/44\'/889\'/0\'/0")}}},[_vm._v("m/44\'/889\'/0\'/0")])])],1):_vm._e(),_vm._v(" "),(_vm.provider === \'tomowallet\')?_c(\'b-form-group\',{staticClass:"mb-4",staticStyle:{"text-align":"center"}},[_c(\'vue-qrcode\',{staticClass:"img-fluid text-center text-lg-right",attrs:{"options":{size: 250 },"value":_vm.qrCode}}),_vm._v(" "),(_vm.mobileCheck)?_c(\'div\',[_c(\'b-button\',{attrs:{"href":_vm.qrCodeApp,"variant":"primary"}},[_vm._v("\\n                            Open in App\\n                        ")])],1):_vm._e(),_vm._v(" "),_c(\'div\',[_c(\'b\',[_vm._v("In case you do not have TomoWallet, download here")])]),_vm._v(" "),_c(\'div\',{staticStyle:{"margin-top":"5px"}},[_c(\'a\',{staticClass:"social-links__link",attrs:{"target":"_blank","rel":"noopener noreferrer","href":"https://goo.gl/MvE1GV"}},[_c(\'img\',{attrs:{"src":"/app/assets/img/appstore.png"}})]),_vm._v(" "),_c(\'a\',{staticClass:"social-links__link",attrs:{"target":"_blank","rel":"noopener noreferrer","href":"https://goo.gl/4tFQzY"}},[_c(\'img\',{attrs:{"src":"/app/assets/img/googleplay.png"}})])])],1):_vm._e(),_vm._v(" "),(_vm.provider === \'ledger\')?_c(\'b-form-group\',{staticClass:"mb-4",attrs:{"label":"Select HD derivation path","label-for":"hdPath"}},[_c(\'b-form-input\',{class:_vm.getValidationClass(\'hdPath\'),attrs:{"value":_vm.hdPath,"type":"text"},model:{value:(_vm.hdPath),callback:function ($$v) {_vm.hdPath=$$v},expression:"hdPath"}}),_vm._v(" "),(_vm.$v.hdPath.$dirty && !_vm.$v.hdPath.required)?_c(\'span\',{staticClass:"text-danger"},[_vm._v("Required field")]):_vm._e(),_vm._v(" "),_c(\'small\',{staticClass:"form-text text-muted"},[_vm._v("To unlock the wallet, try paths\\n                        "),_c(\'code\',{staticClass:"hd-path",on:{"click":function($event){return _vm.changePath("m/44\'/60\'/0\'")}}},[_vm._v("m/44\'/60\'/0\'")]),_vm._v("\\n                        or "),_c(\'code\',{staticClass:"hd-path",on:{"click":function($event){return _vm.changePath("m/44\'/60\'/0\'/0")}}},[_vm._v("m/44\'/60\'/0\'/0")]),_vm._v("\\n                        with Ethereum App,"),_c(\'br\'),_vm._v("\\n                        or try path "),_c(\'code\',{staticClass:"hd-path",on:{"click":function($event){return _vm.changePath("m/44\'/889\'/0\'/0")}}},[_vm._v("m/44\'/889\'/0\'/0")]),_vm._v("\\n                        with TomoChain App (on Ledger).")])],1):_vm._e(),_vm._v(" "),(_vm.provider === \'trezor\')?_c(\'b-form-group\',{staticClass:"mb-4",attrs:{"label-for":"hdPath"}},[_c(\'span\',[_vm._v("HD derivation path: ")]),_vm._v(" "),_c(\'label\',{staticClass:"ml-1"},[_c(\'b\',[_vm._v("m/44\'/60\'/0\'/0")])])]):_vm._e(),_vm._v(" "),(!_vm.isReady && _vm.provider === \'metamask\')?_c(\'div\',[_c(\'p\',[_vm._v("Please install & login\\n                        "),_c(\'a\',{attrs:{"href":"https://metamask.io/","target":"_blank"}},[_vm._v("Metamask Extension")]),_vm._v("\\n                        then connect it to the Smart DEX Chain.")])]):_vm._e(),_vm._v(" "),(!_vm.isReady && _vm.provider === \'pantograph\')?_c(\'div\',[_c(\'p\',[_vm._v("Please install & login\\n                        "),_c(\'a\',{attrs:{"href":"https://pantograph.io/","target":"_blank"}},[_vm._v("Pantograph Extension")]),_vm._v("\\n                        then connect it to Tomochain Smart DEX Chain.")])]):_vm._e(),_vm._v(" "),_c(\'div\',{staticClass:"buttons text-right"},[(_vm.provider !== \'tomowallet\')?_c(\'b-button\',{attrs:{"type":"submit","variant":"primary"}},[_vm._v("Save")]):_vm._e()],1)],1)],1):_vm._e(),_vm._v(" "),(_vm.address)?_c(\'b-card\',{class:\'col-12 col-md-8 col-lg-7 tomo-card tomo-card--lighter p-0\'\n            + (_vm.loading ? \' tomo-loading\' : \'\')},[_c(\'h4\',{staticClass:"h4 color-white tomo-card__title tomo-card__title--big"},[_vm._v("\\n                Account Information")]),_vm._v(" "),_c(\'ul\',{staticClass:"tomo-list list-unstyled"},[_c(\'li\',{staticClass:"tomo-list__item"},[_c(\'i\',{staticClass:"tm-wallet tomo-list__icon"}),_vm._v(" "),_c(\'p\',{staticClass:"tomo-list__text"},[_c(\'router-link\',{staticClass:"text-truncate",attrs:{"to":("/voter/" + _vm.address)}},[_vm._v("\\n                            "+_vm._s(_vm.address)+"\\n                        ")]),_vm._v(" "),_c(\'span\',[_vm._v("Address")])],1)]),_vm._v(" "),_c(\'li\',{staticClass:"tomo-list__item"},[_c(\'i\',{staticClass:"tm-tomo2 tomo-list__icon"}),_vm._v(" "),_c(\'div\',{staticClass:"tomo-list__text"},[_c(\'p\',{staticClass:"color-white mb-0"},[_vm._v(_vm._s(_vm.formatNumber(_vm.balance))+"\\n                        "),_c(\'span\',{staticClass:"text-muted"},[_vm._v(_vm._s(_vm.getCurrencySymbol()))])]),_vm._v(" "),_c(\'span\',[_vm._v("Balance")])])])])]):_vm._e(),_vm._v(" "),(_vm.isReady && (_vm.aw || (_vm.wh.length > 0)))?_c(\'b-card\',{class:\'col-12 col-md-8 col-lg-7 tomo-card tomo-card--lighter p-0\'\n            + (_vm.loading ? \' tomo-loading\' : \'\')},[_c(\'h4\',{staticClass:"h4 color-white tomo-card__title tomo-card__title--big"},[_vm._v("\\n                Withdrawals")]),_vm._v(" "),_vm._l((_vm.withdraws),function(w,k,index){return _c(\'ul\',{key:index,staticClass:"tomo-list list-unstyled"},[(w.blockNumber !== \'0\' && w.cap !== \'0\')?_c(\'li\',{staticClass:"tomo-list__item"},[_c(\'p\',{staticClass:"tomo-list__text"},[_c(\'a\',{attrs:{"href":((_vm.config.explorerUrl) + "/blocks/" + (w.blockNumber))}},[_vm._v("\\n                            "+_vm._s(w.blockNumber))]),_vm._v(" "),_c(\'span\',[_vm._v("Withdrawal Block Number")])]),_vm._v(" "),_c(\'div\',{staticClass:"tomo-list__text"},[_c(\'p\',{staticClass:"color-white mb-0"},[_vm._v(_vm._s(w.cap)+"\\n                        "),_c(\'span\',{staticClass:"text-muted"},[_vm._v(_vm._s(_vm.getCurrencySymbol()))])]),_vm._v(" "),_c(\'span\',[_vm._v("Capacity")])]),_vm._v(" "),_c(\'div\',{staticClass:"tomo-list__text"},[_c(\'b-button\',{staticClass:"float-right",attrs:{"disabled":w.blockNumber > _vm.chainConfig.blockNumber,"variant":"primary"},on:{"click":function($event){return _vm.changeView(w, k)}}},[_vm._v("Withdraw")])],1)]):_vm._e()])}),_vm._v(" "),_vm._l((_vm.wh),function(w,k,index){return _c(\'ul\',{key:index,staticClass:"tomo-list list-unstyled"},[_c(\'li\',{staticClass:"tomo-list__item"},[_c(\'p\',{staticClass:"tomo-list__text"},[_c(\'a\',{attrs:{"href":((_vm.config.explorerUrl) + "/txs/" + (w.tx))}},[_vm._v("\\n                            "+_vm._s((w.tx || \'\').substring(0,8)))]),_vm._v(" "),_c(\'span\',[_vm._v("Transaction")])]),_vm._v(" "),_c(\'div\',{staticClass:"tomo-list__text"},[_c(\'p\',{staticClass:"color-white mb-0"},[_vm._v(_vm._s(w.cap)+"\\n                        "),_c(\'span\',{staticClass:"text-muted"},[_vm._v(_vm._s(_vm.getCurrencySymbol()))])]),_vm._v(" "),_c(\'span\',[_vm._v("Capacity")])]),_vm._v(" "),_c(\'p\',{staticClass:"tomo-list__text"})])])})],2):_vm._e()],1),_vm._v(" "),_c(\'div\',{staticClass:"tomo-modal-light",staticStyle:{"display":"none"},attrs:{"id":"hdwalletModal"}},[_c(\'div\',{staticClass:"modal-backdrop"},[_c(\'div\',{staticClass:"modal"},[_c(\'header\',{staticClass:"modal-header"},[_vm._t("header",[_vm._v("\\n                        Please select the address you would like to interact with\\n                        "),_c(\'button\',{staticClass:"close",attrs:{"type":"button"},on:{"click":_vm.closeModal}},[_vm._v("\\n                            x\\n                        ")])])],2),_vm._v(" "),_c(\'section\',{staticClass:"modal-body"},[_vm._t("hdAddress",[_vm._l((_vm.hdWallets),function(hdwallet,index){return _c(\'div\',{key:index},[_c(\'label\',{staticStyle:{"width":"100%","margin-bottom":"5px","line-height":"16px","cursor":"pointer"}},[_c(\'input\',{staticStyle:{"width":"5%","float":"left"},attrs:{"name":"hdWallet","type":"radio","autocomplete":"off"},domProps:{"value":index}}),_vm._v(" "),_c(\'div\',{staticStyle:{"width":"70%","float":"left"}},[_vm._v("\\n                                    "+_vm._s(hdwallet.address)+"\\n                                ")]),_vm._v(" "),_c(\'div\',{staticStyle:{"width":"20%","margin-left":"2%","float":"left"}},[_vm._v("\\n                                    "+_vm._s(hdwallet.balance)+" "+_vm._s(_vm.getCurrencySymbol())+"\\n                                ")])])])}),_vm._v(" "),_c(\'div\',{staticStyle:{"margin-top":"10px","cursor":"pointer"},attrs:{"id":"moreHdAddresses"},on:{"click":_vm.moreHdAddresses}},[_vm._v("\\n                            More Addresses\\n                        ")])])],2),_vm._v(" "),_c(\'footer\',{staticClass:"modal-footer"},[_vm._t("footer",[_c(\'button\',{staticClass:"btn btn-secondary",attrs:{"type":"button"},on:{"click":_vm.closeModal}},[_vm._v("\\n                            Cancel\\n                        ")]),_vm._v(" "),_c(\'button\',{staticClass:"btn btn-primary",attrs:{"type":"button"},on:{"click":_vm.setHdPath}},[_vm._v("\\n                            Unlock your wallet\\n                        ")])])],2)])])])],1)}\nvar Settingvue_type_template_id_dba217f2_staticRenderFns = []\n\n\n// CONCATENATED MODULE: ./app/components/Setting.vue?vue&type=template&id=dba217f2&\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./app/components/Setting.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\n\n// import localhostUrl from \'../../validators/localhostUrl.js\'\n\n\n// const HDWalletProvider = require(\'truffle-hdwallet-provider\')\nconst { HDWalletProvider } = __webpack_require__(211);\nconst PrivateKeyProvider = __webpack_require__(968);\nconst defaultWalletNumber = 10;\n/* harmony default export */ var Settingvue_type_script_lang_js_ = ({\n    name: \'App\',\n    components: {\n        VueQrcode: vue_qrcode_default.a\n    },\n    mixins: [lib["validationMixin"]],\n    data() {\n        return {\n            isReady: !!this.web3,\n            mnemonic: \'\',\n            hdPath: "m/44\'/889\'/0\'/0", // HD DerivationPath of hardware wallet\n            hdWallets: {}, // list of addresses in hardware wallet\n            config: {},\n            provider: \'tomowallet\',\n            address: \'\',\n            withdraws: [],\n            wh: [],\n            aw: false,\n            balance: 0,\n            chainConfig: {},\n            networks: {\n                mainnet: \'https://rpc.swapdex.net\',\n                rpc: \'https://rpc.swapdex.net\',\n                tomowallet: \'https://rpc.swapdex.net\'\n            },\n            loading: false,\n            qrCode: \'text\',\n            id: \'\',\n            interval: \'\',\n            qrCodeApp: \'\',\n            gasPrice: null\n        };\n    },\n    validations: {\n        networks: {\n            // custom: {\n            //     required,\n            //     localhostUrl\n            // }\n        },\n        mnemonic: {\n            required: validators["required"]\n        },\n        hdPath: {\n            required: validators["required"],\n            minLength: Object(validators["minLength"])(12)\n        }\n    },\n    computed: {\n        mobileCheck: () => {\n            const isAndroid = navigator.userAgent.match(/Android/i);\n            const isIOS = navigator.userAgent.match(/iPhone|iPad|iPod/i);\n            return isAndroid || isIOS;\n        }\n    },\n    watch: {},\n    updated() {},\n    beforeDestroy() {\n        if (this.interval) {\n            clearInterval(this.interval);\n        }\n    },\n    created: async function () {\n        if (this.NetworkProvider) {\n            this.provider = this.NetworkProvider;\n        }\n        let self = this;\n        self.hdWallets = self.hdWallets || {};\n        self.config = store_legacy_default.a.get(\'configMaster\') || (await self.appConfig());\n        self.chainConfig = self.config.blockchain || {};\n        self.networks.rpc = self.chainConfig.rpc;\n\n        self.setupAccount = async () => {\n            let contract;\n            let account;\n            self.address = \'\';\n            try {\n                if (!self.web3 && self.NetworkProvider === \'metamask\') {\n                    throw Error(\'Web3 is not properly detected. Have you installed MetaMask extension?\');\n                }\n                if (!self.web3 && self.NetworkProvider === \'pantograph\') {\n                    throw Error(\'Web3 is not properly detected. Have you installed Pantograph extension?\');\n                }\n                if (self.web3) {\n                    try {\n                        contract = self.TomoValidator;\n                        self.gasPrice = await self.web3.eth.getGasPrice();\n                    } catch (error) {\n                        self.$toasted.show(\'Make sure you choose correct tomochain network.\');\n                    }\n                }\n\n                if (store_legacy_default.a.get(\'address\') && self.isReady) {\n                    account = store_legacy_default.a.get(\'address\').toLowerCase();\n                } else {\n                    account = this.$store.state.address ? this.$store.state.address : self.web3 ? await self.getAccount() : false;\n                }\n\n                if (!account) {\n                    return false;\n                    // if (store.get(\'address\') && self.provider !== \'custom\') {\n                    //     account = store.get(\'address\')\n                    // } else return false\n                }\n\n                self.address = account;\n                self.web3.eth.getBalance(self.address).then(balanceBN => {\n                    self.balance = new bignumber_default.a(balanceBN).div(10 ** 18);\n                }).catch(e => {\n                    self.$toasted.show(\'Cannot load balance\', { type: \'error\' });\n                });\n\n                let whPromise = axios_default.a.get(`/api/owners/${self.address}/withdraws?limit=100`);\n                if (contract) {\n                    // let blksPromise = contract.getWithdrawBlockNumbers.call({ from: account })\n                    let blksPromise = contract.methods.getWithdrawBlockNumbers().call({ from: account });\n                    // let blks = await contract.getWithdrawBlockNumbers.call({ from: account })\n\n                    const blks = await blksPromise;\n\n                    await Promise.all(blks.map(async (it, index) => {\n                        let blk = new bignumber_default.a(it).toString();\n                        if (blk !== \'0\') {\n                            self.aw = true;\n                        }\n                        let wd = {\n                            blockNumber: blk\n                        };\n                        wd.cap = new bignumber_default.a((\n                        // await contract.getWithdrawCap.call(blk, { from: account })\n                        await contract.methods.getWithdrawCap(blk).call({ from: account }))).div(10 ** 18).toFormat();\n                        wd.estimatedTime = await self.getSecondsToHms(wd.blockNumber - self.chainConfig.blockNumber);\n                        self.withdraws[index] = wd;\n                    }));\n                }\n\n                const wh = await whPromise;\n\n                // let wh = await axios.get(`/api/owners/${self.address}/withdraws`)\n                self.wh = [];\n                wh.data.forEach(w => {\n                    let it = {\n                        cap: new bignumber_default.a(w.capacity).div(10 ** 18).toFormat(),\n                        tx: w.tx\n                    };\n                    self.wh.push(it);\n                });\n                self.isReady = true;\n            } catch (e) {\n                console.log(e);\n                self.$toasted.show(e, {\n                    type: \'error\'\n                });\n            }\n        };\n        if (self.provider === \'tomowallet\' && !self.address) {\n            const hasQRCOde = self.loginByQRCode();\n            if (await hasQRCOde) {\n                self.interval = setInterval(async () => {\n                    await this.getLoginResult();\n                }, 3000);\n            }\n        }\n        await self.setupAccount();\n    },\n    mounted() {},\n    methods: {\n        getValidationClass: function (fieldName) {\n            let field = this.$v[fieldName];\n            if (typeof this.$v.networks[fieldName] !== \'undefined\') {\n                field = this.$v.networks[fieldName];\n            }\n            if (field) {\n                return {\n                    \'is-invalid\': field.$error\n                };\n            }\n        },\n        validate: function () {\n            if (this.provider === \'metamask\' || this.provider === \'pantograph\') {\n                this.save();\n            }\n\n            this.$v.$touch();\n            if (this.provider === \'custom\' && !this.$v.mnemonic.$invalid) {\n                this.save();\n            }\n            if (this.provider === \'ledger\' && !this.$v.hdPath.$invalid) {\n                this.selectHdPath();\n            }\n            if (this.provider === \'trezor\' && !this.$v.hdPath.$invalid) {\n                this.hdPath = "m/44\'/60\'/0\'/0";\n                this.selectHdPath();\n            }\n        },\n        selectHdPath: async function (offset = 0, limit = defaultWalletNumber) {\n            let self = this;\n            let wallets;\n            try {\n                self.loading = true;\n                store_legacy_default.a.set(\'hdDerivationPath\', self.hdPath);\n                if (self.provider === \'trezor\') {\n                    await self.unlockTrezor();\n                    wallets = await self.loadTrezorWallets(offset, limit);\n                } else {\n                    await self.unlockLedger();\n                    wallets = await self.loadMultipleLedgerWallets(offset, limit);\n                }\n                if (Object.keys(wallets).length > 0) {\n                    Object.assign(self.hdWallets, self.hdWallets, wallets);\n                    document.getElementById(\'hdwalletModal\').style.display = \'block\';\n                    self.loading = false;\n                }\n            } catch (error) {\n                console.log(error.message);\n                self.loading = false;\n                self.$toasted.show(error.message || error, {\n                    type: \'error\'\n                });\n            }\n        },\n        save: async function () {\n            store_legacy_default.a.clearAll();\n            const self = this;\n            self.address = \'\';\n            self.$store.state.address = null;\n            // clear old data\n            self.withdraws = [];\n            self.aw = [];\n            self.wh = [];\n            var wjs = false;\n            self.loading = true;\n            try {\n                let offset;\n                switch (self.provider) {\n                    case \'metamask\':\n                        if (window.ethereum) {\n                            var p = window.ethereum;\n                            wjs = new src_default.a(p);\n                        }\n                        break;\n                    case \'pantograph\':\n                        if (window.tomoWeb3) {\n                            var pp = window.tomoWeb3.currentProvider;\n                            wjs = new src_default.a(pp);\n                        }\n                        break;\n                    case \'ledger\':\n                        // Object - HttpProvider\n                        wjs = new src_default.a(new src_default.a.providers.HttpProvider(self.networks.rpc));\n                        // Object - IpcProvider: The IPC provider is used node.js dapps when running a local node\n                        // import net from \'net\'\n                        // wjs = new Web3(new Web3.providers.IpcProvider(\'~/.ethereum/geth.ipc\', net))\n\n                        // Object - WebsocketProvider: The Websocket provider is the standard for usage in legacy browsers.\n                        // wjs = await ws.connect(self.networks.wss)\n                        // wjs = new Web3(new Web3.providers.WebsocketProvider(self.chainConfig.ws))\n                        // web3 version 0.2 haven\'t supported WebsocketProvider yet. (for web@1.0 only)\n                        offset = document.querySelector(\'input[name="hdWallet"]:checked\').value.toString();\n                        store_legacy_default.a.set(\'hdDerivationPath\', self.hdPath + \'/\' + offset);\n                        break;\n                    case \'trezor\':\n                        wjs = new src_default.a(new src_default.a.providers.HttpProvider(self.networks.rpc));\n                        offset = document.querySelector(\'input[name="hdWallet"]:checked\').value.toString();\n                        store_legacy_default.a.set(\'hdDerivationPath\', self.hdPath + \'/\' + offset);\n                        store_legacy_default.a.set(\'offset\', offset);\n                        break;\n                    default:\n                        self.mnemonic = self.mnemonic.trim();\n                        const walletProvider = self.mnemonic.indexOf(\' \') >= 0 ? new HDWalletProvider(self.mnemonic.trim(), self.chainConfig.rpc, 0, 1, self.hdPath) : new PrivateKeyProvider(self.mnemonic, self.chainConfig.rpc);\n                        wjs = new src_default.a(walletProvider);\n                        break;\n                }\n                await self.setupProvider(this.provider, wjs);\n                await self.setupAccount();\n                self.loading = false;\n\n                if (self.address) {\n                    self.$store.state.address = self.address.toLowerCase();\n                    if (self.provider === \'metamask\' || self.provider === \'pantograph\') {\n                        store_legacy_default.a.set(\'address\', self.address.toLowerCase());\n                        store_legacy_default.a.set(\'network\', self.provider);\n                    }\n                    self.$bus.$emit(\'logged\', \'user logged\');\n                    self.$toasted.show(\'Network Provider was changed successfully\');\n                }\n            } catch (e) {\n                self.loading = false;\n                self.$toasted.show(\'There are some errors when changing the network provider\', {\n                    type: \'error\'\n                });\n                console.log(e);\n            }\n        },\n        async loginByQRCode() {\n            // generate qr code\n            const { data } = await axios_default.a.get(\'/api/auth/generateLoginQR\');\n            this.id = data.id;\n            this.qrCode = encodeURI(\'tomochain:login?message=\' + data.message + \'&submitURL=\' + data.url);\n            this.qrCodeApp = encodeURI(\'tomochain://login?message=\' + data.message + \'&submitURL=\' + data.url);\n            return true;\n        },\n        async getLoginResult() {\n            // calling api every 2 seconds\n            const { data } = await axios_default.a.get(\'/api/auth/getLoginResult?id=\' + this.id);\n\n            if (!data.error && data) {\n                this.loading = true;\n                if (self.interval) {\n                    clearInterval(self.interval);\n                }\n                await this.getAccountInfo(data.user);\n            }\n        },\n        async onChangeSelect(event) {\n            switch (event) {\n                case \'tomowallet\':\n                    await this.loginByQRCode();\n                    this.interval = setInterval(async () => {\n                        await this.getLoginResult();\n                    }, 3000);\n                    break;\n                case \'trezor\':\n                    this.hdPath = "m/44\'/60\'/0\'/0";\n                    break;\n                case \'ledger\':\n                    this.hdPath = "m/44\'/889\'/0\'/0";\n                    break;\n                default:\n                    if (this.interval) {\n                        clearInterval(this.interval);\n                    }\n                    break;\n            }\n        },\n        async getAccountInfo(account) {\n            const self = this;\n            let contract;\n            self.address = account;\n            self.$store.state.address = account;\n            const web3 = new src_default.a(new HDWalletProvider(\'\', self.chainConfig.rpc, 0, 1, self.hdPath));\n\n            await self.setupProvider(this.provider, web3);\n            try {\n                // contract = await self.getTomoValidatorInstance()\n                contract = self.TomoValidator;\n            } catch (error) {\n                if (self.interval) {\n                    clearInterval(self.interval);\n                }\n                self.$toasted.show(\'Make sure you choose correct tomochain network.\', {\n                    type: \'error\'\n                });\n            }\n\n            self.web3.eth.getBalance(self.address, function (a, b) {\n                self.balance = new bignumber_default.a(b).div(10 ** 18).toFormat();\n                if (a) {\n                    console.log(\'got an error\', a);\n                }\n            });\n            if (contract) {\n                // let blks = await contract.getWithdrawBlockNumbers.call({ from: account })\n                let blks = await contract.methods.getWithdrawBlockNumbers().call({ from: account });\n\n                await Promise.all(blks.map(async (it, index) => {\n                    let blk = new bignumber_default.a(it).toString();\n                    if (blk !== \'0\') {\n                        self.aw = true;\n                    }\n                    let wd = {\n                        blockNumber: blk\n                    };\n                    wd.cap = new bignumber_default.a((\n                    // await contract.getWithdrawCap.call(blk, { from: account })\n                    await contract.methods.getWithdrawCap(blk).call({ from: account }))).div(10 ** 18).toFormat();\n                    wd.estimatedTime = await self.getSecondsToHms(wd.blockNumber - self.chainConfig.blockNumber);\n                    self.withdraws[index] = wd;\n                }));\n            }\n\n            let wh = await axios_default.a.get(`/api/owners/${self.address}/withdraws?limit=100`);\n            self.wh = [];\n            wh.data.forEach(w => {\n                let it = {\n                    cap: new bignumber_default.a(w.capacity).div(10 ** 18).toFormat(),\n                    tx: w.tx\n                };\n                self.wh.push(it);\n            });\n            self.isReady = true;\n            self.loading = false;\n            store_legacy_default.a.set(\'address\', account.toLowerCase());\n            store_legacy_default.a.set(\'network\', self.provider);\n            self.$bus.$emit(\'logged\', \'user logged\');\n            self.$toasted.show(\'Network Provider was changed successfully\');\n            if (this.interval) {\n                clearInterval(this.interval);\n            }\n        },\n        changeView(w, k) {\n            const txFee = new bignumber_default.a(this.chainConfig.gas * this.gasPrice).div(10 ** 18);\n\n            if (this.balance.isGreaterThanOrEqualTo(txFee)) {\n                this.$router.push({ name: \'CandidateWithdraw\',\n                    params: {\n                        address: this.address,\n                        blockNumber: w.blockNumber,\n                        capacity: w.cap,\n                        index: k\n                    }\n                });\n            } else {\n                this.$toasted.show(\'Not enough SDX for transaction fee\', {\n                    type: \'info\'\n                });\n            }\n        },\n        closeModal() {\n            document.getElementById(\'hdwalletModal\').style.display = \'none\';\n        },\n        async setHdPath() {\n            document.getElementById(\'hdwalletModal\').style.display = \'none\';\n            await this.save();\n        },\n        async moreHdAddresses() {\n            document.getElementById(\'moreHdAddresses\').style.cursor = \'wait\';\n            document.body.style.cursor = \'wait\';\n            await this.selectHdPath(Object.keys(this.hdWallets).length, this.defaultWalletNumber);\n            document.getElementById(\'moreHdAddresses\').style.cursor = \'pointer\';\n            document.body.style.cursor = \'default\';\n        },\n        changePath(path) {\n            this.hdPath = path;\n        }\n    }\n});\n// CONCATENATED MODULE: ./app/components/Setting.vue?vue&type=script&lang=js&\n /* harmony default export */ var components_Settingvue_type_script_lang_js_ = (Settingvue_type_script_lang_js_); \n// CONCATENATED MODULE: ./app/components/Setting.vue\n\n\n\n\n\n/* normalize component */\n\nvar Setting_component = Object(componentNormalizer["a" /* default */])(\n  components_Settingvue_type_script_lang_js_,\n  Settingvue_type_template_id_dba217f2_render,\n  Settingvue_type_template_id_dba217f2_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var Setting = (Setting_component.exports);\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./app/components/PrivacyPolicy.vue?vue&type=template&id=200612a4&\nvar PrivacyPolicyvue_type_template_id_200612a4_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',{staticClass:"container"},[_c(\'div\',{staticClass:"row"},[_c(\'b-card\',{staticClass:"tomo-card"},[_c(\'div\',{staticClass:"col-12"},[_c(\'h1\',{staticStyle:{"text-align":"center"}},[_vm._v("\\n                    PRIVACY POLICY\\n                ")])]),_vm._v(" "),_c(\'div\',{staticClass:"container"},[_c(\'p\',[_vm._v("\\n                    Last updated: November, 2018\\n                ")]),_vm._v(" "),_c(\'h3\',{staticStyle:{"text-align":"center"}},[_vm._v("INTRODUCTION")]),_vm._v(" "),_c(\'p\',[_vm._v("\\n                    Welcome to SdxMaster, a free, open-source, client-side tool for interacting with the\\n                    blockchain. TomoChain values privacy and we make a concerted effort to minimize and,\\n                    to the extent possible, eliminate the exposure of personal data during the use of our\\n                    interface. SdxMaster does not collect, hold, or store keys, account information,\\n                    or passwords. We do not collect data passively, do not monetize the collection of data,\\n                    and do not use your data for marketing or advertising.\\n                ")]),_vm._v(" "),_c(\'p\',[_vm._v("\\n                    To the extent we collect any personal information, this privacy policy (“Policy”)\\n                    describes how SdxMaster collects, uses, and shares personal information of people who visit\\n                    our website (the “Site”), use our mobile application, SdxMaster (the “App”),\\n                    or otherwise use our services (collectively, the “Services”).\\n                ")]),_vm._v(" "),_c(\'p\',[_vm._v("\\n                    This Policy applies to anyone who accesses the Services. Please read the Policy carefully to\\n                    understand our practices regarding your information and how we will treat it.\\n                    By visiting the Site, App, and/or using the Services, you acknowledge that the collection,\\n                    use, and sharing of your information will take place as described in this Policy.\\n                ")]),_vm._v(" "),_c(\'p\',[_vm._v("\\n                    So that we are clear about the terminology we are using, when we use the phrase\\n                    “Personal Information” in this Privacy Policy, we mean information about an individual that\\n                    (either by itself or when combined with information from other available sources) allows that\\n                    individual to be identified, including, the individual’s name,\\n                    telephone number, or e-mail address.\\n                ")]),_vm._v(" "),_c(\'h3\',{staticStyle:{"text-align":"center"}},[_vm._v("\\n                    THE BLOCKCHAIN")]),_vm._v(" "),_c(\'p\',[_vm._v("\\n                    Due to the inherent transparency of many blockchains, including the TomoChain Blockchain,\\n                    transactions that individuals broadcast via SdxMaster may be publicly accessible.\\n                    This includes, but is not limited to, your public sending address, the public address of the\\n                    receiver, the amount sent or received, and any other data a user has chosen to include in a\\n                    given transaction. Information stored on a blockchain may be public, immutable, and difficult or\\n                    even impossible to remove or delete. Transactions and addresses may reveal information\\n                    about the user’s identity and information can potentially be correlated now or in the future\\n                    by any party who chooses to do so, including law enforcement. Users are encouraged\\n                    to review how privacy and transparency on the blockchain works.\\n                ")]),_vm._v(" "),_c(\'h3\',{staticStyle:{"text-align":"center"}},[_vm._v("WHAT WE COLLECT")]),_vm._v(" "),_c(\'p\',[_vm._v("\\n                    We collect information about you as described below.\\n                    We use this information to enhance your experience with our Services.\\n                ")]),_vm._v(" "),_c(\'h5\',[_vm._v("Information You Provide")]),_vm._v(" "),_c(\'p\',[_vm._v("\\n                    We may collect Personal Information you choose to provide to us. For example,\\n                    when you contact us for support through the Services, you give us with your e-mail address and\\n                    any other information that you choose to provide. Also, if you participate in a\\n                    SdxMaster offer, give-away, or promotion (“Promotion”), you provide your name,\\n                    e-mail address, and mailing address.\\n                ")]),_vm._v(" "),_c(\'h5\',[_vm._v("California Do Not Track Disclosures")]),_vm._v(" "),_c(\'p\',[_vm._v("\\n                    SdxMaster does not track users over time and across third party websites to provide targeted\\n                    advertising and therefore does not respond to Do Not Track (DNT) signals.\\n                ")]),_vm._v(" "),_c(\'h3\',{staticStyle:{"text-align":"center"}},[_vm._v("USE OF INFORMATION")]),_vm._v(" "),_c(\'p\',[_vm._v("\\n                    We use the information that we have about you to provide support and certain Services to you.\\n                ")]),_vm._v(" "),_c(\'p\',[_vm._v("\\n                    We may use the Personal Information we collect from and about you to (1) provide you with\\n                    information or services that you request from us, including to respond to your comments,\\n                    questions, and/or provide customer service; (2) monitor and analyze usage and trends and\\n                    personalize and improve the Services and your experience using the Services; and (3) for any\\n                    other purpose with your consent.\\n                ")]),_vm._v(" "),_c(\'h3\',{staticStyle:{"text-align":"center"}},[_vm._v("SHARING OF PERSONAL INFORMATION")]),_vm._v(" "),_c(\'p\',[_vm._v("\\n                    We will not disclose your Personal Information other than as described below, and we do\\n                    not and will not sell your Personal Information to anyone.\\n                ")]),_vm._v(" "),_c(\'p\',[_vm._v("\\n                    We may share the Personal Information we collect from and about you (1) to fulfill the\\n                    purpose for which you provided it; (2) with your consent; (3) for legal, protection, and\\n                    safety purposes; (4) to comply with any court order, law, or legal process, including to respond\\n                    to any government or regulatory request; (5) to protect the rights of SdxMaster, our agents,\\n                    customers, and others, including by enforcing our agreements, policies, and terms of service;\\n                    and (6) with those who need it to do work for us (our Service Providers, as defined below).\\n                ")]),_vm._v(" "),_c(\'h5\',[_vm._v("Service providers")]),_vm._v(" "),_c(\'p\',[_vm._v("\\n                    We may contract with third parties to perform functions related to the Services\\n                    (“Service Providers”). In general, Service Providers will have access to your\\n                    Personal Information only to the extent needed to perform their business functions but\\n                    may not use or share that personal information for purposes outside the scope of\\n                    their functions related to the Services.\\n                ")]),_vm._v(" "),_c(\'h3\',{staticStyle:{"text-align":"center"}},[_vm._v("LINKS TO OTHER SITES")]),_vm._v(" "),_c(\'p\',[_vm._v("\\n                    The Services contain links to other third-party websites or applications.\\n                    Once you click on such a link and leave the Site or are redirected to a third-party website\\n                    or application, you are no longer governed by this Policy. Any information you provide on\\n                    those sites is subject to that third party’s privacy policy and we are not responsible for the\\n                    privacy and security practices and policies of those third-party sites or applications.\\n                ")]),_vm._v(" "),_c(\'h3\',{staticStyle:{"text-align":"center"}},[_vm._v("OUR COMMITMENT TOWARDS CHILDREN\'S PRIVACY")]),_vm._v(" "),_c(\'p\',[_vm._v("\\n                    We do not direct the Services to, nor do we knowingly collect any Personal Information\\n                    from children under 13. Children under 13 are not eligible to use the Services. If we learn that\\n                    someone using our Services is under 13 years of age, we will take steps to remove any Personal\\n                    Information from our database and to prevent them from utilizing the Services.\\n                ")]),_vm._v(" "),_c(\'h3\',{staticStyle:{"text-align":"center"}},[_vm._v("SECURITY OF YOUR PERSONAL INFORMATION & RIGHTS")]),_vm._v(" "),_c(\'p\',[_vm._v("\\n                    We are committed to protecting the security of Personal Information. We have taken certain\\n                    physical, administrative, and technical steps to help safeguard the information we collect\\n                    from and about you. While we take steps to help ensure the integrity and security of our network\\n                    and systems, we cannot guarantee our security measures.\\n                ")]),_vm._v(" "),_c(\'p\',[_vm._v("\\n                    In certain circumstances, you will also have the following rights:\\n                ")]),_vm._v(" "),_c(\'ol\',[_c(\'li\',[_vm._v("\\n                        Right to access: the right to request certain information about, access to and copies of any\\n                        Personal Information about you that we are holding (please note that you are entitled to\\n                        request one copy of the Personal Information that we hold about you at no cost, but for any\\n                        further copies, we reservethe right to charge a reasonable fee based on\\n                        administration costs);\\n                    ")]),_vm._v(" "),_c(\'li\',[_vm._v("\\n                        Right to rectification: the right to have your\\n                        Personal Information rectified if it is inaccurate or incomplete;\\n                    ")]),_vm._v(" "),_c(\'li\',[_vm._v("\\n                        Right to erasure/“right to be forgotten”: where the processing of your information is based\\n                        on your consent, the right to withdraw that consent and the right to request that we delete\\n                        or erase your Personal Information from our systems (however, this will not apply if we are\\n                        required to hold on to the information for compliance with any legal obligation, or if we\\n                        require the information to establish or defend any legal claim);\\n                    ")]),_vm._v(" "),_c(\'li\',[_vm._v("\\n                        Right to restriction of use of your information: the right to stop us from using your\\n                        Personal Information or limit the way in which we can use it;\\n                    ")]),_vm._v(" "),_c(\'li\',[_vm._v("\\n                        Right to data portability: the right to request that we return any information you have\\n                        provided in a structured, commonly used, and machine-readable format, or that we send it\\n                        directly to another company, where technically feasible; and\\n                    ")]),_vm._v(" "),_c(\'li\',[_vm._v("\\n                        Right to object: the right to object to our use of your Personal Information including\\n                        where we use it for our legitimate interests.\\n                    ")])]),_vm._v(" "),_c(\'p\',[_vm._v("\\n                    Requests in relation to the above rights should be sent to:\\n                    "),_c(\'a\',{attrs:{"href":("mail:to" + _vm.email)}},[_vm._v(_vm._s(_vm.email))])]),_vm._v(" "),_c(\'h5\',[_vm._v("Legal Basis for Processing")]),_vm._v(" "),_c(\'p\',[_vm._v("\\n                    The following legal bases apply to the ways in which we use and share an individual’s\\n                    Personal Information:\\n                ")]),_vm._v(" "),_c(\'ol\',[_c(\'li\',[_vm._v("\\n                        We rely on an individual’s consent to process Personal Information to provide support\\n                        and/or carry out Promotions. This consent can be withdrawn at any time.\\n                    ")]),_vm._v(" "),_c(\'li\',[_vm._v("\\n                        We also process the information provided by an individual in our legitimate interests\\n                        in ensuring our business is conducted legitimately and to a high standard.\\n                    ")])]),_vm._v(" "),_c(\'h3\',{staticStyle:{"text-align":"center"}},[_vm._v("RETENTION")]),_vm._v(" "),_c(\'p\',[_vm._v("\\n                    We will retain the information you provide in order to process your request, provide\\n                    support, and/or carry out and fulfill our Promotions. If you request support, we will retain\\n                    your information for no longer than six (6) months. If you participate in a Promotion, we will\\n                    retain your information until the Promotion is carried out and ninety (90) days after any\\n                    prize, reward, or offer is fulfilled. Your Personal Information will then be deleted.\\n                ")]),_vm._v(" "),_c(\'h3\',{staticStyle:{"text-align":"center"}},[_vm._v("CONTACT INFORMATION")]),_vm._v(" "),_c(\'p\',[_vm._v("\\n                    We welcome your comments or questions about this Policy. You may contact us at\\n                    "),_c(\'a\',{attrs:{"href":("mail:to" + _vm.email)}},[_vm._v(_vm._s(_vm.email))])]),_vm._v(" "),_c(\'h3\',{staticStyle:{"text-align":"center"}},[_vm._v("CHANGES TO PRIVACY POLICY")]),_vm._v(" "),_c(\'p\',[_vm._v("\\n                    We may modify this Policy from time to time. If we make any changes, we will change the\\n                    Last Updated date above. We also may provide additional notice, as applicable, depending on\\n                    the type of change. If you object to any changes, you may stop using the Services. Your\\n                    continued use of the Services after we publish or otherwise provide notice about our changes\\n                    to the Policy means that you are consenting to the updated Policy.\\n                ")])])])],1)])}\nvar PrivacyPolicyvue_type_template_id_200612a4_staticRenderFns = []\n\n\n// CONCATENATED MODULE: ./app/components/PrivacyPolicy.vue?vue&type=template&id=200612a4&\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./app/components/PrivacyPolicy.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* harmony default export */ var PrivacyPolicyvue_type_script_lang_js_ = ({\n    data: () => {\n        return {\n            email: \'admin@swapdex.net\'\n        };\n    }\n});\n// CONCATENATED MODULE: ./app/components/PrivacyPolicy.vue?vue&type=script&lang=js&\n /* harmony default export */ var components_PrivacyPolicyvue_type_script_lang_js_ = (PrivacyPolicyvue_type_script_lang_js_); \n// CONCATENATED MODULE: ./app/components/PrivacyPolicy.vue\n\n\n\n\n\n/* normalize component */\n\nvar PrivacyPolicy_component = Object(componentNormalizer["a" /* default */])(\n  components_PrivacyPolicyvue_type_script_lang_js_,\n  PrivacyPolicyvue_type_template_id_200612a4_render,\n  PrivacyPolicyvue_type_template_id_200612a4_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var PrivacyPolicy = (PrivacyPolicy_component.exports);\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./app/components/TermsOfService.vue?vue&type=template&id=29d08193&\nvar TermsOfServicevue_type_template_id_29d08193_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',{staticClass:"container"},[_c(\'b-card\',{staticClass:"tomo-card"},[_c(\'h1\',{staticStyle:{"text-align":"center"}},[_vm._v("\\n            Terms Of Service\\n        ")]),_vm._v(" "),_c(\'div\',{staticClass:"container"},[_c(\'h3\',{staticStyle:{"text-align":"center"}},[_vm._v("LEGAL DISCLAIMER")]),_vm._v(" "),_c(\'h5\',[_vm._v("1. Risks related to the use of SdxMaster ")]),_vm._v(" "),_c(\'p\',[_vm._v("\\n                SdxMaster will not be responsible for any losses, damages or claims arising from\\n                events falling within the scope of the following five categories:\\n            ")]),_vm._v(" "),_c(\'p\',[_vm._v("\\n                (1) Mistakes made by the user of any cryptocurrency-related software or service,\\n                e.g., forgotten passwords, and payments sent to wrong coin addresses.\\n            ")]),_vm._v(" "),_c(\'p\',[_vm._v("\\n                (2) Software problems of SdxMaster and/or any cryptocurrency-related software\\n                or service, e.g., corrupted wallet file, incorrectly constructed transactions,\\n                unsafe cryptographic libraries, malware affecting the wallet and/or any\\n                cryptocurrency-related software or service.\\n            ")]),_vm._v(" "),_c(\'p\',[_vm._v("\\n                (3) Technical failures in the hardware of the user of any cryptocurrency-related\\n                software or service, e.g., data loss due to a faulty or damaged storage device.\\n            ")]),_vm._v(" "),_c(\'p\',[_vm._v("\\n                (4) Security problems experienced by the user of any cryptocurrency-related\\n                software or service, e.g., unauthorized access to users\' wallets and/or accounts.\\n            ")]),_vm._v(" "),_c(\'p\',[_vm._v("\\n                (5) Actions or inactions of third parties and/or events experienced by third\\n                parties, e.g., bankruptcy of service providers, information security attacks\\n                on service providers, and fraud conducted by third parties.\\n            ")]),_vm._v(" "),_c(\'h5\',[_vm._v("2. Trading and Investment risks")]),_vm._v(" "),_c(\'p\',[_vm._v("\\n                There is considerable exposure to risk in any crypto-currency exchange transaction.\\n                Any transaction involving currencies involves risks including, but not limited to,\\n                the potential for changing economic conditions that may substantially affect the price\\n                or liquidity of a currency. Investments in crypto-currency exchange speculation may also\\n                be susceptible to sharp rises and falls as the relevant market values fluctuate. It is for\\n                this reason that when speculating in such markets it is advisable to use only risk capital.\\n            ")]),_vm._v(" "),_c(\'h5\',[_vm._v("3. Compliance with tax obligations")]),_vm._v(" "),_c(\'p\',[_vm._v("\\n                The users of SdxMaster are solely responsible to determinate what, if any, taxes apply\\n                to their crypto-currency transactions. The owners of, or contributors to, SdxMaster are NOT\\n                responsible for determining the taxes that apply to crypto-currency transactions.\\n            ")]),_vm._v(" "),_c(\'h5\',[_vm._v("4. Limitation of liability")]),_vm._v(" "),_c(\'p\',[_vm._v("\\n                Unless otherwise required by law, in no event shall the owners of, or contributors to,\\n                the wallet be liable for any damages of any kind, including, but not limited to, loss of use,\\n                loss of profits, or loss of data arising out of or in any way connected with the use of the wallet.\\n                In no way are the owners of, or contributors to, the wallet responsible for the actions, decisions,\\n                or other behavior taken or not taken by you in reliance upon the wallet.\\n            ")]),_vm._v(" "),_c(\'h5\',[_vm._v("5. Arbitration")]),_vm._v(" "),_c(\'p\',[_vm._v("\\n                The user of SdxMaster agrees to arbitrate any dispute arising from or in connection with\\n                the service or this disclaimer, except for disputes related to copyrights, logos, trademarks,\\n                trade names, trade secrets or patents.\\n            ")]),_vm._v(" "),_c(\'h5\',[_vm._v("6. Last amendment")]),_vm._v(" "),_c(\'p\',[_vm._v("\\n                This disclaimer was amended for the last time on November 22nd, 2018.\\n            ")])])])],1)}\nvar TermsOfServicevue_type_template_id_29d08193_staticRenderFns = []\n\n\n// CONCATENATED MODULE: ./app/components/TermsOfService.vue?vue&type=template&id=29d08193&\n\n// CONCATENATED MODULE: ./app/components/TermsOfService.vue\n\nvar script = {}\n\n\n/* normalize component */\n\nvar TermsOfService_component = Object(componentNormalizer["a" /* default */])(\n  script,\n  TermsOfServicevue_type_template_id_29d08193_render,\n  TermsOfServicevue_type_template_id_29d08193_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var TermsOfService = (TermsOfService_component.exports);\n// CONCATENATED MODULE: ./app/routes.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst routes = [{\n    path: \'/\', component: List\n}, {\n    path: \'/apply\', component: Apply\n}, {\n    path: \'/resign\', component: Resign\n}, {\n    path: \'/resign/:address\', component: Resign\n}, {\n    path: \'/withdraw\', component: Withdraw, name: \'CandidateWithdraw\'\n}, {\n    path: \'/withdraw/:address\', component: Withdraw\n}, {\n    path: \'/candidates\', component: List\n}, {\n    path: \'/candidate/:address\', component: View\n}, {\n    path: \'/candidate/:address/update\', component: Update\n}, {\n    path: \'/voter/:address\', component: voters_View\n}, {\n    path: \'/voting/:candidate\', component: Voting\n}, {\n    path: \'/unvoting/:candidate\', component: Unvoting\n}, {\n    path: \'/confirm/:transaction\', component: Confirm\n}, {\n    path: \'/setting\', component: Setting\n}, {\n    path: \'/privacyPolicy\', component: PrivacyPolicy\n}, {\n    path: \'/terms\', component: TermsOfService\n}];\n\n/* harmony default export */ var app_routes = __webpack_exports__["a"] = (routes);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///552\n')},553:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./app/App.vue?vue&type=template&id=26a7ed4e&\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',{attrs:{"id":"app"}},[_c(\'div\',{staticClass:"page-layout"},[_c(\'b-navbar\',{attrs:{"toggleable":"lg","type":"dark","variant":"info"}},[_c(\'div\',{staticClass:"container"},[_c(\'b-navbar-brand\',{attrs:{"to":"/"}},[_c(\'img\',{attrs:{"src":"/app/assets/img/logo-smart-dex-chain.png"}})]),_vm._v(" "),_c(\'b-navbar-toggle\',{staticClass:"btn-menu-sp",attrs:{"target":"nav-collapse"}}),_vm._v(" "),_c(\'b-collapse\',{attrs:{"id":"nav-collapse","is-nav":""}},[_c(\'b-navbar-nav\',{staticClass:"ml-auto "},[_c(\'b-nav-form\',{staticClass:"search-form"},[_c(\'auto-complete\',{attrs:{"items":_vm.items},model:{value:(_vm.search),callback:function ($$v) {_vm.search=$$v},expression:"search"}}),_vm._v(" "),_c(\'b-button\',{attrs:{"variant":"outline-success","type":"submit"},on:{"click":_vm.searchCandidate}},[_vm._v("Search")])],1)],1),_vm._v(" "),_c(\'b-navbar-nav\',{staticClass:"ml-auto navbar-buttons"},[(!_vm.isTomonet)?_c(\'b-button\',{attrs:{"id":"btn-become-candidate","to":"/setting","variant":"primary"}},[_vm._v("Login")]):_c(\'b-button\',{attrs:{"id":"btn-become-candidate","to":"/apply","variant":"primary"}},[_vm._v("Register a Masternode")]),_vm._v(" "),_c(\'b-dropdown\',{staticClass:"dd-setting ml-3",attrs:{"right":"","offset":"25","no-caret":"","variant":"link"}},[_c(\'template\',{slot:"button-content"},[_c(\'i\',{staticClass:"tm-bell icon-2x",on:{"click":_vm.readClick}}),_vm._v(" "),_c(\'span\',{class:"notification__bell tomo-status-dot tomo-status-dot--yellow",style:((_vm.isTomonet ? (_vm.readNoti <= 0 ? \'display: none;\': \'\') : _vm.statusClass))})]),_vm._v(" "),_c(\'b-dropdown-text\',[_c(\'div\',{staticClass:"notification_header"},[_c(\'span\',{staticClass:"float-left"},[_vm._v("Notifications")]),_vm._v(" "),_c(\'b-button\',{staticClass:"float-right readAllBtn",attrs:{"variant":"primary"},on:{"click":_vm.markReadAll}},[_vm._v("Mark all as read")])],1)]),_vm._v(" "),_c(\'b-dropdown-divider\'),_vm._v(" "),(_vm.isTomonet)?_c(\'div\',{staticClass:"notification_body"},[(_vm.notifications.length <= 0)?_c(\'div\',{staticClass:"notification_body__empty"},[_vm._v("\\n                                    No notifications.")]):_vm._e(),_vm._v(" "),_vm._l((_vm.notifications),function(value,key){return _c(\'div\',{key:key},[(value.event === \'Slash\')?_c(\'b-dropdown-text\',[_c(\'div\',[_c(\'span\',{staticClass:"notification_body__content",style:(value.isRead ? \'\' :\n                                                \'font-weight: bold;\')},[_c(\'span\',{staticClass:"notification_label slashed"},[_vm._v("Slashed")]),_vm._v("\\n                                                Masternode\\n                                                ["),_c(\'router-link\',{attrs:{"to":("/candidate/" + (value.candidate))}},[_c(\'span\',{staticClass:"masternode-name"},[_vm._v(_vm._s(value.name))])]),_vm._v("]\\n                                                has been slashed\\n                                            ")],1),_vm._v(" "),_c(\'div\',{staticClass:"notification_body__time"},[_vm._v("SDXMaster -\\n                                                "+_vm._s(value.createdAt))])])]):_vm._e(),_vm._v(" "),(value.event === \'Slash\' &&\n                                        key !== _vm.notifications.length - 1)?_c(\'b-dropdown-divider\'):_vm._e(),_vm._v(" "),(value.event === \'Outtop\')?_c(\'b-dropdown-text\',[_c(\'div\',[_c(\'span\',{staticClass:"notification__content",style:(value.isRead ? \'\' :\n                                                \'font-weight: bold;\')},[_c(\'span\',{staticClass:"notification_label outtop"},[_vm._v("Out top")]),_vm._v("\\n                                                Masternode ["),_c(\'router-link\',{attrs:{"to":("/candidate/" + (value.candidate))}},[_c(\'span\',{staticClass:"masternode-name"},[_vm._v(_vm._s(value.name))])]),_vm._v("]\\n                                                left the top 1500 and is no longer a masternode.\\n                                            ")],1),_vm._v(" "),_c(\'div\',{staticClass:"notification__time"},[_vm._v("SDXMaster -\\n                                                "+_vm._s(value.createdAt))])])]):_vm._e(),_vm._v(" "),(value.event === \'Outtop\' &&\n                                        key !== _vm.notifications.length - 1)?_c(\'b-dropdown-divider\'):_vm._e(),_vm._v(" "),(value.event === \'Propose\')?_c(\'b-dropdown-text\',[_c(\'div\',[_c(\'span\',{staticClass:"notification__content",style:(value.isRead ? \'\' :\n                                                \'font-weight: bold;\')},[_c(\'span\',{staticClass:"notification_label proposed"},[_vm._v("Proposed")]),_vm._v("\\n                                                Congratulation for having your own new candidate!\\n                                                Its time to gather votes from community by promoting it and\\n                                                be in top 1500 to get your first reward.\\n                                            ")]),_vm._v(" "),_c(\'div\',{staticClass:"notification__time"},[_vm._v("SDXMaster -\\n                                                "+_vm._s(value.createdAt))])])]):_vm._e(),_vm._v(" "),(value.event === \'Propose\' &&\n                                        key !== _vm.notifications.length - 1)?_c(\'b-dropdown-divider\'):_vm._e(),_vm._v(" "),(value.event === \'Resign\')?_c(\'b-dropdown-text\',[_c(\'div\',[_c(\'span\',{staticClass:"notification__content",style:(value.isRead ? \'\' :\n                                                \'font-weight: bold;\')},[_c(\'span\',{staticClass:"notification_label resigned"},[_vm._v("Resigned")]),_vm._v("\\n                                                Masternode ["),_c(\'router-link\',{attrs:{"to":("/candidate/" + (value.candidate))}},[_c(\'span\',{staticClass:"masternode-name"},[_vm._v(_vm._s(value.name))])]),_vm._v("] resigned\\n                                            ")],1),_vm._v(" "),_c(\'div\',{staticClass:"notification__time"},[_vm._v("SDXMaster -\\n                                                "+_vm._s(value.createdAt))])])]):_vm._e(),_vm._v(" "),(value.event === \'Resign\' &&\n                                        key !== _vm.notifications.length - 1)?_c(\'b-dropdown-divider\'):_vm._e(),_vm._v(" "),(value.event === \'Withdraw\')?_c(\'b-dropdown-text\',[_c(\'div\',[_c(\'span\',{staticClass:"notification__content",style:(value.isRead ? \'\' :\n                                                \'font-weight: bold;\')},[_c(\'span\',{staticClass:"notification_label withdraw"},[_vm._v("Withdraw")]),_vm._v("\\n                                                "+_vm._s(value.amount)+" unvoted SDX are ready to withdraw\\n                                            ")]),_vm._v(" "),_c(\'div\',{staticClass:"notification__time"},[_vm._v("SDXMaster -\\n                                                "+_vm._s(value.createdAt))])])]):_vm._e(),_vm._v(" "),(value.event === \'Withdraw\' &&\n                                        key !== _vm.notifications.length - 1)?_c(\'b-dropdown-divider\'):_vm._e()],1)})],2):_vm._e(),_vm._v(" "),(!_vm.isTomonet)?_c(\'div\',{staticClass:"notification_body"},[_c(\'b-dropdown-text\',[_c(\'div\',{staticStyle:{"font-size":"13px"}},[_c(\'strong\',[_vm._v("SDXMaster up to 1.0")]),_vm._v(" "),_c(\'p\',[_vm._v("Applying for masternodes and staking is active")])])])],1):_vm._e(),_vm._v(" "),(!_vm.isTomonet)?_c(\'b-dropdown-divider\'):_vm._e(),_vm._v(" "),(!_vm.isTomonet)?_c(\'b-dropdown-text\',{staticClass:"notification_bottom"},[_vm._v("\\n                                SDXMaster - V1.0\\n                            ")]):_vm._e()],2),_vm._v(" "),(_vm.isTomonet)?_c(\'b-dropdown\',{staticClass:"dd-setting ml-1",attrs:{"right":"","offset":"25","no-caret":"","variant":"primary"}},[_c(\'template\',{slot:"button-content"},[_c(\'i\',{staticClass:"tm-cog icon-2x"})]),_vm._v(" "),_c(\'b-dropdown-item\',{staticClass:"dd-address",attrs:{"to":("/voter/" + _vm.account)}},[_vm._v("\\n                                "+_vm._s(_vm.truncate(_vm.account, 20))+"\\n                            ")]),_vm._v(" "),_c(\'b-dropdown-divider\'),_vm._v(" "),_c(\'b-dropdown-item\',{attrs:{"target":"_bank","href":"https://bit.ly/2B6p29o"}},[_vm._v("Help")]),_vm._v(" "),_c(\'b-dropdown-item\',{attrs:{"to":"/setting"}},[_vm._v("Settings/Withdraws")]),_vm._v(" "),_c(\'b-dropdown-divider\'),_vm._v(" "),(!_vm.mobileCheck && _vm.isTomonet)?_c(\'b-dropdown-item\',{attrs:{"href":"/"},on:{"click":_vm.signOut}},[_vm._v("Sign out")]):_vm._e()],2):_vm._e()],1)],1)],1)]),_vm._v(" "),_c(\'div\',{staticClass:"main-content"},[_c(\'router-view\')],1),_vm._v(" "),_c(\'footer\',{staticClass:"tomo-footer"},[_c(\'div\',{staticClass:"container"},[_c(\'div\',{staticClass:"row"},[_c(\'div\',{staticClass:"col-md-8"},[_c(\'div\',{staticClass:"tomo-footer__copyright"},[_vm._v("\\n                            SDXMaster © "+_vm._s((new Date()).getFullYear())+" -\\n                            "),_c(\'a\',{staticClass:"version-tag",attrs:{"href":("https://github.com/69th-byte/sdxmaster/releases/tag/v" + _vm.version)}},[_vm._v("\\n                                v"+_vm._s(_vm.version))])]),_vm._v(" "),_c(\'div\',{staticClass:"tomo-footer__links"},[_c(\'ul\',{staticClass:"list-inline"},[_c(\'li\',{staticClass:"list-inline-item"},[_c(\'a\',{attrs:{"href":_vm.needHelpLink,"target":"_blank"}},[_c(\'i\',{staticClass:"tm-lifebuoy mr-1"}),_vm._v("Need help?")])]),_vm._v(" "),_vm._m(0),_vm._v(" "),_vm._m(1)])])]),_vm._v(" "),_vm._m(2)])])])],1)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'li\',{staticClass:"list-inline-item"},[_c(\'a\',{attrs:{"target":"_blank","href":"#"}},[_c(\'i\',{staticClass:"tm-lock mr-1"}),_vm._v("Privacy Policy")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'li\',{staticClass:"list-inline-item"},[_c(\'a\',{attrs:{"target":"_blank","href":"#"}},[_c(\'i\',{staticClass:"tm-profile mr-1"}),_vm._v("Terms of Use")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',{staticClass:"col-md-4 tomo-footer__social"},[_c(\'ul\',{staticClass:"list-inline"},[_c(\'li\',{staticClass:"list-inline-item"},[_c(\'a\',{attrs:{"href":"https://t.me/Officialswapdex","target":"_blank"}},[_c(\'i\',{staticClass:"tm-telegram"})])]),_vm._v(" "),_c(\'li\',{staticClass:"list-inline-item"},[_c(\'a\',{attrs:{"href":"https://www.facebook.com/swapdex","target":"_blank"}},[_c(\'i\',{staticClass:"tm-facebook"})])]),_vm._v(" "),_c(\'li\',{staticClass:"list-inline-item"},[_c(\'a\',{attrs:{"href":"https://twitter.com/SwapdexO","target":"_blank"}},[_c(\'i\',{staticClass:"tm-twitter"})])]),_vm._v(" "),_c(\'li\',{staticClass:"list-inline-item"},[_c(\'a\',{attrs:{"href":"https://github.com/69th-byte","target":"_blank"}},[_c(\'i\',{staticClass:"tm-github"})])])])])}]\n\n\n// CONCATENATED MODULE: ./app/App.vue?vue&type=template&id=26a7ed4e&\n\n// EXTERNAL MODULE: ./node_modules/axios/index.js\nvar axios = __webpack_require__(5);\nvar axios_default = /*#__PURE__*/__webpack_require__.n(axios);\n\n// EXTERNAL MODULE: ./node_modules/store/dist/store.legacy.js\nvar store_legacy = __webpack_require__(4);\nvar store_legacy_default = /*#__PURE__*/__webpack_require__.n(store_legacy);\n\n// EXTERNAL MODULE: ./node_modules/moment/moment.js\nvar moment = __webpack_require__(1);\nvar moment_default = /*#__PURE__*/__webpack_require__.n(moment);\n\n// EXTERNAL MODULE: ./package.json\nvar package_0 = __webpack_require__(543);\n\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./app/components/AutoComplete.vue?vue&type=template&id=39c39c24&\nvar AutoCompletevue_type_template_id_39c39c24_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',{staticClass:"autocomplete"},[_c(\'input\',{directives:[{name:"model",rawName:"v-model",value:(_vm.search),expression:"search"}],staticClass:"form-control",attrs:{"id":"search-input","type":"text","placeholder":"Search Masternode / Staker"},domProps:{"value":(_vm.search)},on:{"input":[function($event){if($event.target.composing){ return; }_vm.search=$event.target.value},_vm.onChange],"focus":_vm.onChange,"keydown":[function($event){if(!$event.type.indexOf(\'key\')&&_vm._k($event.keyCode,"enter",13,$event.key,"Enter")){ return null; }return _vm.onEnter($event)},function($event){if(!$event.type.indexOf(\'key\')&&_vm._k($event.keyCode,"esc",27,$event.key,["Esc","Escape"])){ return null; }return _vm.onEsc($event)},function($event){if(!$event.type.indexOf(\'key\')&&_vm._k($event.keyCode,"down",40,$event.key,["Down","ArrowDown"])){ return null; }return _vm.onArrowDown($event)},function($event){if(!$event.type.indexOf(\'key\')&&_vm._k($event.keyCode,"up",38,$event.key,["Up","ArrowUp"])){ return null; }return _vm.onArrowUp($event)}]}}),_vm._v(" "),(_vm.results.length > 0)?_c(\'ul\',{directives:[{name:"show",rawName:"v-show",value:(_vm.isOpen),expression:"isOpen"}],staticClass:"autocomplete-results",attrs:{"id":"autocomplete-results"}},_vm._l((_vm.results),function(result,i){return _c(\'li\',{key:i,staticClass:"autocomplete-result",class:{ \'is-active\': i === _vm.arrowCounter },on:{"click":function($event){return _vm.setResult(result)}}},[_c(\'p\',{staticClass:"tomo-list__text"},[_c(\'span\',[_vm._v(_vm._s(result.rank ? result.rank + \'. \' : \'\')+" "+_vm._s(result.name || \'Anonymous\')+" -\\n                    "+_vm._s(result.status)+"\\n                ")]),_vm._v(" "),_c(\'small\',[_vm._v(_vm._s(result.candidate))])])])}),0):_vm._e()])}\nvar AutoCompletevue_type_template_id_39c39c24_staticRenderFns = []\n\n\n// CONCATENATED MODULE: ./app/components/AutoComplete.vue?vue&type=template&id=39c39c24&\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./app/components/AutoComplete.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n/* harmony default export */ var AutoCompletevue_type_script_lang_js_ = ({\n    name: \'AutoComplete\',\n\n    props: {\n        items: {\n            type: Array,\n            required: false,\n            default: () => []\n        },\n        isAsync: {\n            type: Boolean,\n            required: false,\n            default: false\n        }\n    },\n\n    data() {\n        return {\n            isOpen: false,\n            results: [],\n            search: \'\',\n            arrowCounter: 0\n        };\n    },\n    watch: {\n        search: async function (newValue, oldValue) {\n            if (newValue !== \'\') {\n                this.doSearch();\n            } else {\n                this.results = [];\n            }\n        }\n    },\n    mounted() {\n        document.addEventListener(\'click\', this.handleClickOutside);\n        // document.addEventListener(\'keyup\', this.focusSearchInput)\n    },\n    destroyed() {\n        document.removeEventListener(\'click\', this.handleClickOutside);\n        // document.removeEventListener(\'click\', this.focusSearchInput)\n    },\n    methods: {\n        // focusSearchInput (evt) {\n        //     if (evt.key === \'s\' || evt.key === \'/\') {\n        //         document.getElementById(\'search-input\').focus()\n        //     }\n        // },\n        onChange() {\n            // Let\'s warn the parent that a change was made\n            this.$emit(\'input\', this.search);\n\n            // Is the data given by an outside ajax request?\n            if (this.isAsync) {\n                this.isLoading = true;\n            } else {\n                // Let\'s  our flat array\n                this.filterResults();\n                if (this.results.length > 0) {\n                    this.isOpen = true;\n                    this.arrowCounter = 0;\n                }\n            }\n        },\n        filterResults() {\n            // first uncapitalize all the things\n            if (this.search) {\n                this.results = this.items.filter(item => {\n                    // search by name\n                    let found = item.name.toLowerCase().indexOf(this.search.toLowerCase()) > -1;\n\n                    // search by address\n                    if (!found) {\n                        found = item.candidate.toLowerCase().indexOf(this.search.toLowerCase()) > -1;\n                    }\n\n                    return found;\n                });\n                this.results = this.results.slice(0, 5);\n            }\n        },\n        formatResult(str) {\n            if (!str) {\n                return this.search;\n            }\n\n            if (!this.search) {\n                return str;\n            }\n\n            return str.replace(new RegExp(this.search, \'gi\'), match => {\n                return `<mark>${match}</mark>`;\n            });\n        },\n        setResult(result) {\n            this.search = \'\';\n            this.isOpen = false;\n            this.$router.push({\n                path: `/candidate/${result.candidate}`\n            });\n        },\n        onArrowDown() {\n            if (this.arrowCounter < this.results.length - 1) {\n                this.arrowCounter++;\n            }\n        },\n        onArrowUp() {\n            if (this.arrowCounter > 0) {\n                this.arrowCounter--;\n            }\n        },\n        onEnter() {\n            let result = this.results[this.arrowCounter];\n\n            if (result) {\n                this.search = \'\';\n                this.isOpen = false;\n                this.arrowCounter = -1;\n                this.$router.push({\n                    path: `/candidate/${result.candidate}`\n                });\n                document.getElementById(\'search-input\').blur();\n            }\n        },\n        onEsc() {\n            this.isOpen = false;\n            this.arrowCounter = -1;\n            document.getElementById(\'search-input\').blur();\n        },\n        handleClickOutside(evt) {\n            if (!this.$el.contains(evt.target)) {\n                this.isOpen = false;\n                this.arrowCounter = -1;\n            }\n        },\n        async doSearch() {\n            const { data } = await axios_default.a.get(\'/api/candidates/search?page=1&limit=4&query=\' + this.search || false);\n            this.results = data.items;\n            this.isOpen = true;\n        }\n    }\n});\n// CONCATENATED MODULE: ./app/components/AutoComplete.vue?vue&type=script&lang=js&\n /* harmony default export */ var components_AutoCompletevue_type_script_lang_js_ = (AutoCompletevue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(11);\n\n// CONCATENATED MODULE: ./app/components/AutoComplete.vue\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(componentNormalizer["a" /* default */])(\n  components_AutoCompletevue_type_script_lang_js_,\n  AutoCompletevue_type_template_id_39c39c24_render,\n  AutoCompletevue_type_template_id_39c39c24_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var AutoComplete = (component.exports);\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./app/App.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\n\n/* harmony default export */ var Appvue_type_script_lang_js_ = ({\n    name: \'App\',\n    metaInfo: {\n        title: \'SwapDEX Governance DApp | Smart DEX Chain\',\n        meta: [{ name: \'description\', content: \'Smart DEX Chain - Providing a professional UI which allows coin-holders to stake for masternodes, decentralized governance and explore masternode performance statistics\' // eslint-disable-line\n        }]\n    },\n    components: {\n        AutoComplete: AutoComplete\n    },\n    data() {\n        return {\n            isReady: !!this.web3,\n            showProgressBar: false,\n            selectedCandidate: null,\n            search: null,\n            isTomonet: false,\n            version: package_0.version,\n            account: \'\',\n            items: [],\n            statusClass: \'\',\n            interval: \'\',\n            notifications: [],\n            readNoti: 0,\n            needHelpLink: \'#\'\n        };\n    },\n    computed: {\n        mobileCheck: () => {\n            const isAndroid = navigator.userAgent.match(/Android/i);\n            const isIOS = navigator.userAgent.match(/iPhone|iPad|iPod/i);\n            return isAndroid || isIOS;\n        }\n    },\n    async updated() {\n        await this.checkNetworkAndLogin();\n    },\n    destroyed() {\n        if (this.interval) {\n            clearInterval(this.interval);\n        }\n    },\n    created: async function () {\n        let self = this;\n\n        try {\n            if (!self.isReady && self.NetworkProvider === \'metamask\') {\n                throw Error(\'Web3 is not properly detected. Have you installed MetaMask extension?\');\n            }\n            self.$bus.$on(\'logged\', async () => {\n                await self.checkNetworkAndLogin();\n                setTimeout(async () => {\n                    await self.getNotification();\n                }, 500);\n            });\n            // const candidates = await axios.get(\'/api/candidates\')\n            // const map = candidates.data.items.map((c) => {\n            //     return {\n            //         name: c.name ? c.name : \'Anonymous\',\n            //         address: c.candidate\n            //     }\n            // })\n            // const mapping = await Promise.all(map)\n            // self.items = mapping\n            setTimeout(async () => {\n                await self.getNotification();\n            }, 500);\n            if (this.isTomonet) {\n                this.interval = setInterval(async () => {\n                    await this.getNotification();\n                }, 40000);\n            }\n        } catch (e) {\n            console.log(e);\n        }\n    },\n    methods: {\n        searchCandidate(e) {\n            e.preventDefault();\n            const regexpAddr = /^(0x)?[0-9a-fA-F]{40}$/;\n\n            let to = null;\n            let search = (this.search || \'\').trim();\n            if (regexpAddr.test(search)) {\n                axios_default.a.get(`/api/search/${search}`).then(response => {\n                    const data = response.data;\n                    if (Object.keys(data.candidate).length > 0) {\n                        to = { path: `/candidate/${data.candidate.candidate}` };\n                    } else if (Object.keys(data.voter).length > 0) {\n                        to = { path: `/voter/${search}` };\n                    } else {\n                        this.$toasted.show(\'Not found\');\n                    }\n                    if (!to) {\n                        return false;\n                    }\n                    this.search = \'\';\n                    return this.$router.push(to);\n                }).catch(e => console.log(e));\n            }\n        },\n        goPage: function (s) {\n            this.$router.push({ path: `/candidate/${s}` });\n        },\n        async checkNetworkAndLogin() {\n            let self = this;\n            setTimeout(async () => {\n                try {\n                    let contract; // = await self.getTomoValidatorInstance()\n                    contract = self.TomoValidator;\n                    self.account = store_legacy_default.a.get(\'address\') || self.$store.state.address || (await self.getAccount());\n                    if (self.account && contract) {\n                        self.isTomonet = true;\n                    }\n                } catch (error) {}\n            }, 0);\n        },\n        signOut() {\n            store_legacy_default.a.clearAll();\n            Object.assign(this.$store.state, this.getDefaultState());\n            // this.$store.state.address = null\n\n            this.$router.go({\n                path: \'/\'\n            });\n        },\n        async readClick() {\n            this.statusClass = \'display: none;\';\n        },\n        async getNotification() {\n            try {\n                const self = this;\n                if (self.account && self.isTomonet) {\n                    const { data } = await axios_default.a.get(\'/api/voters/\' + self.account.toLowerCase() + \'/getNotification\');\n                    if (data.length > 0) {\n                        let items = [];\n                        let readNoti = 0;\n                        data.map(d => {\n                            if (!d.isRead) {\n                                readNoti++;\n                            }\n                            items.push({\n                                event: d.event,\n                                createdAt: moment_default()(d.createdAt).fromNow(),\n                                name: d.candidateName,\n                                candidate: d.candidate,\n                                isRead: d.isRead\n                            });\n                        });\n                        self.readNoti = readNoti;\n                        self.notifications = items;\n                    }\n                }\n            } catch (error) {\n                console.log(error);\n            }\n        },\n        async markReadAll() {\n            // mark read all\n            this.readNoti = 0;\n            await axios_default.a.get(\'/api/voters/\' + this.account.toLowerCase() + \'/markReadAll\');\n            this.notifications = this.notifications.map(n => {\n                n.isRead = true;\n                return n;\n            });\n        }\n    }\n});\n// CONCATENATED MODULE: ./app/App.vue?vue&type=script&lang=js&\n /* harmony default export */ var app_Appvue_type_script_lang_js_ = (Appvue_type_script_lang_js_); \n// CONCATENATED MODULE: ./app/App.vue\n\n\n\n\n\n/* normalize component */\n\nvar App_component = Object(componentNormalizer["a" /* default */])(\n  app_Appvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var App = __webpack_exports__["a"] = (App_component.exports);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///553\n')},554:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(Buffer) {/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);\n/* harmony import */ var vue_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(144);\n/* harmony import */ var vue_analytics__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(542);\n/* harmony import */ var vue_analytics__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(vue_analytics__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _App_vue__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(553);\n/* harmony import */ var _routes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(552);\n/* harmony import */ var bootstrap_vue__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(551);\n/* harmony import */ var bootstrap_vue__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(bootstrap_vue__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var bootstrap_dist_css_bootstrap_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(972);\n/* harmony import */ var bootstrap_dist_css_bootstrap_css__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(bootstrap_dist_css_bootstrap_css__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var bootstrap_vue_dist_bootstrap_vue_css__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(974);\n/* harmony import */ var bootstrap_vue_dist_bootstrap_vue_css__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(bootstrap_vue_dist_bootstrap_vue_css__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var web3__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(18);\n/* harmony import */ var web3__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(web3__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var vue_toasted__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(546);\n/* harmony import */ var vue_toasted__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(vue_toasted__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(5);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var vue_clipboards__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(547);\n/* harmony import */ var vuex__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(143);\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(211);\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(_helpers_js__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var store__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(4);\n/* harmony import */ var store__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(store__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var _ledgerhq_hw_transport_u2f__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(102);\n/* harmony import */ var _ledgerhq_hw_transport_u2f__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(_ledgerhq_hw_transport_u2f__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var _ledgerhq_hw_app_eth__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(145);\n/* harmony import */ var _ledgerhq_hw_app_eth__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(_ledgerhq_hw_app_eth__WEBPACK_IMPORTED_MODULE_16__);\n/* harmony import */ var trezor_connect__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(103);\n/* harmony import */ var trezor_connect__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(trezor_connect__WEBPACK_IMPORTED_MODULE_17__);\n/* harmony import */ var ethereumjs_tx__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(78);\n/* harmony import */ var ethereumjs_tx__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(ethereumjs_tx__WEBPACK_IMPORTED_MODULE_18__);\n/* harmony import */ var hdkey__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(213);\n/* harmony import */ var hdkey__WEBPACK_IMPORTED_MODULE_19___default = /*#__PURE__*/__webpack_require__.n(hdkey__WEBPACK_IMPORTED_MODULE_19__);\n/* harmony import */ var ethereumjs_util__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(70);\n/* harmony import */ var ethereumjs_util__WEBPACK_IMPORTED_MODULE_20___default = /*#__PURE__*/__webpack_require__.n(ethereumjs_util__WEBPACK_IMPORTED_MODULE_20__);\n/* harmony import */ var vue_meta__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(548);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(45);\n\n\n\n\n\n\n\n\n\n\n// import { default as contract } from \'truffle-contract\'\n// import TomoValidatorArtifacts from \'../build/contracts/TomoValidator.json\'\n\n\n// import BigNumber from \'bignumber.js\'\n// import HighchartsVue from \'highcharts-vue\'\n// import Highcharts from \'highcharts\'\n// import stockInit from \'highcharts/modules/stock\'\n\n\n// import HDWalletProvider from \'truffle-hdwallet-provider\'\n\n\n// Libusb is included as a submodule.\n// On Linux, you\'ll need libudev to build libusb.\n// On Ubuntu/Debian: sudo apt-get install build-essential libudev-dev\n// import Transport from \'@ledgerhq/hw-transport-node-hid\'\n\n // for browser\n\n\n\n\n\n\n\n\nvue__WEBPACK_IMPORTED_MODULE_0__["default"].use(vue_meta__WEBPACK_IMPORTED_MODULE_21__[/* default */ "a"]);\nvue__WEBPACK_IMPORTED_MODULE_0__["default"].use(bootstrap_vue__WEBPACK_IMPORTED_MODULE_5___default.a);\nvue__WEBPACK_IMPORTED_MODULE_0__["default"].use(vue_clipboards__WEBPACK_IMPORTED_MODULE_11__[/* default */ "a"]);\n\nvue__WEBPACK_IMPORTED_MODULE_0__["default"].use(vue_toasted__WEBPACK_IMPORTED_MODULE_9___default.a, {\n    position: \'bottom-right\',\n    theme: \'bubble\',\n    duration: 4000,\n    action: {\n        text: \'Dismiss\',\n        onClick: (e, toastObject) => {\n            toastObject.goAway(0);\n        }\n    },\n    singleton: true\n});\n\n// set trezor\'s manifest\ntrezor_connect__WEBPACK_IMPORTED_MODULE_17___default.a.manifest({\n    email: \'admin@tomochain.com\',\n    appUrl: \'https://master.tomochain.com\'\n});\n\n// stockInit(Highcharts)\n// Vue.use(HighchartsVue)\n\n// Vue.prototype.TomoValidator = contract(TomoValidatorArtifacts)\nvue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.isElectron = !!(window && window.process && window.process.type);\n\nvue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.setupProvider = async function (provider, wjs) {\n    vue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.NetworkProvider = provider;\n    if (wjs instanceof web3__WEBPACK_IMPORTED_MODULE_8___default.a) {\n        const config = await getConfig();\n        store__WEBPACK_IMPORTED_MODULE_14___default.a.set(\'configMaster\', config);\n        vue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.web3 = wjs;\n        vue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.TomoValidator = new wjs.eth.Contract(_utils__WEBPACK_IMPORTED_MODULE_22__[/* default */ "a"].TomoValidatorArtifacts.abi, config.blockchain.validatorAddress);\n    }\n};\n\nvue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.getAccount = async function () {\n    const provider = vue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.NetworkProvider || \'\';\n    const wjs = vue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.web3;\n    let account;\n    switch (provider) {\n        case \'metamask\':\n            // Request account access if needed - for metamask\n            if (window.ethereum) {\n                // await window.ethereum.enable()\n                await window.ethereum.request({ method: \'eth_requestAccounts\' });\n            }\n            account = (await wjs.eth.getAccounts())[0];\n            break;\n        case \'pantograph\':\n            // Request account access if needed - for metamask\n            if (window.tomochain) {\n                await window.tomochain.enable();\n            }\n            account = (await wjs.eth.getAccounts())[0];\n            break;\n        case \'tomowalletDapp\':\n            account = (await wjs.eth.getAccounts())[0];\n            break;\n        case \'tomowallet\':\n            account = this.$store.state.address;\n            break;\n        case \'custom\':\n            account = (await wjs.eth.getAccounts())[0];\n            break;\n        case \'ledger\':\n            try {\n                if (!vue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.appEth) {\n                    let transport = await new _ledgerhq_hw_transport_u2f__WEBPACK_IMPORTED_MODULE_15___default.a();\n                    vue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.appEth = await new _ledgerhq_hw_app_eth__WEBPACK_IMPORTED_MODULE_16___default.a(transport);\n                }\n                let ethAppConfig = await vue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.appEth.getAppConfiguration();\n                if (!ethAppConfig.arbitraryDataEnabled) {\n                    throw new Error(`Please go to App Setting\n                    to enable contract data and display data on your device!`);\n                }\n                let result = await vue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.appEth.getAddress(store__WEBPACK_IMPORTED_MODULE_14___default.a.get(\'hdDerivationPath\'));\n                account = result.address;\n            } catch (error) {\n                console.log(error);\n                throw error;\n            }\n            break;\n        case \'trezor\':\n            const payload = vue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.trezorPayload || store__WEBPACK_IMPORTED_MODULE_14___default.a.get(\'trezorPayload\');\n            const offset = store__WEBPACK_IMPORTED_MODULE_14___default.a.get(\'offset\');\n            account = vue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.HDWalletCreate(payload, offset);\n            store__WEBPACK_IMPORTED_MODULE_14___default.a.set(\'trezorPayload\', { xpub: payload.xpub });\n            break;\n        default:\n            break;\n    }\n    if (!account || account.length <= 0) {\n        console.log(`Couldn\'t get any accounts! Make sure\n            your Ethereum client is configured correctly.`);\n    }\n    return account;\n};\n\nvue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.loadMultipleLedgerWallets = async function (offset, limit) {\n    let u2fSupported = await _ledgerhq_hw_transport_u2f__WEBPACK_IMPORTED_MODULE_15___default.a.isSupported();\n    if (!u2fSupported) {\n        throw new Error(`U2F not supported in this browser. \n                Please try using Google Chrome with a secure (SSL / HTTPS) connection!`);\n    }\n    await vue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.detectNetwork(\'ledger\');\n    if (!vue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.appEth) {\n        let transport = await _ledgerhq_hw_transport_u2f__WEBPACK_IMPORTED_MODULE_15___default.a.create();\n        vue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.appEth = await new _ledgerhq_hw_app_eth__WEBPACK_IMPORTED_MODULE_16___default.a(transport);\n    }\n    const payload = vue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.ledgerPayload;\n    let web3 = vue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.web3;\n    let balance = 0;\n    let convertedAddress;\n    let wallets = {};\n\n    for (let i = offset; i < offset + limit; i++) {\n        convertedAddress = vue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.HDWalletCreate(payload, i);\n        balance = await web3.eth.getBalance(convertedAddress);\n        wallets[i] = {\n            address: convertedAddress,\n            balance: parseFloat(web3.utils.fromWei(balance, \'ether\')).toFixed(2)\n        };\n    }\n    vue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.ledgerPayload = \'\';\n    return wallets;\n};\n\nvue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.unlockTrezor = async () => {\n    try {\n        const result = await trezor_connect__WEBPACK_IMPORTED_MODULE_17___default.a.getPublicKey({\n            path: store__WEBPACK_IMPORTED_MODULE_14___default.a.get(\'hdDerivationPath\')\n        });\n        vue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.trezorPayload = result.payload;\n    } catch (error) {\n        console.log(error);\n        throw error;\n    }\n};\n\nvue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.unlockLedger = async () => {\n    try {\n        if (!vue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.appEth) {\n            let transport = await _ledgerhq_hw_transport_u2f__WEBPACK_IMPORTED_MODULE_15___default.a.create();\n            vue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.appEth = await new _ledgerhq_hw_app_eth__WEBPACK_IMPORTED_MODULE_16___default.a(transport);\n        }\n        const path = store__WEBPACK_IMPORTED_MODULE_14___default.a.get(\'hdDerivationPath\');\n\n        const result = await vue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.appEth.getAddress(path, false, true);\n        vue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.ledgerPayload = result;\n    } catch (error) {\n        console.log(error);\n        throw error;\n    }\n};\n\nvue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.HDWalletCreate = (payload, index) => {\n    const provider = vue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.NetworkProvider;\n    let derivedKey;\n    if (provider === \'trezor\') {\n        const xpub = payload.xpub;\n        const hdWallet = hdkey__WEBPACK_IMPORTED_MODULE_19__["fromExtendedKey"](xpub);\n        derivedKey = hdWallet.derive(\'m/\' + index);\n    } else {\n        const pubKey = payload.publicKey;\n        const chainCode = payload.chainCode;\n        const hdkey = new hdkey__WEBPACK_IMPORTED_MODULE_19__();\n        hdkey.publicKey = Buffer.from(pubKey, \'hex\');\n        hdkey.chainCode = Buffer.from(chainCode, \'hex\');\n        derivedKey = hdkey.derive(\'m/\' + index);\n    }\n    let pubKey = ethereumjs_util__WEBPACK_IMPORTED_MODULE_20__["bufferToHex"](derivedKey.publicKey);\n    const buff = ethereumjs_util__WEBPACK_IMPORTED_MODULE_20__["publicToAddress"](pubKey, true);\n\n    return ethereumjs_util__WEBPACK_IMPORTED_MODULE_20__["bufferToHex"](buff);\n};\n\nvue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.loadTrezorWallets = async (offset, limit) => {\n    try {\n        const wallets = {};\n        const payload = vue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.trezorPayload;\n        if (payload && !payload.error) {\n            let convertedAddress;\n            let balance;\n            let web3;\n            if (!vue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.web3) {\n                await vue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.detectNetwork(\'trezor\');\n            }\n            web3 = vue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.web3;\n            for (let i = offset; i < offset + limit; i++) {\n                convertedAddress = vue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.HDWalletCreate(payload, i);\n                balance = await web3.eth.getBalance(convertedAddress);\n                wallets[i] = {\n                    address: convertedAddress,\n                    balance: parseFloat(web3.utils.fromWei(balance, \'ether\')).toFixed(2)\n                };\n            }\n            return wallets;\n        } else {\n            throw payload.error || \'Something went wrong\';\n        }\n    } catch (error) {\n        console.log(error);\n        throw error;\n    }\n};\n\nvue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.formatNumber = _utils__WEBPACK_IMPORTED_MODULE_22__[/* default */ "a"].formatNumber;\n\nvue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.formatCurrencySymbol = _utils__WEBPACK_IMPORTED_MODULE_22__[/* default */ "a"].formatCurrencySymbol;\n\nvue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.getCurrencySymbol = _utils__WEBPACK_IMPORTED_MODULE_22__[/* default */ "a"].getCurrencySymbol;\n\nvue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.checkLongNumber = _utils__WEBPACK_IMPORTED_MODULE_22__[/* default */ "a"].checkLongNumber;\n\nvue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.formatBigNumber = _utils__WEBPACK_IMPORTED_MODULE_22__[/* default */ "a"].formatBigNumber;\n\nconst getConfig = vue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.appConfig = async function () {\n    let config = await axios__WEBPACK_IMPORTED_MODULE_10___default.a.get(\'/api/config\');\n    return config.data;\n};\n\nvue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.getSecondsToHms = _utils__WEBPACK_IMPORTED_MODULE_22__[/* default */ "a"].getSecondsToHms;\n\nvue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.serializeQuery = _utils__WEBPACK_IMPORTED_MODULE_22__[/* default */ "a"].serializeQuery;\n\nvue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.truncate = _utils__WEBPACK_IMPORTED_MODULE_22__[/* default */ "a"].truncate;\n\nvue__WEBPACK_IMPORTED_MODULE_0__["default"].use(vue_router__WEBPACK_IMPORTED_MODULE_1__["default"]);\n\nconst router = new vue_router__WEBPACK_IMPORTED_MODULE_1__["default"]({\n    mode: \'history\',\n    routes: _routes__WEBPACK_IMPORTED_MODULE_4__[/* default */ "a"]\n});\n\nrouter.beforeEach(async (to, from, next) => {\n    const provider = vue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.NetworkProvider || store__WEBPACK_IMPORTED_MODULE_14___default.a.get(\'network\') || null;\n    await vue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.detectNetwork(provider);\n    next();\n});\n\ngetConfig().then(config => {\n    // let provider = \'tomowallet\'\n    // var web3js = new Web3(new Web3.providers.HttpProvider(config.blockchain.internalRpc))\n    // Vue.prototype.setupProvider(provider, web3js)\n    store__WEBPACK_IMPORTED_MODULE_14___default.a.set(\'configMaster\', config);\n    vue__WEBPACK_IMPORTED_MODULE_0__["default"].use(vue_analytics__WEBPACK_IMPORTED_MODULE_2___default.a, {\n        id: config.GA,\n        linkers: [\'master.tomochain.com\'],\n        router,\n        autoTraking: {\n            screenView: true\n        }\n    });\n}).catch(e => {\n    console.log(e);\n    throw e;\n});\n\nvue__WEBPACK_IMPORTED_MODULE_0__["default"].use(vuex__WEBPACK_IMPORTED_MODULE_12__["default"]);\n\nconst store = new vuex__WEBPACK_IMPORTED_MODULE_12__["default"].Store({\n    state: {\n        address: null\n    }\n});\nvue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.detectNetwork = async function (provider) {\n    try {\n        let wjs = this.web3;\n        const config = store__WEBPACK_IMPORTED_MODULE_14___default.a.get(\'configMaster\') || (await getConfig());\n        const chainConfig = config.blockchain;\n        if (!wjs) {\n            switch (provider) {\n                case \'metamask\':\n                    if (window.ethereum) {\n                        let p = window.ethereum;\n                        wjs = new web3__WEBPACK_IMPORTED_MODULE_8___default.a(p);\n                    }\n                    break;\n                case \'tomowalletDapp\':\n                    if (window.web3) {\n                        if (window.web3.currentProvider) {\n                            let p = window.web3.currentProvider;\n                            wjs = new web3__WEBPACK_IMPORTED_MODULE_8___default.a(p);\n                        } else {\n                            wjs = window.web3;\n                        }\n                    }\n                    break;\n                case \'pantograph\':\n                    if (window.tomoWeb3) {\n                        if (window.tomoWeb3.currentProvider) {\n                            let pp = window.tomoWeb3.currentProvider;\n                            wjs = new web3__WEBPACK_IMPORTED_MODULE_8___default.a(pp);\n                        } else {\n                            wjs = window.tomoWeb3;\n                        }\n                    }\n                    break;\n                case \'tomowallet\':\n                    wjs = new web3__WEBPACK_IMPORTED_MODULE_8___default.a(new _helpers_js__WEBPACK_IMPORTED_MODULE_13__["HDWalletProvider"](\'\', chainConfig.rpc, 0, 1, true));\n                    break;\n                case \'trezor\':\n                case \'ledger\':\n                    // wjs = new Web3(new Web3.providers.WebsocketProvider(chainConfig.ws))\n                    wjs = new web3__WEBPACK_IMPORTED_MODULE_8___default.a(new web3__WEBPACK_IMPORTED_MODULE_8___default.a.providers.HttpProvider(chainConfig.rpc));\n                    break;\n                default:\n                    break;\n            }\n            await this.setupProvider(provider, (await wjs));\n        }\n    } catch (error) {\n        console.log(error);\n    }\n};\n\n/**\n * @return TomoValidator contract instance\n */\nvue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.getTomoValidatorInstance = async function () {\n    // workaround for web3 version 1.0.0\n    // @link https://github.com/trufflesuite/truffle-contract/issues/57#issuecomment-331300494\n    if (typeof vue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.TomoValidator.currentProvider.sendAsync !== \'function\') {\n        vue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.TomoValidator.currentProvider.sendAsync = function () {\n            return vue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.TomoValidator.currentProvider.send.apply(vue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.TomoValidator.currentProvider, arguments);\n        };\n    }\n    let instance = await vue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.TomoValidator.deployed();\n    return instance;\n};\n\n/**\n * @param object txParams\n * @return object signature {r, s, v}\n */\nvue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.signTransaction = async function (txParams) {\n    const path = store__WEBPACK_IMPORTED_MODULE_14___default.a.get(\'hdDerivationPath\');\n    const provider = vue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.NetworkProvider;\n    let signature;\n    if (provider === \'ledger\') {\n        const config = store__WEBPACK_IMPORTED_MODULE_14___default.a.get(\'configMaster\') || (await getConfig());\n        const chainConfig = config.blockchain;\n        const rawTx = new ethereumjs_tx__WEBPACK_IMPORTED_MODULE_18___default.a(txParams);\n        rawTx.v = Buffer.from([chainConfig.networkId]);\n        const serializedRawTx = rawTx.serialize().toString(\'hex\');\n        signature = await vue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.appEth.signTransaction(path, serializedRawTx);\n    }\n    if (provider === \'trezor\') {\n        try {\n            const result = await trezor_connect__WEBPACK_IMPORTED_MODULE_17___default.a.ethereumSignTransaction({\n                path,\n                transaction: txParams\n            });\n            signature = result.payload;\n        } catch (error) {\n            console.log(error);\n            throw error;\n        }\n    }\n    return signature;\n};\n\n/**\n * @param object txParams\n * @param object signature {r,s,v}\n * @return transactionReceipt\n */\nvue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.sendSignedTransaction = function (txParams, signature) {\n    return new Promise((resolve, reject) => {\n        try {\n            // "hexify" the keys\n            Object.keys(signature).map((key, _) => {\n                if (signature[key].startsWith(\'0x\')) {\n                    return signature[key];\n                } else signature[key] = \'0x\' + signature[key];\n            });\n            let txObj = Object.assign({}, txParams, signature);\n            let tx = new ethereumjs_tx__WEBPACK_IMPORTED_MODULE_18___default.a(txObj);\n            let serializedTx = \'0x\' + tx.serialize().toString(\'hex\');\n            // web3 v0.2, method name is sendRawTransaction\n            // You are using web3 v1.0. The method was renamed to sendSignedTransaction.\n            vue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.web3.eth.sendSignedTransaction(serializedTx).on(\'transactionHash\', txHash => resolve(txHash)).catch(error => reject(error));\n        } catch (error) {\n            reject(error);\n        }\n    });\n};\n\nvue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.signMessage = async function (message) {\n    try {\n        const path = store__WEBPACK_IMPORTED_MODULE_14___default.a.get(\'hdDerivationPath\');\n        const provider = vue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.NetworkProvider;\n        let result;\n        switch (provider) {\n            case \'ledger\':\n                const signature = await vue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.appEth.signPersonalMessage(path, Buffer.from(message).toString(\'hex\'));\n                let v = signature[\'v\'] - 27;\n                v = v.toString(16);\n                if (v.length < 2) {\n                    v = \'0\' + v;\n                }\n                result = \'0x\' + signature[\'r\'] + signature[\'s\'] + v;\n                break;\n            case \'trezor\':\n                const sig = await trezor_connect__WEBPACK_IMPORTED_MODULE_17___default.a.ethereumSignMessage({\n                    path,\n                    message\n                });\n                result = \'0x\' + sig.payload.signature || false;\n                break;\n            default:\n                break;\n        }\n        return result;\n    } catch (error) {\n        console.log(error);\n        throw error;\n    }\n};\n\nconst EventBus = new vue__WEBPACK_IMPORTED_MODULE_0__["default"]();\n\nvue__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.$bus = EventBus;\n\nnew vue__WEBPACK_IMPORTED_MODULE_0__["default"]({ // eslint-disable-line no-new\n    el: \'#app\',\n    store,\n    router: router,\n    components: { App: _App_vue__WEBPACK_IMPORTED_MODULE_3__[/* default */ "a"] },\n    template: \'<App/>\'\n});\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(2).Buffer))\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///554\n')},584:function(module,exports,__webpack_require__){eval('var map = {\n\t"./af": 222,\n\t"./af.js": 222,\n\t"./ar": 223,\n\t"./ar-dz": 224,\n\t"./ar-dz.js": 224,\n\t"./ar-kw": 225,\n\t"./ar-kw.js": 225,\n\t"./ar-ly": 226,\n\t"./ar-ly.js": 226,\n\t"./ar-ma": 227,\n\t"./ar-ma.js": 227,\n\t"./ar-sa": 228,\n\t"./ar-sa.js": 228,\n\t"./ar-tn": 229,\n\t"./ar-tn.js": 229,\n\t"./ar.js": 223,\n\t"./az": 230,\n\t"./az.js": 230,\n\t"./be": 231,\n\t"./be.js": 231,\n\t"./bg": 232,\n\t"./bg.js": 232,\n\t"./bm": 233,\n\t"./bm.js": 233,\n\t"./bn": 234,\n\t"./bn.js": 234,\n\t"./bo": 235,\n\t"./bo.js": 235,\n\t"./br": 236,\n\t"./br.js": 236,\n\t"./bs": 237,\n\t"./bs.js": 237,\n\t"./ca": 238,\n\t"./ca.js": 238,\n\t"./cs": 239,\n\t"./cs.js": 239,\n\t"./cv": 240,\n\t"./cv.js": 240,\n\t"./cy": 241,\n\t"./cy.js": 241,\n\t"./da": 242,\n\t"./da.js": 242,\n\t"./de": 243,\n\t"./de-at": 244,\n\t"./de-at.js": 244,\n\t"./de-ch": 245,\n\t"./de-ch.js": 245,\n\t"./de.js": 243,\n\t"./dv": 246,\n\t"./dv.js": 246,\n\t"./el": 247,\n\t"./el.js": 247,\n\t"./en-SG": 248,\n\t"./en-SG.js": 248,\n\t"./en-au": 249,\n\t"./en-au.js": 249,\n\t"./en-ca": 250,\n\t"./en-ca.js": 250,\n\t"./en-gb": 251,\n\t"./en-gb.js": 251,\n\t"./en-ie": 252,\n\t"./en-ie.js": 252,\n\t"./en-il": 253,\n\t"./en-il.js": 253,\n\t"./en-nz": 254,\n\t"./en-nz.js": 254,\n\t"./eo": 255,\n\t"./eo.js": 255,\n\t"./es": 256,\n\t"./es-do": 257,\n\t"./es-do.js": 257,\n\t"./es-us": 258,\n\t"./es-us.js": 258,\n\t"./es.js": 256,\n\t"./et": 259,\n\t"./et.js": 259,\n\t"./eu": 260,\n\t"./eu.js": 260,\n\t"./fa": 261,\n\t"./fa.js": 261,\n\t"./fi": 262,\n\t"./fi.js": 262,\n\t"./fo": 263,\n\t"./fo.js": 263,\n\t"./fr": 264,\n\t"./fr-ca": 265,\n\t"./fr-ca.js": 265,\n\t"./fr-ch": 266,\n\t"./fr-ch.js": 266,\n\t"./fr.js": 264,\n\t"./fy": 267,\n\t"./fy.js": 267,\n\t"./ga": 268,\n\t"./ga.js": 268,\n\t"./gd": 269,\n\t"./gd.js": 269,\n\t"./gl": 270,\n\t"./gl.js": 270,\n\t"./gom-latn": 271,\n\t"./gom-latn.js": 271,\n\t"./gu": 272,\n\t"./gu.js": 272,\n\t"./he": 273,\n\t"./he.js": 273,\n\t"./hi": 274,\n\t"./hi.js": 274,\n\t"./hr": 275,\n\t"./hr.js": 275,\n\t"./hu": 276,\n\t"./hu.js": 276,\n\t"./hy-am": 277,\n\t"./hy-am.js": 277,\n\t"./id": 278,\n\t"./id.js": 278,\n\t"./is": 279,\n\t"./is.js": 279,\n\t"./it": 280,\n\t"./it-ch": 281,\n\t"./it-ch.js": 281,\n\t"./it.js": 280,\n\t"./ja": 282,\n\t"./ja.js": 282,\n\t"./jv": 283,\n\t"./jv.js": 283,\n\t"./ka": 284,\n\t"./ka.js": 284,\n\t"./kk": 285,\n\t"./kk.js": 285,\n\t"./km": 286,\n\t"./km.js": 286,\n\t"./kn": 287,\n\t"./kn.js": 287,\n\t"./ko": 288,\n\t"./ko.js": 288,\n\t"./ku": 289,\n\t"./ku.js": 289,\n\t"./ky": 290,\n\t"./ky.js": 290,\n\t"./lb": 291,\n\t"./lb.js": 291,\n\t"./lo": 292,\n\t"./lo.js": 292,\n\t"./lt": 293,\n\t"./lt.js": 293,\n\t"./lv": 294,\n\t"./lv.js": 294,\n\t"./me": 295,\n\t"./me.js": 295,\n\t"./mi": 296,\n\t"./mi.js": 296,\n\t"./mk": 297,\n\t"./mk.js": 297,\n\t"./ml": 298,\n\t"./ml.js": 298,\n\t"./mn": 299,\n\t"./mn.js": 299,\n\t"./mr": 300,\n\t"./mr.js": 300,\n\t"./ms": 301,\n\t"./ms-my": 302,\n\t"./ms-my.js": 302,\n\t"./ms.js": 301,\n\t"./mt": 303,\n\t"./mt.js": 303,\n\t"./my": 304,\n\t"./my.js": 304,\n\t"./nb": 305,\n\t"./nb.js": 305,\n\t"./ne": 306,\n\t"./ne.js": 306,\n\t"./nl": 307,\n\t"./nl-be": 308,\n\t"./nl-be.js": 308,\n\t"./nl.js": 307,\n\t"./nn": 309,\n\t"./nn.js": 309,\n\t"./pa-in": 310,\n\t"./pa-in.js": 310,\n\t"./pl": 311,\n\t"./pl.js": 311,\n\t"./pt": 312,\n\t"./pt-br": 313,\n\t"./pt-br.js": 313,\n\t"./pt.js": 312,\n\t"./ro": 314,\n\t"./ro.js": 314,\n\t"./ru": 315,\n\t"./ru.js": 315,\n\t"./sd": 316,\n\t"./sd.js": 316,\n\t"./se": 317,\n\t"./se.js": 317,\n\t"./si": 318,\n\t"./si.js": 318,\n\t"./sk": 319,\n\t"./sk.js": 319,\n\t"./sl": 320,\n\t"./sl.js": 320,\n\t"./sq": 321,\n\t"./sq.js": 321,\n\t"./sr": 322,\n\t"./sr-cyrl": 323,\n\t"./sr-cyrl.js": 323,\n\t"./sr.js": 322,\n\t"./ss": 324,\n\t"./ss.js": 324,\n\t"./sv": 325,\n\t"./sv.js": 325,\n\t"./sw": 326,\n\t"./sw.js": 326,\n\t"./ta": 327,\n\t"./ta.js": 327,\n\t"./te": 328,\n\t"./te.js": 328,\n\t"./tet": 329,\n\t"./tet.js": 329,\n\t"./tg": 330,\n\t"./tg.js": 330,\n\t"./th": 331,\n\t"./th.js": 331,\n\t"./tl-ph": 332,\n\t"./tl-ph.js": 332,\n\t"./tlh": 333,\n\t"./tlh.js": 333,\n\t"./tr": 334,\n\t"./tr.js": 334,\n\t"./tzl": 335,\n\t"./tzl.js": 335,\n\t"./tzm": 336,\n\t"./tzm-latn": 337,\n\t"./tzm-latn.js": 337,\n\t"./tzm.js": 336,\n\t"./ug-cn": 338,\n\t"./ug-cn.js": 338,\n\t"./uk": 339,\n\t"./uk.js": 339,\n\t"./ur": 340,\n\t"./ur.js": 340,\n\t"./uz": 341,\n\t"./uz-latn": 342,\n\t"./uz-latn.js": 342,\n\t"./uz.js": 341,\n\t"./vi": 343,\n\t"./vi.js": 343,\n\t"./x-pseudo": 344,\n\t"./x-pseudo.js": 344,\n\t"./yo": 345,\n\t"./yo.js": 345,\n\t"./zh-cn": 346,\n\t"./zh-cn.js": 346,\n\t"./zh-hk": 347,\n\t"./zh-hk.js": 347,\n\t"./zh-tw": 348,\n\t"./zh-tw.js": 348\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error("Cannot find module \'" + req + "\'");\n\t\te.code = \'MODULE_NOT_FOUND\';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 584;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///584\n')},852:function(module,exports){eval("/* (ignored) */\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vYnVmZmVyIChpZ25vcmVkKT9kZjNhIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6Ijg1Mi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIChpZ25vcmVkKSAqLyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///852\n")},955:function(module,exports){eval("/* (ignored) */\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vcmVxdWVzdCAoaWdub3JlZCk/NmRkYyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiI5NTUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiAoaWdub3JlZCkgKi8iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///955\n")}},[[554,2,0,7]]]);